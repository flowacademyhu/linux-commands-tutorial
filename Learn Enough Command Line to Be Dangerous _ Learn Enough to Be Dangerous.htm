<!DOCTYPE html>
<!-- saved from url=(0049)https://www.learnenough.com/command-line-tutorial -->
<html id="custDomain" class="wf-proximanova-n7-active wf-proximanova-n1-active wf-proximanova-n4-active wf-proximanova-i4-active wf-lust-n4-active gr__learnenough_com wf-proximanova-i7-inactive wf-futurapt-n3-inactive wf-lust-i4-inactive wf-active"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Learn Enough Command Line to Be Dangerous |  Learn Enough to Be Dangerous</title>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/cspblocked.js"></script><script type="text/javascript" async="" src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/54eea5d20a23b37d87000040.js"></script><script async="" src="https://connect.facebook.net/en_US/fbevents.js"></script><script async="" src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/analytics.js"></script><script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/1197428788.js" type="text/javascript"></script>
<link href="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/font-awesome.min.css" rel="stylesheet">
<link href="https://www.learnenough.com/favicon-le.png" rel="icon">
<link href="https://www.learnenough.com/le/apple-touch-icon-precomposed.png" rel="apple-touch-icon-precomposed">
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/nbl5sqs.js"></script>
<style type="text/css">.tk-proxima-nova{font-family:"proxima-nova",sans-serif;}.tk-futura-pt{font-family:"futura-pt",sans-serif;}.tk-lust{font-family:"lust",sans-serif;}</style><style type="text/css">@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/75f50f/00000000000000003b9b093b/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3) format("woff2"),url(https://use.typekit.net/af/75f50f/00000000000000003b9b093b/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3) format("woff"),url(https://use.typekit.net/af/75f50f/00000000000000003b9b093b/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3) format("opentype");font-weight:700;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/878136/00000000000000003b9b093a/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3) format("woff2"),url(https://use.typekit.net/af/878136/00000000000000003b9b093a/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3) format("woff"),url(https://use.typekit.net/af/878136/00000000000000003b9b093a/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3) format("opentype");font-weight:700;font-style:italic;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/b34c43/00000000000000003b9b0931/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n1&v=3) format("woff2"),url(https://use.typekit.net/af/b34c43/00000000000000003b9b0931/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n1&v=3) format("woff"),url(https://use.typekit.net/af/b34c43/00000000000000003b9b0931/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n1&v=3) format("opentype");font-weight:100;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/03ff77/00000000000000003b9b0934/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/03ff77/00000000000000003b9b0934/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/03ff77/00000000000000003b9b0934/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/d0b1d4/00000000000000003b9b0935/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("woff2"),url(https://use.typekit.net/af/d0b1d4/00000000000000003b9b0935/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("woff"),url(https://use.typekit.net/af/d0b1d4/00000000000000003b9b0935/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("opentype");font-weight:400;font-style:italic;}@font-face{font-family:futura-pt;src:url(https://use.typekit.net/af/a95b40/000000000000000000010096/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3) format("woff2"),url(https://use.typekit.net/af/a95b40/000000000000000000010096/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3) format("woff"),url(https://use.typekit.net/af/a95b40/000000000000000000010096/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3) format("opentype");font-weight:300;font-style:normal;}@font-face{font-family:lust;src:url(https://use.typekit.net/af/c7d676/000000000000000000014313/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("woff2"),url(https://use.typekit.net/af/c7d676/000000000000000000014313/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("woff"),url(https://use.typekit.net/af/c7d676/000000000000000000014313/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3) format("opentype");font-weight:400;font-style:italic;}@font-face{font-family:lust;src:url(https://use.typekit.net/af/22a9bb/000000000000000000014314/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/22a9bb/000000000000000000014314/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/22a9bb/000000000000000000014314/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}</style><script>
try{Typekit.load();}catch(e){}
</script>
<link rel="stylesheet" media="screen" href="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/novo_le-4e6e6a0c6a4f30600927f82bf899de687d1c17f11101926aae39848a61f31104.css">

<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="J6oyyptDFgg+u80YBjf4xn3wYsd+mHCD7o7IEhsSV1AY7MlsUEAX/AupKwcdfSmDgAPJl6KP9cqSVdkgNh7JiA==">
<meta content="width=device-width, initial-scale=1" name="viewport">
<meta content="https://www.softcover.io/books/28fdb94f/learn_enough_command_line" property="og:url">
<meta content="Learn Enough Command Line to Be Dangerous" property="og:title">
<meta content="A tutorial introduction to the Unix command line" property="og:description">
<meta content="Softcover.io" property="og:site_name">
<meta content="https://softcover.s3.amazonaws.com/636/learn_enough_command_line/images/cover-web.png" property="og:image">
<meta content="https://softcover.s3.amazonaws.com/636/learn_enough_command_line/images/cover-web.png" property="og:image:secure_url">
<meta content="image/png" property="og:image:type">
<meta content="500" property="og:image:width">
<meta content="500" property="og:image:height">
<link href="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/video-js.css" rel="stylesheet">
<script>
  window.Config = {
    env: "production",
    bucket: "softcover",
    previewBucket: "softcover-cloud"
  }
</script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/jquery-2.0.3.min.js" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/jquery.formalize.min.js" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/underscore-min.js" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/hammer.min.js" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/saved_resource" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/jsapi" type="text/javascript"></script>
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/application-16d95f2c375156449db0ae52bfcceacb72321093cb5f50953eb5be736aa994cb.js"></script>

<link href="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/jquery.qtip.min.css" rel="stylesheet">
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/jquery.qtip.min.js" type="text/javascript"></script>
<script>
  Stripe.setPublishableKey('pk_live_Xn1p0BfxqKxkAxtEr03P7wmd');
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('require', 'linker');
  ga('linker:autoLink', ['www.learnenough.com', 'softcover.io']);

  ga('create', 'UA-46858978-1', 'softcover.io', {'allowLinker': true});
  ga('send', 'pageview');

  ga('create', 'UA-46858978-2', 'auto', {
    'name': 'book',
    'allowLinker': true
  });

  ga('book.send', 'pageview');

</script>

<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '120259081996654', {
    em: '',
  });
  fbq('track', 'PageView');
</script>
<noscript>&lt;img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=120259081996654&amp;ev=PageView&amp;noscript=1"
/&gt;</noscript>
<!-- End Facebook Pixel Code -->


<meta content="n4FYakgLVe1smRPU7gMdoXLgAUHVQDHevdSPlKGqLO4" name="google-site-verification">
<script src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/MathJax.js" id="mathJaxJS"></script><script type="text/javascript" async="" src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/tagjs"></script><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/saved_resource(1)" width="1" height="1" border="0"><img src="https://secure.adnxs.com/seg?t=2&amp;add=2570656" width="1" height="1" border="0" style="display: none !important;"><img src="https://secure.adnxs.com/seg?t=2&amp;add=2559016" width="1" height="1" border="0" style="display: none !important;"><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax.MathJax_FullWidth {text-align: center; display: table-cell!important; width: 10000em!important}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax_LineBox {display: table!important}
.MathJax_LineBox span {display: table-cell!important; width: 10000em!important; min-width: 0; max-width: none; padding: 0; border: 0; margin: 0}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Main-bold; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Main-italic; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Math-italic; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Caligraphic; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf?V=2.7.1') format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.woff?V=2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf?V=2.7.1') format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>
<body class="course side-menu-opened" data-gr-c-s-loaded="true" style=""><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"></div></div><div id="StayFocusd-infobar" style="display:none;">
    <img src="chrome-extension://laankejkbhbdhmipfmgcngdelahlfoji/common/img/eye_19x19_red.png">
    <span id="StayFocusd-infobar-msg"></span>
    <span id="StayFocusd-infobar-links">
        <a id="StayFocusd-infobar-never-show">hide forever</a>&nbsp;&nbsp;|&nbsp;&nbsp;
        <a id="StayFocusd-infobar-hide">hide once</a>
    </span>
</div><div id="MathJax_Message" style="display: none;"></div>
<div class="container">
<div class="site-header">
<div class="side-menu-toggle">
<a class="side-menu-close" href="javascript://"><i class="fa fa-close"></i>
</a><a class="side-menu-open" href="javascript://"><i class="fa fa-bars"></i>
</a></div>
<nav class="nav">
<a class="logoLink artLogo" href="https://www.learnenough.com/"><div class="svg le-logo"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 801 1041" style="enable-background:new 0 0 801 1041;" xml:space="preserve">
<path d="M569.9,478.6l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H410.5l-3.5,3.5v358.6l1,2.5l24.3,24.3l1.9,0.5l0.5,0.5h135.1l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H488v-89.9h77l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H488v-81H569.9z M544.2,412.6l17.3,17.3H436.2L419,412.6H544.2z M414,417.6l17.3,17.3v348.7L414,766.3V417.6z M544.2,729.5l17.3,17.3H488v-17.3H544.2z M539.2,566.6l17.3,17.3H488v-17.3H539.2z M484.5,471.6l-3.5,3.5v112.3l3.5,3.5h77v34.7h-77l-3.5,3.5v121.2l3.5,3.5h81.9v34.7H438.3V436.9h128.1v34.7H484.5z"></path>
<path d="M401.5,747.8l-24.3-24.3l-2.5-1h-55.7V433.4l-0.2-0.2l-0.8-2.3l-24.3-24.3l-2.5-1h-49.7l-3.5,3.5v358.6l1,2.5l24.3,24.3l1.9,0.5l0.6,0.6H399l3.5-3.5v-41.7L401.5,747.8z M373.3,729.5l17.3,17.3h-71.5v-17.3H373.3z M307.1,429.9h-39.8l-17.3-17.3h39.8L307.1,429.9z M245.1,417.6l17.3,17.3v348.7l-17.3-17.3V417.6z M395.5,788.5H269.4V436.9h42.7v313.4l3.5,3.5h79.9V788.5z"></path>
<path d="M691.8,600.3c0-77.2-30-149.7-84.6-204.3c-47.3-47.3-108.2-76.2-173.9-83c0.4-22.2,0.6-35.3,0.6-35.7l-2.6-3.8c-1.8-0.6-3.5-2.2-5.1-4.2l5.1,0c1.8,0.1,22.1,0.8,33.2-11.2c5.5-6,8.5-14,8.5-23.4l0.1-13.3l-3.5-3.5l-16-0.1l-3.5,3.5l-0.1,13.3c0,3.3-0.7,5.5-2.4,7.3c-3.7,4-12.4,4.9-15.4,4.9l-11.9,0c1.4-13.4,3.7-39.7,3.9-72.2c0.1-34.4-5.7-68.9-6.6-73.7c4.9-5.8,7.6-13.5,7.6-21.6C425.2,62,413,47.9,398,47.8c0,0-0.1,0-0.1,0c-15,0-27.2,14-27.3,31.2c0,8.1,2.6,15.8,7.5,21.7c-0.9,4.8-7,39.3-7.2,73.6c-0.1,32.5,2,58.9,3.3,72.3l-11.1,0c-1.8-0.1-22.1-0.8-33.2,11.2c-5.5,6-8.5,14-8.5,23.4l-0.1,13.3l3.5,3.5l16.2,0.1l3.5-3.5l0.1-13.3c0-3.3,0.7-5.5,2.4-7.3c3.7-4,12.3-4.9,15.3-4.9l5.9,0c-1.6,1.9-3.4,3.5-5.2,4.1l-2.6,3.8c0,0.5,0.2,14.2,0.6,37.4c-61.2,8.9-117.8,37.1-162.3,81.6C144.1,450.6,114,523.1,114,600.3s30,149.7,84.6,204.3c49,49,112.4,78.2,180.7,83.7c6.4,96.9,11.7,103.7,14.1,106.6l3.3,2.6l2.9-2.6c2.4-2.9,7.8-9.7,14.3-105.9c73-2.7,141.3-32.4,193.2-84.4C661.8,750,691.8,677.5,691.8,600.3z M377.6,79.1c0.1-13.4,9.1-24.2,20.3-24.2c0,0,0,0,0.1,0c7.7,0,14.5,5.3,17.8,13l-10.6-4.3c1.1,1.6,2.1,3.4,2.8,5.5l9.4,3.8c0.5,2,0.7,4.2,0.7,6.4c0,0.2,0,0.5,0,0.7l-8.4-3.4c0.1,0.8,0.1,1.7,0.1,2.5c0,0.6,0,1.2-0.1,1.8l8,3.2c-0.4,2.1-1,4.2-1.8,6.1l-7.3-2.9c-0.4,1.3-0.9,2.6-1.4,3.7l6.8,2.8c-0.6,1-1.3,1.9-2,2.8c-0.7,0.8-1.5,1.6-2.3,2.3l-0.8-0.3l-5.3-2.2c-1.1,1.2-2.3,2.1-3.6,2.9l5.7,2.3c-2.5,1.2-5.1,1.9-7.9,1.9c-5.3,0-10.3-2.5-14.1-7C379.8,91.9,377.6,85.7,377.6,79.1z M377.9,174.4c0.1-28.2,4.4-57,6.3-68.1c4.1,2.7,8.7,4.2,13.5,4.2c0,0,0.1,0,0.1,0c4.8,0,9.4-1.4,13.5-4.1c0.2,1.3,0.5,2.9,0.7,4.7l-2.1-0.9l-2.9,3.1l5.7,2.3c0.3,2.2,0.6,4.6,1,7.3l-17.4-7.1c0.2,1.4,0.4,3,0.6,4.6l17.3,7c0.3,2.3,0.5,4.7,0.8,7.2l-17.2-7c0.2,1.5,0.3,3,0.5,4.5l17.2,7c0.2,2.3,0.4,4.7,0.6,7.1l-19.6-8c-1.7,0.1-3.7-0.4-3.7-0.4s0.8,1.7,1.9,4l21.7,8.8c0.2,2.3,0.3,4.7,0.4,7l-18.3-7.4c0.9,2.1,1.5,3.9,1.7,5l16.8,6.8c0.1,2.3,0.1,4.6,0.2,6.9l-16.6-6.7c0.1,1.5,0.1,2.9,0.1,4.4l16.5,6.7c0,0.4,0,0.8,0,1.2c0,1.9,0,3.8,0,5.7l-16.7-6.8c-1.1,1.7-5.8-0.2-5.8-0.2s0.4,1,0.9,2.5l21.6,8.7c0,2.3-0.1,4.6-0.2,6.8l-18.6-7.5c0.6,1.8,1.2,3.6,1.6,5l16.9,6.8c-0.1,2.3-0.2,4.6-0.3,6.8l-16.2-6.6c0,1.5-0.1,2.9-0.2,4.3l16.2,6.6c-0.1,2.3-0.2,4.5-0.4,6.7l-16.1-6.5c0,0.7-0.1,1.4-0.1,2.1c0,0.9-0.4,1.4-0.8,1.8l16.8,6.8c-0.1,2.3-0.3,4.5-0.5,6.7l-20-8.1c0.3,1.4,0.7,3.1,1.1,4.7l18.6,7.6c-0.2,2.3-0.4,4.6-0.6,6.6l-16.6-6.8c0.3,1.8,0.4,3.3,0.4,4.1c0,0.1,0,0.2,0,0.3l15.9,6.5c-0.2,2.5-0.5,4.7-0.7,6.6l-15.9-6.4c-0.1,1.5-0.3,2.9-0.4,4.2l8,3.2l-23.7-0.1C380,233.6,377.8,207,377.9,174.4z M362.3,262.1c-1.4,0-14,0.2-20.4,7.1c-2.8,3-4.2,7-4.2,12l0,9.8l-9.2,0l0-9.8c0-7.5,2.3-14,6.6-18.6l0,0c9.1-9.8,27.6-9,27.8-9l69.2,0.2c1.4,0,14.1-0.2,20.6-7.1c2.8-3,4.2-7,4.2-12l0-9.8l9,0l0,9.8c0,7.5-2.3,14-6.6,18.6c-9.1,9.8-27.6,9-27.8,9L362.3,262.1z M407.6,348.5l1.1,0.4h-1.1L407.6,348.5z M403.6,348.9h-5.3l-3.5-79.8l17.2,0.1L403.6,348.9z M408.1,344.3l0.7-6.6l15.9,6.4c0,1.6-0.1,3.1-0.1,4.7h-5.2L408.1,344.3z M409.2,333.6l0.7-6.6l15,6.1c0,2.2-0.1,4.5-0.1,6.8L409.2,333.6z M410.3,322.9l0.7-6.6l14.1,5.7c0,2.2-0.1,4.5-0.1,6.8L410.3,322.9z M411.5,312.2l0.7-6.6l13.1,5.3c0,2.2-0.1,4.5-0.1,6.8L411.5,312.2z M412.6,301.4l0.7-6.6l12.2,4.9c0,2.1-0.1,4.4-0.1,6.8L412.6,301.4z M413.7,290.7l0.7-6.6l11.3,4.6c0,2-0.1,4.3-0.1,6.8L413.7,290.7z M414.9,280l0.7-6.6l5.5,2.2c1.5,1.6,3.1,3,4.8,4c0,1.2,0,2.8-0.1,4.8L414.9,280z M416,269.3L416,269.3l0.3,0c0,0.1,0.1,0.1,0.1,0.2L416,269.3z M390.3,348.9h-20.7c-0.7-36.5-1.1-61.7-1.2-69.5c3.9-2.4,7.2-6.4,9.6-10.3l8.8,0L390.3,348.9z M392.6,951.2c-2-18-4.2-44.3-6.4-82.7c-0.3-5.2-0.6-10.6-0.9-16.2h7.4l2.5,115.9L392.6,951.2z M400.7,959.3l-0.1-20.9l1,0.2C401.4,940.3,400.8,957.7,400.7,959.3z M401.6,934.5l-1-0.4v-6.9l1.7,0.7C402.1,930.2,401.8,932.4,401.6,934.5z M402.7,923.8l-2.2-0.9v-6.9l2.8,1.1C403.2,919.4,403,921.6,402.7,923.8z M403.8,913l-3.2-1.3l0-6.9l3.8,1.6C404.2,908.7,404,910.9,403.8,913z M404.8,902.3l-4.2-1.7v-6.9l4.8,1.9C405.2,897.8,405,900.1,404.8,902.3z M405.7,891.4l-5.1-2.1l0-6.9l5.6,2.3C406,887,405.9,889.2,405.7,891.4z M406.5,880.6l-5.9-2.4l0-6.9l6.4,2.6C406.8,876.1,406.6,878.4,406.5,880.6z M407.3,868.6c0,0.4,0,0.7-0.1,1.1l-6.6-2.7l0-6.9l7,2.8C407.5,864.9,407.4,866.8,407.3,868.6z M407.9,858.8l-7.3-2.9l0-3.5h7.6C408.1,854.5,408,856.6,407.9,858.8z M414.5,880.9c0.6-8.8,1.2-18.3,1.7-28.6h27v-7h-91v7h25c0.6,10,1.1,19.2,1.6,27.8c-66-5.6-127.2-33.9-174.6-81.2C151.2,745.9,122,675.3,122,600.3s29.2-145.6,82.3-198.6c43.1-43.1,97.6-70.4,156.8-79.2c0.1,7.9,0.3,16.8,0.5,26.4h-16.1v7h109.8v-7h-22.7c0.2-10.2,0.4-19.6,0.5-27.9c63.6,6.8,122.6,34.8,168.4,80.7c53.1,53.1,82.3,123.6,82.3,198.6s-29.2,145.6-82.3,198.6C551.2,849.2,485.2,878.1,414.5,880.9z"></path>
</svg>
</div>
<span>LEARN ENOUGH</span>
</a><ul class="headerMenu">
<li><a href="https://www.learnenough.com/courses">Courses</a></li>
<li>
<a target="_blank" href="http://www.railstutorial.org/">The Rails Tutorial</a>
</li>
<li><a href="https://www.learnenough.com/story">The LE Story</a></li>
<li><a href="https://www.learnenough.com/login">Log In</a></li>
<li><a href="https://www.learnenough.com/subscribe">Register</a></li>
</ul>
<div class="side-menu">
<div class="">
</div>
<div class="le-side-buy">
<header class="">
<div class="articlePrice">$9</div>
<a class="articleBuy" href="https://www.learnenough.com/buy/164?option=ebooks">Buy eBook</a>
</header>
<div class="article-screencast-note">Also available: over an hour of instructional screencasts that walk you step by step through the tutorial</div>
<div class="articleMenu">
<div class="bookMenuActions j_downloadLinks">
<a onclick="$(&#39;#bookMenuEmail&#39;).toggleClass(&#39;open&#39;); return false" class="buttonStyle greyButton iEmailUpdate" href="https://www.learnenough.com/command-line-tutorial"><i class="fa fa-heart"></i>
Mailing List
</a>
<a href="https://www.learnenough.com/subscribe"><i class="fa fa-star"></i>
All Access Subscription
</a></div>
<div class="bookMenu-email" id="bookMenuEmail">
Follow author to receive email updates about new content
<div class="j_followBookForm"><div id="j_bookFollowForm">
<form action="https://www.softcover.io/books/164/follow" accept-charset="UTF-8" data-remote="true" method="get"><input name="utf8" type="hidden" value="✓">
<!-- %input{name: "name", type: "text", placeholder: "YOUR NAME"} -->
<input name="email" placeholder="Your email address" type="text">
<input class="greyButton optClick_follow" data-disable-with="Submitting..." type="submit" value="Follow Author">
</form>

<p id="j_bookFollowNotice" style="display:none"></p>
</div>
</div>
</div>
</div>
</div>

<ul class="">
<li class="courseCh">
<a id="chapter-1456" href="https://www.learnenough.com/command-line-tutorial#cha-command_line" class="courseCurrent">Command Line
</a><ul class="courseSecWr">
<li class="courseSec">
<a id="chapter_section-1" class="j_courseSection current" href="https://www.learnenough.com/command-line-tutorial#sec-basics"><span class="courseSec-num">1</span>
Basics
</a><ul class="courseSub">
<li>
<a id="sub_section-727" href="https://www.learnenough.com/command-line-tutorial#sec-running_a_terminal" class=""><span class="courseSec-num">1.1</span>
Running a terminal
</a></li>
<li>
<a id="sub_section-728" href="https://www.learnenough.com/command-line-tutorial#sec-our_first_command" class=""><span class="courseSec-num">1.2</span>
Our first command
</a></li>
<li>
<a id="sub_section-729" href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class=""><span class="courseSec-num">1.3</span>
Man pages
</a></li>
<li>
<a id="sub_section-730" href="https://www.learnenough.com/command-line-tutorial#sec-editing_the_line" class=""><span class="courseSec-num">1.4</span>
Editing the line
</a></li>
<li>
<a id="sub_section-731" href="https://www.learnenough.com/command-line-tutorial#sec-cleaning_up" class=""><span class="courseSec-num">1.5</span>
Cleaning up
</a></li>
<li>
<a id="sub_section-732" href="https://www.learnenough.com/command-line-tutorial#sec-summary_cleaning" class=""><span class="courseSec-num">1.6</span>
Summary
</a></li>
</ul>
</li>
<li class="courseSec">
<a id="chapter_section-2" class="j_courseSection" href="https://www.learnenough.com/command-line-tutorial#sec-manipulating_files"><span class="courseSec-num">2</span>
Manipulating files
</a><ul class="courseSub">
<li>
<a id="sub_section-733" href="https://www.learnenough.com/command-line-tutorial#sec-redirecting_and_appending" class=""><span class="courseSec-num">2.1</span>
Redirecting and appending
</a></li>
<li>
<a id="sub_section-734" href="https://www.learnenough.com/command-line-tutorial#sec-listing"><span class="courseSec-num">2.2</span>
Listing
</a></li>
<li>
<a id="sub_section-735" href="https://www.learnenough.com/command-line-tutorial#sec-renaming_copying_deleting"><span class="courseSec-num">2.3</span>
Renaming, copying, deleting
</a></li>
<li>
<a id="sub_section-736" href="https://www.learnenough.com/command-line-tutorial#sec-summary_manipulating"><span class="courseSec-num">2.4</span>
Summary
</a></li>
</ul>
</li>
<li class="courseSec">
<a id="chapter_section-3" class="j_courseSection" href="https://www.learnenough.com/command-line-tutorial#sec-inspecting_files"><span class="courseSec-num">3</span>
Inspecting files
</a><ul class="courseSub">
<li>
<a id="sub_section-737" href="https://www.learnenough.com/command-line-tutorial#sec-downloading_a_file"><span class="courseSec-num">3.1</span>
Downloading a file
</a></li>
<li>
<a id="sub_section-738" href="https://www.learnenough.com/command-line-tutorial#sec-making_heads_and_tails"><span class="courseSec-num">3.2</span>
Making heads and tails of it
</a></li>
<li>
<a id="sub_section-739" href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more"><span class="courseSec-num">3.3</span>
Less is more
</a></li>
<li>
<a id="sub_section-740" href="https://www.learnenough.com/command-line-tutorial#sec-grepping"><span class="courseSec-num">3.4</span>
Grepping
</a></li>
<li>
<a id="sub_section-741" href="https://www.learnenough.com/command-line-tutorial#sec-summary_inspecting"><span class="courseSec-num">3.5</span>
Summary
</a></li>
</ul>
</li>
<li class="courseSec">
<a id="chapter_section-4" class="j_courseSection" href="https://www.learnenough.com/command-line-tutorial#sec-directories"><span class="courseSec-num">4</span>
Directories
</a><ul class="courseSub">
<li>
<a id="sub_section-742" href="https://www.learnenough.com/command-line-tutorial#sec-structure"><span class="courseSec-num">4.1</span>
Directory structure
</a></li>
<li>
<a id="sub_section-743" href="https://www.learnenough.com/command-line-tutorial#sec-making_directories"><span class="courseSec-num">4.2</span>
Making directories
</a></li>
<li>
<a id="sub_section-744" href="https://www.learnenough.com/command-line-tutorial#sec-navigating_directories"><span class="courseSec-num">4.3</span>
Navigating directories
</a></li>
<li>
<a id="sub_section-745" href="https://www.learnenough.com/command-line-tutorial#sec-removing_directories"><span class="courseSec-num">4.4</span>
Renaming, copying, and deleting directories
</a></li>
<li>
<a id="sub_section-746" href="https://www.learnenough.com/command-line-tutorial#sec-summary_directories"><span class="courseSec-num">4.5</span>
Summary
</a></li>
</ul>
</li>
<li class="courseSec">
<a id="chapter_section-5" class="j_courseSection" href="https://www.learnenough.com/command-line-tutorial#sec-conclusion"><span class="courseSec-num">5</span>
Conclusion
</a></li>
</ul>
</li>
</ul>
</div>

</nav>
<div id="dropBG"></div>
</div>

<div class="le-content">
<div class="header-push">
<div class="header-push-close" id="header-push-toggle">
<a class="push-close" href="javascript://"><i class="fa fa-close"></i>
</a><a class="push-open" href="javascript://"><i class="fa fa-toggle-down"></i>
</a></div>
<div class="header-push-content">
<h1>The Learn Enough Society</h1>
<div class="header-push-copy">
<div>
<div class="svg svg-shield header-push-logo"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 801 1041" style="enable-background:new 0 0 801 1041;" xml:space="preserve">
<path class="st0" d="M383.4,845.3c-147.5-10.8-263.9-133.9-263.9-284.1c0-144,106.9-263.1,245.7-282.2"></path>
<path class="st0" d="M432.2,277.6c144.3,14,257.1,135.6,257.1,283.5c0,154.2-122.6,279.8-275.6,284.7"></path>
<path class="st1" d="M365.8,313.3c-0.8-42.1-1.2-70.2-1.3-75.5l0-0.9l0.8-0.3c3.1-1.1,6.2-4,9.3-8.7h-11c-3.5-0.3-14.6-0.2-19.8,5.4c-2,2.2-2.9,5-3,8.8l-0.1,14.6l-15.7-0.1l0.1-14.6c0-8.8,2.8-16.3,7.9-21.8c10.7-11.5,31.5-10.4,31.5-10.4h17.1c-1.2-11.7-3.7-39.8-3.6-74.5c0.1-30.4,5-61,6.7-70.8 M415.2,809.5c-4.1,73.2-9,127.9-14.7,141.9c-0.5,1.2-0.9,2-1.4,2.6l-1,1.2l-1-1.2c-6.2-7.8-11.5-65.2-15.8-144.3 M413.6,64.6c1.6,9.8,6.3,40.4,6.2,70.8c-0.1,34.7-2.8,62.7-4.1,74.4h18c0,0,14.9-0.2,19.8-5.4c2-2.2,2.9-5,3-8.8l0.1-14.6l15.7,0.1l-0.1,14.6c0,8.8-2.8,16.3-7.9,21.8c-10.7,11.5-28,10.7-31.5,10.5h-10.1c2.3,3.7,5.5,7.6,9.2,9l0.8,0.3l0,0.9c-0.1,5.3-0.5,33.2-1.4,75.2"></path>
<line class="st2" x1="408.4" y1="27.3" x2="423.5" y2="33.4"></line>
<line class="st2" x1="411.2" y1="39.6" x2="423.1" y2="44.5"></line>
<line class="st2" x1="409.4" y1="50.1" x2="420.4" y2="54.5"></line>
<line class="st2" x1="403.4" y1="58.8" x2="414.9" y2="63.5"></line>
<line class="st2" x1="398.2" y1="79.1" x2="418.7" y2="87.4"></line>
<line class="st2" x1="399.5" y1="90.8" x2="418" y2="98.3"></line>
<line class="st2" x1="396.7" y1="100.9" x2="419.6" y2="110.1"></line>
<line class="st2" x1="400.8" y1="113.7" x2="419.6" y2="121.3"></line>
<line class="st2" x1="402.1" y1="125.4" x2="419.4" y2="132.4"></line>
<line class="st2" x1="400" y1="135.7" x2="420.4" y2="144"></line>
<line class="st2" x1="400.5" y1="147.1" x2="419.5" y2="154.8"></line>
<line class="st2" x1="402.1" y1="159" x2="419.1" y2="165.8"></line>
<line class="st2" x1="402.1" y1="170.1" x2="418.7" y2="176.9"></line>
<line class="st2" x1="397.2" y1="179.3" x2="418.1" y2="187.8"></line>
<line class="st2" x1="399.5" y1="191.4" x2="416.3" y2="198.3"></line>
<line class="st2" x1="398.7" y1="202.3" x2="416.4" y2="209.5"></line>
<line class="st2" x1="415.3" y1="231.4" x2="432.6" y2="238.4"></line>
<line class="st2" x1="414" y1="242.1" x2="432.4" y2="249.6"></line>
<line class="st2" x1="413.1" y1="252.9" x2="432.2" y2="260.7"></line>
<line class="st2" x1="411.9" y1="263.6" x2="432" y2="271.8"></line>
<line class="st2" x1="410.8" y1="274.3" x2="432.5" y2="283.2"></line>
<line class="st2" x1="409.7" y1="285.1" x2="432" y2="294.1"></line>
<line class="st2" x1="408.5" y1="295.8" x2="431.4" y2="305.1"></line>
<line class="st2" x1="407.4" y1="306.5" x2="422.9" y2="312.8"></line>
<line class="st2" x1="397.3" y1="816.9" x2="414.4" y2="823.8"></line>
<line class="st2" x1="397.9" y1="828.3" x2="413.7" y2="834.8"></line>
<line class="st2" x1="398.2" y1="839.7" x2="412.8" y2="845.6"></line>
<line class="st2" x1="398.2" y1="850.9" x2="412.2" y2="856.5"></line>
<line class="st2" x1="397.9" y1="861.9" x2="411.4" y2="867.4"></line>
<line class="st2" x1="397.8" y1="873.1" x2="410.6" y2="878.2"></line>
<line class="st2" x1="398.1" y1="884.4" x2="409.7" y2="889.1"></line>
<line class="st2" x1="397.5" y1="895.3" x2="408.7" y2="899.8"></line>
<line class="st2" x1="397.8" y1="906.6" x2="407.6" y2="910.6"></line>
<line class="st2" x1="398.2" y1="918" x2="406.3" y2="921.3"></line>
<line class="st2" x1="389.9" y1="313.3" x2="381.6" y2="228.5"></line>
<line class="st2" x1="415.6" y1="228.7" x2="406.7" y2="313.4"></line>
<line class="st2" x1="398.1" y1="809.7" x2="398.1" y2="953.2"></line>
<line class="st1" x1="374.5" y1="227.9" x2="422.2" y2="227.9"></line>
<line class="st1" x1="374.5" y1="209.8" x2="422.2" y2="209.8"></line>
<ellipse class="st1" cx="399.2" cy="40.1" rx="25.1" ry="28.7"></ellipse>
<line class="st3" x1="456.8" y1="313.3" x2="346.9" y2="313.3"></line>
<line class="st3" x1="353.7" y1="809.7" x2="444.7" y2="809.7"></line>
<path class="st3" d="M316.5,686.9h59.7l24.3,25.7 M269.1,752.9l-26-24.3V370h49.7l24.3,25.7"></path>
<path class="st3" d="M438.6,753.6l-26.6-25V370h135.1l24.3,25.6 M485.5,686.9h61.6l24.3,25.9 M485.5,524h56.6l24.3,25.7"></path>
<path class="st3" d="M267.4,752.9V394.3h49.7v316.9h83.4v41.7H267.4z"></path>
<path class="st3" d="M436.3,752.9V394.3h135.1V436h-85.4v112.3h80.5V590h-80.5v121.2h85.4v41.7H436.3z"></path>
<line class="st3" x1="243.1" y1="370" x2="267.4" y2="394.3"></line>
<line class="st3" x1="412" y1="370" x2="436.3" y2="394.3"></line>
<path class="st0" d="M380.8,157.7h-367v447.6c0,98.6,16.3,170.2,69.6,231.3c61.3,70.4,202.3,139.4,275.1,166.8c24.2,9.1,39.4,22.1,39.4,22.1s15.2-13,39.4-22.1C510,976.1,650.9,907,712.3,836.6c53.3-61.1,69.6-132.7,69.6-231.3V157.7H420.2"></path>
<line class="st0" x1="552.4" y1="293.3" x2="688.1" y2="157.7"></line>
<line class="st0" x1="52.6" y1="793.2" x2="138.1" y2="707.7"></line>
<line class="st0" x1="226.5" y1="808.7" x2="144.7" y2="890.5"></line>
<line class="st0" x1="781.1" y1="254.2" x2="652.5" y2="382.8"></line>
</svg>
</div>
</div>
<div>
<h5>Learn to Tech</h5>
<p>Learning to be technically sophisticated is the most important skill of the 21st century. We hope to reach and inspire as many people as possible — and we want you to be a part of it.</p>
<p>
<a href="https://www.learnenough.com/story"><button class="btn-small attention">THE LEARN ENOUGH STORY</button>
</a></p>
</div>
<div>
<h5>Get access to all tutorials and screencasts</h5>
<p>Learn Enough Society members get access to all the published tutorials, all screencasts, and immediate access to new tutorials (including the full Rails 5 edition of the Rails Tutorial).</p>
<p>
<a href="https://www.learnenough.com/subscriptions/new"><button class="btn-small attention">JOIN THE SOCIETY NOW</button>
</a></p>
</div>
</div>
</div>
<div class="header-push-content-closed">
<a href="https://www.learnenough.com/subscriptions/new">Join the Learn Enough Society</a>
&nbsp;today to get access to all tutorials and screencasts (including the Rails 5 edition of the Rails Tutorial)
</div>
</div>

<div class="le-bookHeader">
<a class="le-book-cover" href="https://www.learnenough.com/command-line-tutorial"><img class="cover" src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/cover-web.png" alt="Cover web">
</a><div class="le-bookHeader-info">
<h1>
Learn Enough Command Line to Be Dangerous
<span class="sub-title j_subtitle"></span>
<strong class="book-author-name">Michael Hartl</strong>
</h1>
<p class="j_description">
 A tutorial introduction to the Unix command line 

</p>
<div class="le-bookTitle-buy">
<a class="btn attention" href="https://www.learnenough.com/buy/164">$19
 - 
Buy eBook
</a></div>
</div>
</div>

<div class="mainWr">
<div data-html="&lt;div id=&quot;title_page&quot;&gt;
    &lt;h1 class=&quot;title&quot;&gt;Learn Enough Command Line &lt;span class=&quot;break&quot;&gt;&lt;/span&gt; to Be Dangerous&lt;/h1&gt;
    &lt;h1 class=&quot;subtitle&quot;&gt;A tutorial introduction to the Unix command line&lt;/h1&gt;
    &lt;h2 class=&quot;author&quot;&gt;Michael Hartl&lt;/h2&gt;
  &lt;/div&gt;
      

&lt;h1 class=&quot;contents&quot;&gt;Contents&lt;/h1&gt;&lt;div id=&quot;table_of_contents&quot;&gt;
  &lt;ul&gt;
    &lt;li class=&quot;section&quot;&gt;
      &lt;a href=&quot;command_line_fragment.html#sec-basics&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1 &lt;/span&gt;Basics&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-running_a_terminal&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.1 &lt;/span&gt;Running a terminal&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-our_first_command&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.2 &lt;/span&gt;Our first command&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.3 &lt;/span&gt;Man pages&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-editing_the_line&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.4 &lt;/span&gt;Editing the line&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-cleaning_up&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.5 &lt;/span&gt;Cleaning up&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-summary_cleaning&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.6 &lt;/span&gt;Summary&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li class=&quot;section&quot;&gt;
      &lt;a href=&quot;command_line_fragment.html#sec-manipulating_files&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2 &lt;/span&gt;Manipulating files&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-redirecting_and_appending&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.1 &lt;/span&gt;Redirecting and appending&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.2 &lt;/span&gt;Listing&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-renaming_copying_deleting&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.3 &lt;/span&gt;Renaming, copying, deleting&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-summary_manipulating&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.4 &lt;/span&gt;Summary&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li class=&quot;section&quot;&gt;
      &lt;a href=&quot;command_line_fragment.html#sec-inspecting_files&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3 &lt;/span&gt;Inspecting files&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-downloading_a_file&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.1 &lt;/span&gt;Downloading a file&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-making_heads_and_tails&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.2 &lt;/span&gt;Making heads and tails of it&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.3 &lt;/span&gt;Less is more&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-grepping&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.4 &lt;/span&gt;Grepping&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-summary_inspecting&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.5 &lt;/span&gt;Summary&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li class=&quot;section&quot;&gt;
      &lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4 &lt;/span&gt;Directories&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-structure&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.1 &lt;/span&gt;Directory structure&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-making_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.2 &lt;/span&gt;Making directories&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-navigating_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.3 &lt;/span&gt;Navigating directories&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-removing_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.4 &lt;/span&gt;Renaming, copying, and deleting directories&lt;/a&gt;
        &lt;/li&gt;
        &lt;li class=&quot;subsection&quot;&gt;
          &lt;a href=&quot;command_line_fragment.html#sec-summary_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.5 &lt;/span&gt;Summary&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li class=&quot;section&quot;&gt;
      &lt;a href=&quot;command_line_fragment.html#sec-conclusion&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;5 &lt;/span&gt;Conclusion&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt; is an introduction to the command line for complete beginners, the first in a &lt;a href=&quot;http://learnenough.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;series of tutorials&lt;/a&gt; designed to teach the common foundations of “computer magic” (&lt;a href=&quot;#aside-computer_magic&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;) to as broad an audience as possible.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; It is aimed both at those who work with software developers and those who aspire to become developers themselves.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Unlike most introductions to the command line, which typically assume a relatively high level of technical sophistication, &lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt; assumes no prerequisites other than general computer knowledge (how to launch an application, how to use a web browser, how to &lt;a href=&quot;http://lmgtfy.com/?q=learn+to+touch+type&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;touch type&lt;/a&gt;, etc.).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Among other things, this means that it doesn’t assume you know &lt;a href=&quot;http://learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to use a text editor&lt;/a&gt;, or even what a text editor is.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, this tutorial doesn’t even assume you know what a &lt;em&gt;command line&lt;/em&gt; is, so if you’re confused by the title, you’re still in the right place.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Finally, even if you already know how to use the command line, following this tutorial (and doing the exercises) will help fill in any gaps in your knowledge, and might even teach you a few new things.&lt;/p&gt;
 &lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: To get the most out of this tutorial, join the &lt;a href=&quot;http://learnenough.com/story&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt;, a subscription service from Learn Enough to Be Dangerous that includes integrated progress tracking, exercise answers, live chat, and streaming videos.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; See &lt;a href=&quot;http://learnenough.com/story&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/story&lt;/a&gt; for more information.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-computer_magic&quot; data-tralics-id=&quot;uid1&quot; data-number=&quot;1&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 1.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The magic of computers&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Computers may be as close as we get to &lt;em&gt;magic&lt;/em&gt; in the real world: we type incantations into a machine, and—if the incantations are right—the machine does our bidding.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To perform such magic, computer witches and wizards rely not only on words, but also on wands, potions, and an ancient tome or two.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Taken together, these tricks of the trade are known as &lt;em&gt;software development&lt;/em&gt;: computer programming, plus tools like &lt;em&gt;command lines&lt;/em&gt;, &lt;em&gt;text editors&lt;/em&gt;, and &lt;em&gt;version control&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Knowledge of these tools is perhaps the main dividing line between “technical” and “non-technical” people (or, to put it in magical terms, between magicians and &lt;a href=&quot;https://en.wikipedia.org/wiki/Muggle&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Muggles&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The present tutorial represents the first step needed to cross this technical/non-technical divide.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The resulting &lt;em&gt;technical sophistication&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;) will make us software magicians—able to cast computer spells, and get the machine to do our bidding.&lt;/p&gt;
&lt;p&gt;My name is &lt;a href=&quot;http://www.michaelhartl.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Michael Hartl&lt;/a&gt;, and I am perhaps best known as the creator of the &lt;a href=&quot;http://www.railstutorial.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ruby on Rails Tutorial&lt;/a&gt;, a &lt;a href=&quot;http://railstutorial.org/book&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;book&lt;/a&gt; and &lt;a href=&quot;http://screencasts.railstutorial.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;screencast series&lt;/a&gt; that together constitute one of the leading introductions to web development.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (You may also know me, in my more mathematical mode, as the founder of &lt;a href=&quot;http://tauday.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tau Day&lt;/a&gt; and author of &lt;a href=&quot;http://tauday.com/tau-manifesto&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;The Tau Manifesto&lt;/em&gt;&lt;/a&gt;.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; One of the most frequently asked questions about the Rails Tutorial is, “Is the Rails Tutorial good for complete beginners?”&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The answer is, “Not really.”&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; While it is possible for complete beginners to learn web development with the Ruby on Rails Tutorial (and an impressively large number have), it can be challenging and occasionally frustrating, and I don’t generally recommend it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Instead, I recommend starting here.&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;Many programming tutorials either gloss over the command line or assume you already know how to use it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; But understanding the basics of the command line is &lt;em&gt;absolutely essential&lt;/em&gt; to becoming a skilled developer.&lt;sup id=&quot;cha-0_footnote-ref-1&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, if you look at the desktop of an experienced computer programmer, even on a system with a polished graphical user interface like macOS, you are likely to find a large number of “terminal windows”, each containing a series of commands at a command line (&lt;a href=&quot;#fig-dev_desktop&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Proficiency at the command line is also useful for anyone who needs to &lt;em&gt;work&lt;/em&gt; with developers, such as product managers, project managers, and designers.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Making this essential component of technical sophistication accessible to as broad an audience as possible is the goal of &lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-dev_desktop&quot; data-tralics-id=&quot;uid3&quot; data-number=&quot;1&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/dev_desktop.png&quot; alt=&quot;images/figures/dev_desktop&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 1: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Terminal windows on the desktop of an experienced developer.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-basics&quot; data-tralics-id=&quot;cid1&quot; class=&quot;section&quot; data-number=&quot;1&quot;&gt;&lt;h2&gt;&lt;a href=&quot;command_line_fragment.html#sec-basics&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1 &lt;/span&gt;Basics&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As author &lt;a href=&quot;https://en.wikipedia.org/wiki/Neal_Stephenson&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Neal Stephenson&lt;/a&gt; famously &lt;a href=&quot;http://www.cryptonomicon.com/beginning.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;put it&lt;/a&gt;, “In the Beginning was the Command Line.”&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Although a graphical user interface (GUI) can dramatically simplify computer use, in many contexts the most powerful and flexible way to interact with a computer is through a &lt;em&gt;command-line interface&lt;/em&gt; (CLI).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In such an interface, the &lt;a href=&quot;http://tron.wikia.com/wiki/User&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;user&lt;/a&gt; types &lt;em&gt;commands&lt;/em&gt; that tell the computer to perform desired tasks.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; These commands can then be combined in various ways to achieve a variety of outcomes.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; An example of a typical command-line command appears in &lt;a href=&quot;command_line_fragment.html#fig-command_line_command&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-command_line_command&quot; data-tralics-id=&quot;uid4&quot; data-number=&quot;2&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/command_line_command.png&quot; alt=&quot;images/figures/command_line_command&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 2: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A prototypical command-line command.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This tutorial covers the basics of the Unix command line, where &lt;em&gt;Unix&lt;/em&gt; refers to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;family of operating systems&lt;/a&gt; that includes Linux, Android, iOS (iPhone/iPad), and macOS.&lt;sup id=&quot;cha-0_footnote-ref-2&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Unix systems serve most of the software on the World Wide Web, run most mobile and tablet devices, and power many of the world’s desktop computers as well.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result of Unix’s central role in modern computing, this tutorial covers the Unix way of developing software.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The main exception to Unix’s dominance is Microsoft® Windows™, which is not part of the Unix tradition, but those who mostly develop using native Windows development tools will still benefit from learning the Unix command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Among other things, at some point such users are likely to need to issue commands on a Unix server (e.g., via the “secure shell” command &lt;code&gt;ssh&lt;/code&gt;), at which point familiarity with Unix commands becomes essential.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, Windows users are strongly encouraged to run a free &lt;em&gt;Linux virtual machine&lt;/em&gt; (as described in &lt;a href=&quot;command_line_fragment.html#aside-virtual_machine&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;) in order to get the most out of this tutorial.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Another good option is to use a cloud IDE&lt;sup id=&quot;cha-0_footnote-ref-3&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; such as &lt;a href=&quot;http://c9.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cloud9&lt;/a&gt;; to go this route, follow the “&lt;a href=&quot;https://www.railstutorial.org/book/beginning#sec-development_environment&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Development environment&lt;/a&gt;” section in the &lt;a href=&quot;http://railstutorial.org/book&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Ruby on Rails Tutorial&lt;/em&gt; book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-man_echo&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-virtual_machine&quot; data-tralics-id=&quot;uid7&quot; data-number=&quot;2&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 2.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Running a virtual machine&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;In order to complete this tutorial, Windows users should install a couple of free programs to run a &lt;em&gt;virtual machine&lt;/em&gt; (a simulation of a computer) that allows Windows to host a version of the Linux operating system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The steps appear as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the right version of &lt;a href=&quot;https://www.virtualbox.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VirtualBox&lt;/a&gt; for your system (free).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Download the &lt;a href=&quot;https://softcover-static.s3.amazonaws.com/LearnEnough-v.1.4.ova&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Virtual Machine&lt;/a&gt; (large file).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Once the download is complete, double-click the resulting “OVA” file and follow the instructions to install the Virtual Machine (VM).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Double-click the VM itself and log in using the default user’s password, which is “&lt;code class=&quot;tt&quot;&gt;foobar!&lt;/code&gt;”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;(Getting all these steps to work is a good exercise in &lt;em&gt;technical sophistication&lt;/em&gt;, an idea we’ll develop further starting in &lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.3&lt;/span&gt;&lt;/a&gt; (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;).)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The result will be a Linux desktop environment (including a command-line terminal program) pre-configured for this tutorial, as shown in &lt;a href=&quot;command_line_fragment.html#fig-virtual_machine&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the longer run, I recommend switching to a Mac as soon as possible.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; You might have to save up a bit, as Macs are generally more expensive than Windows machines, but in most cases the increased productivity will quickly pay for the difference.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (If you find yourself liking Linux, feel free to stick with it, but Macs are generally easier to use with a better user interface.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Plus, you can always run Linux inside a VM, even on a Mac.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;&lt;div class=&quot;center figure&quot; id=&quot;fig-virtual_machine&quot; data-tralics-id=&quot;uid12&quot; data-number=&quot;3&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/virtual_machine.png&quot; alt=&quot;images/figures/virtual_machine&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 3: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A Linux virtual machine running inside a host OS.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-running_a_terminal&quot; data-tralics-id=&quot;uid13&quot; class=&quot;subsection&quot; data-number=&quot;1.1&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-running_a_terminal&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.1 &lt;/span&gt;Running a terminal&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To run a command-line command, we first need to start a &lt;em&gt;terminal&lt;/em&gt;, which is the program that gives us a command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; On macOS, you can open a terminal window using the macOS application &lt;a href=&quot;https://support.apple.com/en-us/HT204014&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Spotlight&lt;/em&gt;&lt;/a&gt;, which you can launch either by typing ⌘␣ (Command-space) or by clicking on the magnifying glass in the upper right part of your screen.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Once you’ve launched Spotlight, you can start a terminal program by typing “terminal” in the Spotlight Search bar.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (If you are interested in using a more advanced and customizable terminal program, I recommend installing &lt;a href=&quot;https://www.iterm2.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iTerm&lt;/a&gt;, but this step is optional.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; On Linux, you can click the terminal icon as shown in &lt;a href=&quot;command_line_fragment.html#fig-virtual_machine&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The result should be something like &lt;a href=&quot;command_line_fragment.html#fig-terminal_window&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;, although the exact details on your system will likely differ.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; If you’re using a different OS, I recommend applying your technical sophistication (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;) to figure how to open a terminal on your system; for example, to learn how to open a command-line terminal on a &lt;a href=&quot;https://www.google.com/chromebook/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chromebook&lt;/a&gt;, you could Google “&lt;a href=&quot;http://lmgtfy.com/?q=how+to+get+a+command+line+on+a+chromebook&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;how to get a command line on a chromebook&lt;/a&gt;”.&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-terminal_window&quot; data-tralics-id=&quot;uid14&quot; data-number=&quot;4&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/terminal_window.png&quot; alt=&quot;images/figures/terminal_window&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 4: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A terminal window.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The example we saw in &lt;a href=&quot;command_line_fragment.html#fig-command_line_command&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt; includes all of the typical elements of a command, as illustrated in &lt;a href=&quot;command_line_fragment.html#fig-anatomy&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;: the &lt;em&gt;prompt&lt;/em&gt; followed by a &lt;em&gt;command&lt;/em&gt; (as in “give the computer a command”), an &lt;em&gt;option&lt;/em&gt; (as in “choose a different option”), and an &lt;em&gt;argument&lt;/em&gt; (as in the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Argument_of_a_function&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;argument of a function&lt;/a&gt;” in mathematics).&lt;sup id=&quot;cha-0_footnote-ref-4&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; It’s essential to understand that the prompt is supplied automatically by the terminal, and you do not need to type it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Indeed, if you do type it, it will likely result in an error.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Moreover, the exact details of the prompt will differ, and are not important for the purposes of this tutorial (&lt;a href=&quot;command_line_fragment.html#aside-prompt&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-anatomy&quot; data-tralics-id=&quot;uid16&quot; data-number=&quot;5&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/anatomy.png&quot; alt=&quot;images/figures/anatomy&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 5: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Anatomy of a command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Your prompt may differ.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-prompt&quot; data-tralics-id=&quot;uid17&quot; data-number=&quot;3&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 3.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;What is the prompt?&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Every command line starts with some symbol or symbols designed to “prompt” you to action.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The prompt usually ends with a dollar sign &lt;code class=&quot;inline_verbatim&quot;&gt;$&lt;/code&gt;, and is preceded by information that depends on the details of your system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, on some systems the prompt might look like this:
&lt;/p&gt;&lt;pre&gt; Michael&#39;s MacBook Air:~ mhartl$&lt;/pre&gt;
&lt;p&gt;In &lt;a href=&quot;command_line_fragment.html#fig-terminal_window&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;, the prompt looks like this instead:
&lt;/p&gt;&lt;pre&gt; [~]$&lt;/pre&gt;
&lt;p&gt;and in &lt;a href=&quot;command_line_fragment.html#fig-anatomy&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt; it looks like this:&lt;/p&gt;
&lt;pre&gt; [projects]$&lt;/pre&gt;
&lt;p&gt;Finally, the prompt I’m looking at right now looks like this:
&lt;/p&gt;&lt;pre&gt; [learn_enough_command_line (master)]$&lt;/pre&gt;
&lt;p&gt;For the purposes of this tutorial, the details of the prompt are not important, but we will discuss useful ways to customize the prompt starting in the next tutorial after this one (&lt;a href=&quot;http://learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Text Editor to Be Dangerous&lt;/em&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;sec-exercises_terminal&quot; data-tralics-id=&quot;uid18&quot; class=&quot;subsubsection&quot; data-number=&quot;1.1.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_terminal&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt; includes a large number of exercises.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; I strongly recommend getting in the habit of attempting them before moving on to the next section, as they reinforce the material we’ve just covered and will give you essential practice in using the many commands discussed.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; It’s not generally the case that they are &lt;em&gt;required&lt;/em&gt; to proceed, though, so if you get stuck it’s sometimes a good idea to continue forward and then revisit the exercise at a later time.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, this is good advice for the main text as well—you’ll be surprised how often a seemingly impossible idea or intractable problem will look easy the second time around.&lt;/p&gt;
 &lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;By referring to &lt;a href=&quot;command_line_fragment.html#fig-anatomy&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;, identify the prompt, command, options, arguments, and cursor in each line of &lt;a href=&quot;command_line_fragment.html#fig-command_exercise&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;span class=&quot;exercise&quot; id=&quot;ex-terminal_tabs&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Most modern terminal programs have the ability to create multiple &lt;em&gt;tabs&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#fig-terminal_tabs&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;7&lt;/span&gt;&lt;/a&gt;), which are useful for organizing a set of related terminal windows.&lt;sup id=&quot;cha-0_footnote-ref-5&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-5&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By examining the menu items for your terminal program (&lt;a href=&quot;command_line_fragment.html#fig-terminal_menu&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt;), figure out how to create a new tab.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Extra credit&lt;/em&gt;: Learn the keyboard shortcut for creating a new tab.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Learning keyboard shortcuts for your system is an excellent habit to cultivate.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;span class=&quot;exercise&quot; id=&quot;ex-new_tab&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-command_exercise&quot; data-tralics-id=&quot;uid22&quot; data-number=&quot;6&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/command_exercise.png&quot; alt=&quot;images/figures/command_exercise&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 6: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A series of typical commands.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-terminal_tabs&quot; data-tralics-id=&quot;uid23&quot; data-number=&quot;7&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/terminal_tabs.png&quot; alt=&quot;images/figures/terminal_tabs&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 7: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A terminal window with three tabs.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-terminal_menu&quot; data-tralics-id=&quot;uid24&quot; data-number=&quot;8&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/terminal_menu.png&quot; alt=&quot;images/figures/terminal_menu&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 8: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Some menu items for the default macOS terminal.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-our_first_command&quot; data-tralics-id=&quot;uid25&quot; class=&quot;subsection&quot; data-number=&quot;1.2&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-our_first_command&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.2 &lt;/span&gt;Our first command&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We are now prepared to run our first command, which prints the word “hello” to the screen.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The place where characters get printed is known as “standard out”, which is usually just the screen, and rarely refers to a physical printer.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The command is &lt;code&gt;echo&lt;/code&gt;, and the argument is the string of characters—or simply &lt;em&gt;string&lt;/em&gt; for short—that we want to print.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To run the &lt;code&gt;echo&lt;/code&gt; command, type “echo hello” at the prompt, and then press the Return key (also called Enter):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;hello
&lt;span class=&quot;go&quot;&gt;hello&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(I recommend always typing the commands out yourself, which will let you learn more than if you rely on copying and pasting.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Here we see that &lt;code&gt;echo hello&lt;/code&gt; prints “hello” and then returns another prompt.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Note that, for brevity, I’ve omitted all characters in the prompt except the dollar sign &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Just to make the pattern clear, let’s try a second &lt;code&gt;echo&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;goodbye&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;goodbye&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;goodbye&#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;goodbye&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note here that we’ve wrapped “goodbye” in quotation marks—and we also see that we can use either double quotes, as in &lt;code&gt;&quot;goodbye&quot;&lt;/code&gt;, or single quotes, as in &lt;code&gt;’goodbye’&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Such quotes can be used to group strings visually, though in many contexts they are not required by &lt;code&gt;echo&lt;/code&gt; (&lt;a href=&quot;command_line_fragment.html#code-hello_goodbye&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-6&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-6&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-hello_goodbye&quot; data-tralics-id=&quot;uid27&quot; data-number=&quot;1&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 1:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Printing “hello, goodbye” two different ways.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;hello, goodbye
&lt;span class=&quot;go&quot;&gt;hello, goodbye&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello, goodbye&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;hello, goodbye&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;One thing that can happen when using quotes is accidentally not matching them, as follows:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;hello, goodbye
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At this point, it seems we’re stuck.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; There are specific ways out of this quandary (in fact, in this case you can just add a closing quote and hit return), but it’s good to have a general strategy for getting out of trouble (&lt;a href=&quot;command_line_fragment.html#fig-cat_in_box&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-7&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-7&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This strategy is called “Ctrl-C” (&lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-cat_in_box&quot; data-tralics-id=&quot;uid29&quot; data-number=&quot;9&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/cat_in_box.png&quot; alt=&quot;images/figures/cat_in_box&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 9: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;This cat appears to be stuck and should probably hit &lt;code&gt;Ctrl-C&lt;/code&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-getting_out_of_trouble&quot; data-tralics-id=&quot;uid30&quot; data-number=&quot;4&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 4.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Getting out of trouble&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;When using the command line, there are lots of things that can get you in trouble, by which I mean the terminal will just hang or otherwise end up in a state that makes entering further commands difficult or impossible.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Here are some examples of such commands:&lt;/p&gt;
&lt;pre&gt; $ echo &quot;hello&lt;/pre&gt;
&lt;pre&gt; $ grep foobar&lt;/pre&gt;
&lt;pre&gt; $ yes&lt;/pre&gt;
&lt;pre&gt; $ tail&lt;/pre&gt;
&lt;pre&gt; $ cat&lt;/pre&gt;
&lt;p&gt;In every case, the solution is the same: hit &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt; (pronounced “control-see”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Here &lt;code class=&quot;tt&quot;&gt;Ctrl&lt;/code&gt; refers to the “control” key on your keyboard, and &lt;code class=&quot;tt&quot;&gt;C&lt;/code&gt; refers to the key labeled “C”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt; thus means “While holding down the control key, press C.”&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In particular, &lt;code class=&quot;tt&quot;&gt;C&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; refer to the capital letter C, so you should not press Shift in addition to Ctrl.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (&lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt; sends a &lt;em&gt;control code&lt;/em&gt; to the terminal and has nothing to do with producing a capital C when typing normal text.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The result of typing &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt; is sometimes written as &lt;code class=&quot;inline_verbatim&quot;&gt;⌃C&lt;/code&gt;, like this:&lt;/p&gt;
&lt;pre&gt; $ tail
 ^C&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Control-C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;origins of &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt;&lt;/a&gt; are somewhat obscure, but as a mnemonic I like to think of it as meaning “cancel”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; However you remember it, &lt;em&gt;do&lt;/em&gt; remember it: when you get into trouble at the command line, your best bet is usually to hit &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: When &lt;code class=&quot;tt&quot;&gt;Ctrl-C&lt;/code&gt; fails, 90% of the time hitting &lt;code class=&quot;tt&quot;&gt;ESC&lt;/code&gt; (escape) will do the trick.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;sec-exercises_first_command&quot; data-tralics-id=&quot;uid31&quot; class=&quot;subsubsection&quot; data-number=&quot;1.2.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_first_command&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Write a command that prints out the string “hello, world”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Extra credit&lt;/em&gt;: As in &lt;a href=&quot;command_line_fragment.html#code-hello_goodbye&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;, do it two different ways, both with and without using quotation marks. &lt;span class=&quot;exercise&quot; id=&quot;ex-hello-world&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Type the command &lt;code&gt;echo ’hello&lt;/code&gt; (with a mismatched single quote), and then get out of trouble using the technique from &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-echo-hello&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-man_pages&quot; data-tralics-id=&quot;uid34&quot; class=&quot;subsection&quot; data-number=&quot;1.3&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.3 &lt;/span&gt;Man pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The program we’re using to run a command line, which is technically known as a &lt;em&gt;shell&lt;/em&gt;,&lt;sup id=&quot;cha-0_footnote-ref-8&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-8&quot;&gt;8&lt;/a&gt;&lt;/sup&gt; includes a powerful (though often cryptic) tool to learn more about available commands.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This tool is itself a command-line command called &lt;code&gt;man&lt;/code&gt; (short for “manual”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Its argument is the name of the command (such as &lt;code&gt;echo&lt;/code&gt;) that we want to learn more about.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The details are system-dependent, but on my system the result of running &lt;code&gt;man echo&lt;/code&gt; appears as in &lt;a href=&quot;command_line_fragment.html#code-man_echo&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-man_echo&quot; data-tralics-id=&quot;uid36&quot; data-number=&quot;2&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 2:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The result of running &lt;code&gt;man echo&lt;/code&gt;.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; man &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;ECHO(1)          BSD General Commands Manual         ECHO(1)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   echo -- write arguments to the standard output&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;SYNOPSIS&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   echo [-n] [string ...]&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;DESCRIPTION&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   The echo utility writes any specified operands, separated by single blank&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   (` &#39;) characters and followed by a newline (`\n&#39;) character, to the stan-&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;   dard output.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   The following option is available:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;   -n  Do not print the trailing newline character. This may also be&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      achieved by appending `\c&#39; to the end of the string, as is done by&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      iBCS2 compatible systems. Note that this option as well as the&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      effect of `\c&#39; are implementation-defined in IEEE Std 1003.1-2001&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      (``POSIX.1&#39;&#39;) as amended by Cor. 1-2002. Applications aiming for&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      maximum portability are strongly encouraged to use printf(1) to&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;      suppress the newline character.&lt;/span&gt;
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;go&quot;&gt;:                                                                             &lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;On the last line of &lt;a href=&quot;command_line_fragment.html#code-man_echo&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;, note the presence of a colon &lt;code&gt;:&lt;/code&gt;, which indicates that there is more information below.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The details of this last line are system-dependent, but on any system you should be able to access subsequent information one line at a time by pressing the down arrow key, or one page at a time by pressing the spacebar.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To exit the man page, press “q” (for “quit”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (This interface to the man pages is the same as for the &lt;code&gt;less&lt;/code&gt; program, which we’ll learn about in &lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.3&lt;/span&gt;&lt;/a&gt;.)&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-man_to_man&quot; data-tralics-id=&quot;uid37&quot; data-number=&quot;10&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/man_to_man.jpg&quot; alt=&quot;images/figures/man_to_man&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 10: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Applying &lt;code&gt;man&lt;/code&gt; to &lt;code&gt;man&lt;/code&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because &lt;code&gt;man&lt;/code&gt; itself is a command, we can apply &lt;code&gt;man&lt;/code&gt; to &lt;code&gt;man&lt;/code&gt; (&lt;a href=&quot;command_line_fragment.html#fig-man_to_man&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;10&lt;/span&gt;&lt;/a&gt;),&lt;sup id=&quot;cha-0_footnote-ref-9&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-9&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; as shown in &lt;a href=&quot;command_line_fragment.html#code-man_man&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-man_man&quot; data-tralics-id=&quot;uid39&quot; data-number=&quot;3&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 3:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The result of running &lt;code&gt;man man&lt;/code&gt;.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; man man
&lt;span class=&quot;go&quot;&gt;man(1)                                 man(1)&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    man - format and display the on-line manual pages&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;SYNOPSIS&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    man [-acdfFhkKtwW] [--path] [-m system] [-p string] [-C config_file]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    [-M pathlist] [-P pager] [-B browser] [-H htmlpager] [-S section_list]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    [section] name ...&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;DESCRIPTION&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    man formats and displays the on-line manual pages. If you specify sec-&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    tion, man only looks in that section of the manual. name is normally&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    the name of the manual page, which is typically the name of a command,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    function, or file. However, if name contains a slash (/) then man&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    interprets it as a file specification, so that you can do man ./foo.5&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    or even man /cd/foo/bar.1.gz.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;    See below for a description of where man looks for the manual page&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    files.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;OPTIONS&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    -C config_file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;We can see from &lt;a href=&quot;command_line_fragment.html#code-man_man&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt; that the synopsis of &lt;code&gt;man&lt;/code&gt; looks something like this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;man [-acdfFhkKtwW] [--path] [-m system] [-p string] ...
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is what I meant above when I described man pages as “often cryptic”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, in many cases I find the details of man pages to be almost impossible to understand, but being able to scan over the man page to get a high-level overview of a command is a valuable skill, one worth acquiring.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To get used to reading man pages, I recommend running &lt;code&gt;man &amp;lt;command name&amp;gt;&lt;/code&gt; when encountering a new command.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Even if the details aren’t entirely clear, reading the man pages will help develop the valuable skill of &lt;em&gt;technical sophistication&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-10&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-10&quot;&gt;10&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-technical_sophistication&quot; data-tralics-id=&quot;uid41&quot; data-number=&quot;5&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 5.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Technical sophistication&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;In mathematics, many subjects can be developed by applying pure deduction to a small number of assumptions, or &lt;em&gt;axioms&lt;/em&gt;; examples include algebra, geometry, number theory, and analysis.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, such subjects are completely self-contained, and thus have no formal prerequisites—in principle, even a small child could learn them.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In practice, though, something else is required, and mathematicians often recommend the informal prerequisite of &lt;em&gt;mathematical maturity&lt;/em&gt;, which consists of the experience and general sophistication needed to understand and write mathematical proofs.&lt;/p&gt;
&lt;p&gt;In technology, a similar skill (or, more accurately, set of skills) exists in the form of &lt;em&gt;technical sophistication&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In addition to “hard skills” like familiarity with text editors and the Unix command line, technical sophistication includes “soft skills” like looking for promising menu items and knowing the kinds of search terms to drop into Google (&lt;a href=&quot;command_line_fragment.html#fig-tech_support_cheat_sheet&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;), along with an &lt;em&gt;attitude&lt;/em&gt; of doing what it takes to make the machine do our bidding (&lt;a href=&quot;#aside-computer_magic&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; These soft skills, and this attitude, are hard to teach directly, so as you progress through this and subsequent &lt;a href=&quot;http://learnenough.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough tutorials&lt;/a&gt; you should always be on the lookout for opportunities to increase your technical sophistication (such as, for example, learning how to get the gist of a program by scanning its man page (&lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.3&lt;/span&gt;&lt;/a&gt;)).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Over time, the cumulative effect will be that, like the author of &lt;a href=&quot;command_line_fragment.html#fig-tech_support_cheat_sheet&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;, you’ll have the seemingly magical ability to do everything in every program.&lt;/p&gt;
&lt;p&gt;By the way, &lt;a href=&quot;command_line_fragment.html#fig-tech_support_cheat_sheet&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt; is missing three important techniques for solving common problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Have you restarted the application?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Have you rebooted the device?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Have you tried uninstalling and reinstalling the app?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;#2 alone probably solves 90% of unexplained computer errors.&lt;/p&gt;

&lt;/div&gt;&lt;div class=&quot;center figure&quot; id=&quot;fig-tech_support_cheat_sheet&quot; data-tralics-id=&quot;uid45&quot; data-number=&quot;11&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/tech_support_cheat_sheet.png&quot; alt=&quot;images/figures/tech_support_cheat_sheet&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 11: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;“&lt;a href=&quot;https://m.xkcd.com/627/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tech Support Cheat Sheet&lt;/a&gt;” (via &lt;a href=&quot;http://xkcd.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;xkcd&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; See &lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt; for three extra techniques.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_man&quot; data-tralics-id=&quot;uid46&quot; class=&quot;subsubsection&quot; data-number=&quot;1.3.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_man&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;According to the man page, what are the official short and long descriptions of &lt;code&gt;echo&lt;/code&gt; on your system? &lt;span class=&quot;exercise&quot; id=&quot;ex-man-echo&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;As seen in &lt;a href=&quot;command_line_fragment.html#code-hello_goodbye&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;, by default the &lt;code&gt;echo&lt;/code&gt; command prints its argument to the screen and then puts the new prompt on a new line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The way it does this is by appending a special character called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Newline&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;newline&lt;/em&gt;&lt;/a&gt; (a special character that literally puts the string on a new line, written in many contexts as “backslash n” &lt;code class=&quot;inline_verbatim&quot;&gt;\n&lt;/code&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because &lt;code&gt;echo&lt;/code&gt; is often used in programs to print out a sequence of strings &lt;em&gt;not&lt;/em&gt; separated by newlines, there is a special command-line option to prevent the newline from being inserted.
&lt;p&gt;By reading the man page for &lt;code&gt;echo&lt;/code&gt;, determine the command needed to print out “hello” &lt;em&gt;without&lt;/em&gt; the trailing newline, and verify using your terminal that it works as expected.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hints&lt;/em&gt;: To determine the placement of the command-line option, it may help to refer to &lt;a href=&quot;command_line_fragment.html#fig-anatomy&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By comparing your result with &lt;a href=&quot;command_line_fragment.html#code-with_newline&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt; and &lt;a href=&quot;command_line_fragment.html#code-without_newline&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;, you should be able to verify that you’ve used the option properly.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (&lt;em&gt;Note&lt;/em&gt;: This exercise may fail when using the default terminal program on some older versions of macOS.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In this case, I recommend installing &lt;a href=&quot;https://www.iterm2.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iTerm&lt;/a&gt; (which isn’t a bad idea anyway).) &lt;span class=&quot;exercise&quot; id=&quot;ex-man-echo-hello&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-with_newline&quot; data-tralics-id=&quot;uid49&quot; data-number=&quot;4&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 4:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The result of running &lt;code&gt;echo&lt;/code&gt; with a newline (without option).&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;go&quot;&gt;hello&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[~]$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;codelisting&quot; id=&quot;code-without_newline&quot; data-tralics-id=&quot;uid50&quot; data-number=&quot;5&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 5:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The result of running &lt;code&gt;echo&lt;/code&gt; without a newline (&lt;em&gt;with&lt;/em&gt; option).&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;go&quot;&gt;hello[~]$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-editing_the_line&quot; data-tralics-id=&quot;uid51&quot; class=&quot;subsection&quot; data-number=&quot;1.4&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-editing_the_line&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.4 &lt;/span&gt;Editing the line&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Command lines include several features to make it easy to repeat previous commands, possibly in edited form.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; These and many other command-line features often involve special keys on the keyboard, so for reference &lt;a href=&quot;command_line_fragment.html#table-keyboard_symbols&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt; shows these symbols for the various keys on a typical Macintosh keyboard.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Apply your technical sophistication (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;) if your keyboard differs.&lt;/p&gt;
&lt;div id=&quot;table-keyboard_symbols&quot; data-tralics-id=&quot;uid52&quot; data-number=&quot;1&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Key&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Command&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⌘&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Control&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⌃&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Shift&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⇧&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Option&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⌥&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Up, down, left, right&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;↑ ↓ ← →&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Enter/Return&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;↵&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Tab&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⇥&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Delete&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;⌫&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 1: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Miscellaneous keyboard symbols.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;One of the most useful ways to edit the line is to “up arrow” ↑, which simply retrieves the previous command.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Pressing up arrow again moves further up the list of commands, while “down arrow” ↓ goes back toward the bottom.&lt;/p&gt;
&lt;p&gt;Other common ways to edit the line use the control key, which (as we saw in &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;) is usually written as &lt;code&gt;Ctrl&lt;/code&gt; or &lt;code&gt;⌃&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, when typing a new command, or dealing with a previous command, it is often convenient to be able to move quickly within the line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Suppose we typed&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; goodbye
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;only to realize that we wanted to put &lt;code&gt;echo&lt;/code&gt; in front of it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; We could use the left arrow key ← to get to the beginning of the line, but it’s easier to type &lt;code&gt;⌃A&lt;/code&gt;, which takes us there immediately.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Similarly, &lt;code&gt;⌃E&lt;/code&gt; moves to the end of the line.&lt;sup id=&quot;cha-0_footnote-ref-11&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-11&quot;&gt;11&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Finally, &lt;code&gt;⌃U&lt;/code&gt; clears to the beginning of the line and lets us start over.&lt;/p&gt;
&lt;p&gt;The combination of &lt;code&gt;⌃A&lt;/code&gt;, &lt;code&gt;⌃E&lt;/code&gt;, and &lt;code&gt;⌃U&lt;/code&gt; will work on most systems, but they don’t do you much good if you’re editing a longer line, such as this one containing the first line of &lt;a href=&quot;http://www.shakespeares-sonnets.com/sonnet/1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sonnet 1 by William Shakespeare&lt;/a&gt; (&lt;a href=&quot;command_line_fragment.html#code-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-sonnet_1&quot; data-tralics-id=&quot;uid54&quot; data-number=&quot;6&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 6:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Printing the first line of Shakespeare’s first sonnet.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;From fairest creatures we desire increase,&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Suppose we wanted to change “From” to “FRom” to more closely match the text from the original sonnet (&lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-12&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-12&quot;&gt;12&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; We could type &lt;code&gt;⌃A&lt;/code&gt; followed by the right arrow key a few times, but on some systems it’s possible to move directly to the desired spot by combining the keyboard and mouse via Option-click.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; That is, you can hold down the Option key on your keyboard (if it exists),&lt;sup id=&quot;cha-0_footnote-ref-13&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-13&quot;&gt;13&lt;/a&gt;&lt;/sup&gt; and then click with the mouse pointer on the place in the command where you want the cursor.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This would let us move right to the “o” in “From”, allowing us to delete the “r” and yielding &lt;a href=&quot;command_line_fragment.html#code-sonnet_1_edited&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;7&lt;/span&gt;&lt;/a&gt; directly.&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-sonnet_1&quot; data-tralics-id=&quot;uid57&quot; data-number=&quot;12&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/Sonnet_1.jpg&quot; alt=&quot;images/figures/Sonnet_1&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 12: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The original appearance of Shakespeare’s first sonnet.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-sonnet_1_edited&quot; data-tralics-id=&quot;uid58&quot; data-number=&quot;7&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 7:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;The result of editing a longer command-line command.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;FRom fairest creatures we desire increase,&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;I usually move around the command line with a combination of &lt;code&gt;⌃A&lt;/code&gt;, &lt;code&gt;⌃E&lt;/code&gt;, and right &amp;amp; left arrow keys, but for longer commands Option-click can be a big help.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (I also frequently change my mind about the exact command I’m typing, in which case I usually find that hitting &lt;code&gt;⌃U&lt;/code&gt; and starting over again is the fastest way to proceed.)&lt;/p&gt;
&lt;div id=&quot;sec-exercises_editing_the_line&quot; data-tralics-id=&quot;uid59&quot; class=&quot;subsubsection&quot; data-number=&quot;1.4.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_editing_the_line&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Using the up arrow, print to the screen the strings “fee”, “fie”, “foe”, and “fum” without retyping &lt;code&gt;echo&lt;/code&gt; each time. &lt;span class=&quot;exercise&quot; id=&quot;ex-up-arrow&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Starting with the line in &lt;a href=&quot;command_line_fragment.html#code-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;, use any combination of &lt;code&gt;⌃A&lt;/code&gt;, &lt;code&gt;⌃E&lt;/code&gt;, arrow keys, or Option-click to change the occurrences of the short s to the archaic &lt;a href=&quot;https://en.wikipedia.org/wiki/Long_s&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;long s&lt;/a&gt; “ſ” in order to match the appearance of the original (&lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In other words, the argument to &lt;code&gt;echo&lt;/code&gt; should read “FRom faireſt creatures we deſire increaſe,”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: It’s unlikely that your keyboard can produce “ſ” natively, so either copy it from the text of this tutorial or &lt;a href=&quot;http://lmgtfy.com/?q=unicode+long+s&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google for it&lt;/a&gt; and copy it from the Internet.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (If you have trouble copying and pasting into your terminal, I suggest applying the ideas in &lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt; to figure out how to do it on your system.) &lt;span class=&quot;exercise&quot; id=&quot;ex-archaic&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-cleaning_up&quot; data-tralics-id=&quot;uid62&quot; class=&quot;subsection&quot; data-number=&quot;1.5&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-cleaning_up&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.5 &lt;/span&gt;Cleaning up&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When using the command line, sometimes it’s convenient to be able to clean up by clearing the screen, which we can do with &lt;code&gt;clear&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; clear
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A keyboard shortcut for this is &lt;code&gt;⌃L&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, when we are done with a terminal window (or tab) and are ready to exit, we can use the &lt;code&gt;exit&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A keyboard shortcut for this is &lt;code&gt;⌃D&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&quot;sec-exercises_cleaning&quot; data-tralics-id=&quot;uid63&quot; class=&quot;subsubsection&quot; data-number=&quot;1.5.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_cleaning&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Clear the contents of the current tab. &lt;span class=&quot;exercise&quot; id=&quot;ex-clear-contents&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Open a new tab, execute &lt;code&gt;echo ’hello’&lt;/code&gt;, and then exit. &lt;span class=&quot;exercise&quot; id=&quot;ex-new-tab&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-summary_cleaning&quot; data-tralics-id=&quot;uid66&quot; class=&quot;subsection&quot; data-number=&quot;1.6&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-summary_cleaning&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.6 &lt;/span&gt;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-man_echo&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;table-man_echo&quot; data-tralics-id=&quot;uid67&quot; data-number=&quot;2&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;echo &amp;lt;string&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Print string to screen&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ echo hello&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;man &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Display manual page for command&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ man echo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃C&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Get out of trouble&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ tail&lt;/code&gt;&lt;code class=&quot;inline_verbatim&quot;&gt;^C&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃A&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to beginning of line&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃E&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to end of line&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃U&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Delete to beginning of line&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Option-click&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move cursor to location clicked&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;Up &amp;amp; down arrow&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Scroll through previous commands&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;clear&lt;/code&gt; or &lt;code class=&quot;tt&quot;&gt;⌃L&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Clear screen&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ clear&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;exit&lt;/code&gt; or &lt;code class=&quot;tt&quot;&gt;⌃D&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Exit terminal&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ exit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 2: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Important commands from &lt;a href=&quot;command_line_fragment.html#sec-basics&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_summary_basics&quot; data-tralics-id=&quot;uid68&quot; class=&quot;subsubsection&quot; data-number=&quot;1.6.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_summary_basics&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Write a command to print the string &lt;code&gt;Use &quot;man echo&quot;&lt;/code&gt;, &lt;em&gt;including&lt;/em&gt; the quotes; i.e., take care not to print out &lt;code&gt;Use man echo&lt;/code&gt; instead.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use double quotes in the inner string, and wrap the whole thing in single quotes. &lt;span class=&quot;exercise&quot; id=&quot;ex-command-man&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By running &lt;code&gt;man sleep&lt;/code&gt;, figure out how to make the terminal “sleep” for 5 seconds, and execute the command to do so. &lt;span class=&quot;exercise&quot; id=&quot;ex-man-sleep&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Execute the command to sleep for 5000 seconds, realize that’s well over an hour, and then use the instructions from &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt; to get out of trouble. &lt;span class=&quot;exercise&quot; id=&quot;ex-out-of-trouble&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;sec-manipulating_files&quot; data-tralics-id=&quot;cid2&quot; class=&quot;section&quot; data-number=&quot;2&quot;&gt;&lt;h2&gt;&lt;a href=&quot;command_line_fragment.html#sec-manipulating_files&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2 &lt;/span&gt;Manipulating files&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having covered how to run a basic command, we’re now ready to learn how to manipulate files, one of the most important tasks at the command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because this tutorial assumes no technical prerequisites, we’re not going to require any familiarity with programs designed to edit text.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Such programs, called &lt;em&gt;text editors&lt;/em&gt;, are the subject of the next tutorial in the sequence, &lt;a href=&quot;http://learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Text Editor to Be Dangerous&lt;/em&gt;&lt;/a&gt;.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This means that we’ll need to create files by hand at the command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; But this is a feature, not a bug (&lt;a href=&quot;command_line_fragment.html#aside-speak_geek&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;), because learning to create files at the command line is a valuable skill in itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-manipulating_files&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-speak_geek&quot; data-tralics-id=&quot;uid72&quot; data-number=&quot;6&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 6.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Learning to speak “geek”&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;One important part of learning software development is becoming familiar with the &lt;a href=&quot;http://www.catb.org/~esr/faqs/hacker-howto.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hacker&lt;/a&gt;, nerd, and geek culture from which much of it springs.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, the phrase “It’s not a bug, it’s a feature” is a common way of recasting a seeming flaw as a virtue.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As the Urban Dictionary &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=It%27s+not+a+bug%2C+it%27s+a+feature&amp;amp;defid=6751775&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;puts it&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;&lt;p&gt;&lt;strong&gt;It’s not a bug, it’s a feature&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Excuse made by software developers when they try to convince the user that a flaw in their program is actually what it’s supposed to be doing.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;The &lt;a href=&quot;http://www.catb.org/jargon/html/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jargon File&lt;/a&gt;, which includes an &lt;a href=&quot;http://www.catb.org/jargon/html/go01.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;enormous and entertaining lexicon&lt;/a&gt; of hacker terms, expands on this theme in its entry on &lt;a href=&quot;http://www.catb.org/jargon/html/F/feature.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;feature&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;&lt;p&gt;“Undocumented feature” is a common, allegedly humorous euphemism for a &lt;a href=&quot;http://www.catb.org/jargon/html/B/bug.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;bug&lt;/em&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; There’s a related joke that is sometimes referred to as the “one-question geek test”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; You say to someone “I saw a Volkswagen Beetle today with a vanity license plate that read FEATURE”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; If he/she laughs, he/she is a &lt;a href=&quot;http://www.catb.org/jargon/html/G/geek.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;geek&lt;/em&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;The joke here is that, because “bug” is a common slang term for a Volkswagen Beetle, a Beetle with the vanity plate FEATURE is a real-life manifestation of “It’s not a bug, it’s a feature” (&lt;a href=&quot;command_line_fragment.html#fig-bug_feature&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;13&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Even if you’re not a geek or nerd yourself, learning to “speak geek” will help you navigate both the technological landscape and the social world that surrounds it.&lt;/p&gt;

&lt;/div&gt;&lt;div class=&quot;center figure&quot; id=&quot;fig-bug_feature&quot; data-tralics-id=&quot;uid73&quot; data-number=&quot;13&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/bug_feature.png&quot; alt=&quot;images/figures/bug_feature&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 13: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;It’s not a bug, it’s a feature.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-redirecting_and_appending&quot; data-tralics-id=&quot;uid74&quot; class=&quot;subsection&quot; data-number=&quot;2.1&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-redirecting_and_appending&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.1 &lt;/span&gt;Redirecting and appending&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let’s pick up (more or less) where we left off in &lt;a href=&quot;command_line_fragment.html#sec-basics&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;, with an &lt;code&gt;echo&lt;/code&gt; command to print out the first line of Shakespeare’s first sonnet (&lt;a href=&quot;command_line_fragment.html#code-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;From fairest creatures we desire increase,&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Our task now is to create a file containing this line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Even without the benefit of a text editor, it is possible to do this using the &lt;em&gt;redirect operator&lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;From fairest creatures we desire increase,&quot;&lt;/span&gt; &amp;gt; sonnet_1.txt
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(Recall that you can use up arrow to retrieve the previous command rather than typing it from scratch.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Here the right angle bracket &lt;code&gt;&amp;gt;&lt;/code&gt; takes the string output from &lt;code&gt;echo&lt;/code&gt; and redirects its contents to a file called &lt;code&gt;sonnet_1.txt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;How can we tell if the redirect worked?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; We’ll learn some more advanced command-line tools for inspecting files in &lt;a href=&quot;command_line_fragment.html#sec-inspecting_files&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;, but for now we’ll use the &lt;code&gt;cat&lt;/code&gt; command, which simply dumps the contents of the file to the screen:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat sonnet_1.txt
&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The name &lt;code&gt;cat&lt;/code&gt; is short for “&lt;a href=&quot;http://dictionary.reference.com/browse/concatenate&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;concatenate&lt;/a&gt;”, which is a hint that it can be used to combine the contents of multiple files, but the usage above (to dump the contents of a single file to the screen) is extremely common.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Think of &lt;code&gt;cat&lt;/code&gt; as a “quick-and-dirty” way to view the contents of a particular file (&lt;a href=&quot;command_line_fragment.html#fig-cat&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;14&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-14&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-14&quot;&gt;14&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-cat&quot; data-tralics-id=&quot;uid76&quot; data-number=&quot;14&quot;&gt;&lt;span class=&quot;graphics&quot;&gt;&lt;img src=&quot;images/figures/cat.jpg&quot; alt=&quot;cat&quot;&gt;&lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 14: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Viewing a file with &lt;code&gt;cat&lt;/code&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In order to add the second line of the sonnet (in modernized spelling), we can use the &lt;em&gt;append operator&lt;/em&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;That thereby beauty&#39;s Rose might never die,&quot;&lt;/span&gt; &amp;gt;&amp;gt; sonnet_1.txt
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This just adds the line to the end of the given file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As before, we can see the result using &lt;code&gt;cat&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat sonnet_1.txt
&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;That thereby beauty&#39;s Rose might never die,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(To get to this command, I hope you just hit up arrow twice instead of retyping it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; If so, you’re definitely getting the hang of this.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The result above shows that the double right angle bracket &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; appended the string from &lt;code&gt;echo&lt;/code&gt; to the file &lt;code&gt;sonnet_1.txt&lt;/code&gt; as expected.&lt;/p&gt;
&lt;p&gt;Modernized treatments of the &lt;em&gt;Sonnets&lt;/em&gt; sometimes &lt;a href=&quot;http://dictionary.reference.com/browse/emend&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;emend&lt;/a&gt; &lt;em&gt;Rose&lt;/em&gt; to &lt;em&gt;rose&lt;/em&gt; (thereby obscuring the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tudor_rose&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;likely meaning&lt;/a&gt;), and we can make a second file following this convention using two more calls to &lt;code&gt;echo&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;From fairest creatures we desire increase,&quot;&lt;/span&gt; &amp;gt; sonnet_1_lower_case.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;That thereby beauty&#39;s rose might never die,&quot;&lt;/span&gt; &amp;gt;&amp;gt; sonnet_1_lower_case.txt
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In order to facilitate the comparison of files that are similar but not identical, Unix systems come with the helpful &lt;code&gt;diff&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;$ diff sonnet_1.txt sonnet_1_lower_case.txt
&amp;lt; That thereby beauty&#39;s Rose might never die,
&lt;span class=&quot;gd&quot;&gt;---&lt;/span&gt;
&amp;gt; That thereby beauty&#39;s rose might never die,
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When discussing computer files, &lt;em&gt;diff&lt;/em&gt; is frequently employed both as a noun (“What’s the diff between those files?”) and as a verb (“You should diff the files to see what changed.”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As with many technical terms, this sometimes bleeds over into common usage, such as “Diff present ideas against those of various past cultures, and see what you get.”&lt;sup id=&quot;cha-0_footnote-ref-15&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-15&quot;&gt;15&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div id=&quot;sec-exercises_redirecting_appending&quot; data-tralics-id=&quot;uid78&quot; class=&quot;subsubsection&quot; data-number=&quot;2.1.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_redirecting_appending&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;At the end of each of the exercises below, use the &lt;code&gt;cat&lt;/code&gt; command to verify your answer.&lt;/p&gt;
 &lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;echo&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;, make files called &lt;code&gt;line_1.txt&lt;/code&gt; and &lt;code&gt;line_2.txt&lt;/code&gt; containing the first and second lines of Sonnet 1, respectively. &lt;span class=&quot;exercise&quot; id=&quot;ex-echo-redirect&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Replicate the original &lt;code&gt;sonnet_1.txt&lt;/code&gt; (containing the first two lines of the sonnet) by first redirecting the contents of &lt;code&gt;line_1.txt&lt;/code&gt; and then appending the contents of &lt;code&gt;line_2.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Call the new file &lt;code&gt;sonnet_1_copy.txt&lt;/code&gt;, and confirm using &lt;code&gt;diff&lt;/code&gt; that it’s identical to &lt;code&gt;sonnet_1.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: When there is no diff between two files, &lt;code&gt;diff&lt;/code&gt; simply outputs nothing. &lt;span class=&quot;exercise&quot; id=&quot;ex-echo-redirect-append&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;cat&lt;/code&gt; to combine the contents of &lt;code&gt;line_1.txt&lt;/code&gt; and &lt;code&gt;line_2.txt&lt;/code&gt; in reverse order using a &lt;em&gt;single&lt;/em&gt; command, yielding the file &lt;code&gt;sonnet_1_reversed.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: The &lt;code&gt;cat&lt;/code&gt; command can take multiple arguments. &lt;span class=&quot;exercise&quot; id=&quot;ex-echo-redirect-reverse&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-listing&quot; data-tralics-id=&quot;uid82&quot; class=&quot;subsection&quot; data-number=&quot;2.2&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.2 &lt;/span&gt;Listing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Perhaps the mostly frequently typed command on the Unix command line is &lt;code&gt;ls&lt;/code&gt;, short for “list” (&lt;a href=&quot;command_line_fragment.html#code-ls&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-ls&quot; data-tralics-id=&quot;uid83&quot; data-number=&quot;8&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 8:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Listing files and directories with &lt;code&gt;ls&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Output will vary.)&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;Desktop&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Downloads&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;sonnet_1_reversed.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;ls&lt;/code&gt; command simply lists all the files and directories in the current directory (except for those that are &lt;em&gt;hidden&lt;/em&gt;, which we’ll learn more about in a moment).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In this sense, it’s effectively a command-line version of the graphical browser used to show files and directories (also called “folders”), as seen in &lt;a href=&quot;command_line_fragment.html#fig-file_listing&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;15&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (We’ll sharpen our understanding of directories and folders in &lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As with a graphical file browser, the output in &lt;a href=&quot;command_line_fragment.html#code-ls&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt; is just a sample, and results will differ based on the details of your system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (This goes for all the &lt;code&gt;ls&lt;/code&gt; examples, so don’t be concerned if there are minor differences in output.)&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-file_listing&quot; data-tralics-id=&quot;uid84&quot; data-number=&quot;15&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/file_listing.png&quot; alt=&quot;images/figures/file_listing&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 15: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The graphical equivalent of &lt;code&gt;ls&lt;/code&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ls&lt;/code&gt; command can be used to check if a file (or directory) exists, because trying to &lt;code&gt;ls&lt;/code&gt; a nonexistent file results in an error message, as seen in &lt;a href=&quot;command_line_fragment.html#code-ls_no_such&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-ls_no_such&quot; data-tralics-id=&quot;uid85&quot; data-number=&quot;9&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 9:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Running &lt;code&gt;ls&lt;/code&gt; on a nonexistent file.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls foo
&lt;span class=&quot;go&quot;&gt;ls: foo: No such file or directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; touch foo
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls foo
&lt;span class=&quot;go&quot;&gt;foo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;command_line_fragment.html#code-ls_no_such&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt; uses the &lt;code&gt;touch&lt;/code&gt; command to create an empty file with the name &lt;code&gt;foo&lt;/code&gt; (&lt;a href=&quot;command_line_fragment.html#aside-foo_bar&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;7&lt;/span&gt;&lt;/a&gt;), so the second time we run &lt;code&gt;ls&lt;/code&gt; the error message is gone.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The stated purpose of &lt;code&gt;touch&lt;/code&gt; is to change the modification time on files or directories, but (ab)using &lt;code&gt;touch&lt;/code&gt; to create empty files as in &lt;a href=&quot;command_line_fragment.html#code-ls_no_such&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt; is a common Unix idiom.)&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-foo_bar&quot; data-tralics-id=&quot;uid86&quot; data-number=&quot;7&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 7.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Foo, bar, baz, etc.&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;When reading about computers, you will encounter certain strange words—words like &lt;em&gt;foo&lt;/em&gt;, &lt;em&gt;bar&lt;/em&gt;, and &lt;em&gt;baz&lt;/em&gt;—with surprising frequency.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, in addition to &lt;code class=&quot;tt&quot;&gt;ls foo&lt;/code&gt; and &lt;code class=&quot;tt&quot;&gt;touch foo&lt;/code&gt;, we have already seen four such references in this tutorial: in a typical command-line command (&lt;a href=&quot;command_line_fragment.html#fig-command_line_command&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;), in a virtual machine password (&lt;code class=&quot;tt&quot;&gt;foobar!&lt;/code&gt;, &lt;a href=&quot;command_line_fragment.html#aside-virtual_machine&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;), again when getting out of trouble (&lt;code class=&quot;tt&quot;&gt;grep foobar&lt;/code&gt;, &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;), and yet again in a man page (&lt;a href=&quot;command_line_fragment.html#code-man_man&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The first three were my own uses, but the last I had nothing to do with:&lt;/p&gt;
&lt;pre&gt; ...if name contains a slash (/) then man interprets
 it as a file specification,  so that you can do man
 ./foo.5 or even man /cd/foo/bar.1.gz.&lt;/pre&gt;
&lt;p&gt;Here we see both &lt;em&gt;foo&lt;/em&gt; and &lt;em&gt;bar&lt;/em&gt; making an appearance in the man page for &lt;code class=&quot;tt&quot;&gt;man&lt;/code&gt; itself—an unambiguous testament to their ubiquity in computing.&lt;/p&gt;
&lt;p&gt;What is the origin of these odd terms?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As usual, the &lt;a href=&quot;http://www.catb.org/jargon/html/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jargon File&lt;/a&gt; (via its entry on &lt;a href=&quot;http://www.catb.org/jargon/html/F/foo.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;foo&lt;/em&gt;&lt;/a&gt;) enlightens us:&lt;/p&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;&lt;p&gt;&lt;strong&gt;foo&lt;/strong&gt;: /foo/&lt;/p&gt;
&lt;p&gt;1.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; interj.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Term of disgust.&lt;/p&gt;
&lt;p&gt;2.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; [very common] Used very generally as a sample name for absolutely anything, esp. programs and files (esp. scratch files).&lt;/p&gt;
&lt;p&gt;3.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; First on the standard list of &lt;a href=&quot;http://www.catb.org/jargon/html/M/metasyntactic-variable.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;metasyntactic variable&lt;/a&gt;s used in syntax examples.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; See also &lt;a href=&quot;http://www.catb.org/jargon/html/B/bar.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;bar&lt;/a&gt;, &lt;a href=&quot;http://www.catb.org/jargon/html/B/baz.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;baz&lt;/a&gt;, &lt;a href=&quot;http://www.catb.org/jargon/html/Q/qux.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;qux&lt;/a&gt;, &lt;a href=&quot;http://www.catb.org/jargon/html/Q/quux.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;quux&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;When ‘foo’ is used in connection with ‘bar’ it has generally traced to the WWII-era Army slang acronym &lt;a href=&quot;http://www.catb.org/jargon/html/F/FUBAR.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;FUBAR&lt;/em&gt;&lt;/a&gt; [&lt;a href=&quot;http://www.urbandictionary.com/define.php?term=fubar&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;see original meaning&lt;/a&gt;], later modified to &lt;a href=&quot;http://www.catb.org/jargon/html/F/foobar.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;foobar&lt;/em&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Early versions of the Jargon File interpreted this change as a post-war bowdlerization, but it now seems more likely that FUBAR was itself a derivative of ‘foo’ perhaps influenced by German &lt;em&gt;furchtbar&lt;/em&gt; (terrible) — ‘foobar’ may actually have been the &lt;em&gt;original&lt;/em&gt; form.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Following the link to &lt;a href=&quot;http://www.catb.org/jargon/html/M/metasyntactic-variable.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;metasyntactic variable&lt;/a&gt;s, we then find the following:&lt;/p&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;&lt;p&gt;&lt;strong&gt;metasyntactic variable&lt;/strong&gt;: n.&lt;/p&gt;
&lt;p&gt;A name used in examples and understood to stand for whatever thing is under discussion, or any random member of a class of things under discussion.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The word foo is the canonical example.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To avoid confusion, hackers never (well, hardly ever) use ‘foo’ or other words like it as permanent names for anything.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In filenames, a common convention is that any filename beginning with a metasyntactic-variable name is a scratch file that may be deleted at any time.&lt;/p&gt;
&lt;p&gt;Metasyntactic variables are so called because (1) they are variables in the metalanguage used to talk about programs, etc.; (2) they are variables whose values are often variables (as in usages like “the value of f(foo,bar) is the sum of foo and bar”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; However, it has been plausibly suggested that the real reason for the term “metasyntactic variable” is that it sounds good.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;In other words, if you want to create a file, and the name doesn’t matter, the name is usually “foo”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Once you’ve used “foo”, the next file is called “bar”, the one after that “baz”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Continuations from there vary (“quux” is one &lt;a href=&quot;http://www.catb.org/jargon/html/Q/quux.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;common choice&lt;/a&gt;), but in many cases three is enough.&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;A common pattern when using the command line is changing directories using &lt;code&gt;cd&lt;/code&gt; (covered in &lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;) and then immediately typing &lt;code&gt;ls&lt;/code&gt; to view the contents of the directory.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This lets us orient ourselves, and is a good first step toward whatever our next action might be.&lt;/p&gt;
&lt;p&gt;One useful ability of &lt;code&gt;ls&lt;/code&gt; is support for the &lt;em&gt;wildcard character&lt;/em&gt; &lt;code&gt;*&lt;/code&gt; (read “star”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, to list all files ending in “.txt”, we would type this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls *.txt
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;sonnet_1_reversed.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here &lt;code&gt;*.txt&lt;/code&gt; (read “star dot tee-ex-tee”) automatically expands to all the filenames that match the pattern “any string followed by .txt”.&lt;/p&gt;
&lt;p&gt;There are three particularly important optional forms of &lt;code&gt;ls&lt;/code&gt;, starting with the “long form”, using the option &lt;code&gt;-l&lt;/code&gt; (read “dash-ell”):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -l *.txt
&lt;span class=&quot;go&quot;&gt;total 16&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r-- 1 mhartl staff  87 Jul 20 18:05 sonnet_1.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;-rw-r--r-- 1 mhartl staff 294 Jul 21 12:09 sonnet_1_reversed.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For now, you can safely ignore most of the information output by &lt;code&gt;ls -l&lt;/code&gt;, but note that the long form lists a date and time indicating the last time the file was modified.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The number before the date is the &lt;em&gt;size&lt;/em&gt; of the file, in bytes.&lt;sup id=&quot;cha-0_footnote-ref-16&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-16&quot;&gt;16&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;A second powerful &lt;code&gt;ls&lt;/code&gt; variant is “list by &lt;strong&gt;r&lt;/strong&gt;eversed &lt;strong&gt;t&lt;/strong&gt;ime of modification (&lt;strong&gt;l&lt;/strong&gt;ong format)”, or &lt;code&gt;ls -rtl&lt;/code&gt;, which lists the long form of each file or directory in order of how recently it was modified (&lt;em&gt;reversed&lt;/em&gt; so that the most recently modified entries appear at the bottom of the screen for easy inspection).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is particularly useful when there are a lot of files in the directory but you really only care about seeing the ones that have been modified recently, such when confirming a file download.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; We’ll see an example of this in &lt;a href=&quot;command_line_fragment.html#sec-downloading_a_file&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.1&lt;/span&gt;&lt;/a&gt;, but you are free to try it now:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -rtl
&lt;span class=&quot;go&quot;&gt;&amp;lt;results system-dependent&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;By the way, &lt;code&gt;-rtl&lt;/code&gt; is the commonly used compact form, but you can also pass the options individually, like this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -r -t -l
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In addition, their order is irrelevant, so typing &lt;code&gt;ls -trl&lt;/code&gt; gives the same result.&lt;/p&gt;
&lt;div id=&quot;sec-hidden_files&quot; data-tralics-id=&quot;uid88&quot; class=&quot;subsubsection&quot; data-number=&quot;2.2.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-hidden_files&quot; class=&quot;heading&quot;&gt;Hidden files&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Finally, Unix has the concept of “hidden files (and directories)”, which don’t show up by default when listing files.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Hidden files and directories are identified by starting with a dot &lt;code&gt;.&lt;/code&gt;, and are commonly used for things like storing user preferences.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, in &lt;a href=&quot;http://learnenough.com/git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Git to Be Dangerous&lt;/em&gt;&lt;/a&gt;, we’ll create a file called &lt;code&gt;.gitignore&lt;/code&gt; that tells a particular program (Git) to ignore files matching certain patterns.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a concrete example, to ignore all files ending in “.txt”, we could do this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.txt&quot;&lt;/span&gt; &amp;gt; .gitignore
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cat .gitignore
&lt;span class=&quot;go&quot;&gt;*.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If we then run &lt;code&gt;ls&lt;/code&gt;, the file won’t show up, because it’s hidden:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;sonnet_1_reversed.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To get &lt;code&gt;ls&lt;/code&gt; to display hidden files and directories, we need to pass it the &lt;code&gt;-a&lt;/code&gt; option (for “all”):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -a
&lt;span class=&quot;go&quot;&gt;.           .gitignore      sonnet_1_reversed.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;..          sonnet_1.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now &lt;code&gt;.gitignore&lt;/code&gt; shows up, as expected.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (We’ll learn what &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; refer to in &lt;a href=&quot;command_line_fragment.html#sec-navigating_directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4.3&lt;/span&gt;&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;sec-exercises_listing&quot; data-tralics-id=&quot;uid89&quot; class=&quot;subsubsection&quot; data-number=&quot;2.2.2&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_listing&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;What’s the command to list all the non-hidden files and directories that start with the letter “s”? &lt;span class=&quot;exercise&quot; id=&quot;ex-command-list-all-prefix&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;What is the command to list all the non-hidden files that contain the string “onnet”, long-form by reverse modification time?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use the wildcard operator at both the beginning and the end. &lt;span class=&quot;exercise&quot; id=&quot;ex-command-list-all-contains&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;What is the command to list &lt;em&gt;all&lt;/em&gt; files (including hidden ones) by reverse modification time, in long form? &lt;span class=&quot;exercise&quot; id=&quot;ex-command-list-all-reverse-mod&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-renaming_copying_deleting&quot; data-tralics-id=&quot;uid93&quot; class=&quot;subsection&quot; data-number=&quot;2.3&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-renaming_copying_deleting&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.3 &lt;/span&gt;Renaming, copying, deleting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next to listing files, probably the most common file operations involve renaming, copying, and deleting them.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As with listing files, most modern operating systems provide a graphical user interface to such tasks, but in many contexts it is more convenient to perform them at the command line.&lt;/p&gt;
&lt;p&gt;The way to rename a file is with the &lt;code&gt;mv&lt;/code&gt; command, short for “move”:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test text&quot;&lt;/span&gt; &amp;gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;mv &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;test_file.txt
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;test_file.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This renames the file called &lt;code&gt;test&lt;/code&gt; to &lt;code&gt;test_file.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The final step in the example runs &lt;code&gt;ls&lt;/code&gt; to confirm that the file renaming was successful, but system-specific files other than the test file are omitted from the output shown.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The name “move” comes from the general use of &lt;code&gt;mv&lt;/code&gt; to move a file to a different directory (&lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;), possibly renaming it en route.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; When the origin and target directories coincide, such a “move” reduces to a simple renaming.)&lt;/p&gt;
&lt;p&gt;The way to copy a file is with &lt;code&gt;cp&lt;/code&gt;, short for “copy”:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp test_file.txt second_test.txt
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;second_test.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;test_file.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finally, the command for deleting a file is &lt;code&gt;rm&lt;/code&gt;, for “remove”:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rm second_test.txt
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;remove second_test.txt? y&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls second_test.txt
&lt;span class=&quot;go&quot;&gt;ls: second_test.txt: No such file or directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note that, on many systems, by default you will be prompted to confirm the removal of the file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Any answer starting with the letter “y” or “Y” will cause the file to be deleted, and any other answers will prevent the deletion from occurring.&lt;/p&gt;
&lt;p&gt;By the way, in the calls to &lt;code&gt;cp&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; above, I would almost certainly not type out &lt;code&gt;test_file.txt&lt;/code&gt; or &lt;code&gt;second_test.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Instead, I would type something like &lt;code&gt;test⇥&lt;/code&gt; or &lt;code&gt;sec⇥&lt;/code&gt; (where ⇥ represents the tab key (&lt;a href=&quot;command_line_fragment.html#table-keyboard_symbols&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;)), thereby making use of &lt;em&gt;tab completion&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#aside-tab_completion&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-tab_completion&quot; data-tralics-id=&quot;uid94&quot; data-number=&quot;8&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 8.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Tab completion&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Most modern command-line programs (shells) support &lt;em&gt;tab completion&lt;/em&gt;, which involves automatically completing a word if there’s only one valid match on the system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, if the only file starting with the letters “tes” is &lt;code class=&quot;tt&quot;&gt;test_file&lt;/code&gt;, we could create the command to remove it as follows:&lt;/p&gt;
&lt;pre&gt; $ rm tes⇥&lt;/pre&gt;
&lt;p&gt;where ⇥ is the tab key (&lt;a href=&quot;command_line_fragment.html#table-keyboard_symbols&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The shell would then complete the filename, yielding &lt;code class=&quot;tt&quot;&gt;rm test_file&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Especially with longer filenames (or directories), tab completion can save a huge amount of typing.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; It also lowers the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cognitive_load&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;cognitive load&lt;/em&gt;&lt;/a&gt;, since it means you don’t have to remember the full name of the file—only its first few letters.&lt;/p&gt;
&lt;p&gt;If the match is ambiguous, as would happen if we had files called &lt;code class=&quot;tt&quot;&gt;foobarquux&lt;/code&gt; and &lt;code class=&quot;tt&quot;&gt;foobazquux&lt;/code&gt;, the word will be completed only as far as possible, so&lt;/p&gt;
&lt;pre&gt; $ ls foo⇥&lt;/pre&gt;
&lt;p&gt;would be completed to&lt;/p&gt;
&lt;pre&gt; $ ls fooba&lt;/pre&gt;
&lt;p&gt;If we then hit tab &lt;em&gt;again&lt;/em&gt;, we would see a list of matches:&lt;/p&gt;
&lt;pre&gt; $ ls fooba⇥
 foobarquux foobazquux&lt;/pre&gt;
&lt;p&gt;We could then type more letters to resolve the ambiguity, so typing the &lt;code class=&quot;tt&quot;&gt;r&lt;/code&gt; after &lt;code class=&quot;tt&quot;&gt;fooba&lt;/code&gt; and hitting &lt;code class=&quot;tt&quot;&gt;⇥&lt;/code&gt; would yield&lt;/p&gt;
&lt;pre&gt; $ ls foobar⇥&lt;/pre&gt;
&lt;p&gt;which would be completed to &lt;code class=&quot;tt&quot;&gt;foobarquux&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This situation is common enough that experienced command-line users will often just hit something like &lt;code class=&quot;tt&quot;&gt;f⇥⇥&lt;/code&gt; to get the shell to show all the possibilities:&lt;/p&gt;
&lt;pre&gt; $ ls f⇥⇥
 figure_1.png foobarquux  foobazquux&lt;/pre&gt;
&lt;p&gt;Additional letters would then be typed as usual to resolve the ambiguity.&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;The default behavior of &lt;code&gt;rm&lt;/code&gt; on an unconfigured Unix system is actually to remove the file without confirmation, but (because deletion is irreversible) many systems &lt;em&gt;alias&lt;/em&gt; the &lt;code&gt;rm&lt;/code&gt; command to use an option to turn on confirmation.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (As you can verify by running &lt;code&gt;man rm&lt;/code&gt;, this option is &lt;code&gt;-i&lt;/code&gt;, so in fact &lt;code&gt;rm&lt;/code&gt; is really &lt;code&gt;rm -i&lt;/code&gt;.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; There are many situations where confirmation is inconvenient, though, such as when you’re deleting a list of files and don’t want to have to confirm each one.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is especially common when using the wildcard &lt;code&gt;*&lt;/code&gt; introduced in &lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.2&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, to remove all the files ending with “.txt” using a single command, &lt;em&gt;without&lt;/em&gt; having to confirm each one, you can type this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rm -f *.txt
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here &lt;code&gt;-f&lt;/code&gt; (for “force”) overrides the implicit &lt;code&gt;-i&lt;/code&gt; option and removes all files immediately.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Nota_bene&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;N.B.&lt;/a&gt; You are now in a position to understand the command in &lt;a href=&quot;command_line_fragment.html#fig-command_line_command&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.)&lt;/p&gt;
&lt;div id=&quot;sec-unix_terseness&quot; data-tralics-id=&quot;uid95&quot; class=&quot;subsubsection&quot; data-number=&quot;2.3.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-unix_terseness&quot; class=&quot;heading&quot;&gt;Unix terseness&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;One thing you might notice is that the commands in this section and in &lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.2&lt;/span&gt;&lt;/a&gt; are short: instead of &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;move&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt;, we have &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;cp&lt;/code&gt;, and &lt;code&gt;rm&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because the former command names are easier to understand and memorize, you may wonder why the actual commands aren’t longer (&lt;a href=&quot;command_line_fragment.html#fig-y_u_no&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-y_u_no&quot; data-tralics-id=&quot;uid96&quot; data-number=&quot;16&quot;&gt;
&lt;div class=&quot;graphics image box&quot;&gt;&lt;img src=&quot;images/figures/y_u_no.jpg&quot; alt=&quot;images/figures/y_u_no&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 16: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The terseness of Unix commands can be a source of confusion.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The answer is that Unix dates from a time when most computer users logged on to centralized servers over slow connections, and there could be a noticeable delay between the time users pressed a key and the time it appeared on the terminal.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For frequently used commands like listing files, the difference between &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;ls&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; could be significant.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, the most commonly used Unix commands tend to be only two or three letters long.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because it makes them more difficult to memorize, this can be a minor inconvenience when learning them, but over a lifetime of command-line use the savings represented by, say, &lt;code&gt;mv&lt;/code&gt; really add up.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;sec-exercises_manipulating&quot; data-tralics-id=&quot;uid97&quot; class=&quot;subsubsection&quot; data-number=&quot;2.3.2&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_manipulating&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;code&gt;echo&lt;/code&gt; command and the redirect operator &lt;code&gt;&amp;gt;&lt;/code&gt; to make a file called &lt;code&gt;foo.txt&lt;/code&gt; containing the text “hello, world”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Then, using the &lt;code&gt;cp&lt;/code&gt; command, make a copy of &lt;code&gt;foo.txt&lt;/code&gt; called &lt;code&gt;bar.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Using the &lt;code&gt;diff&lt;/code&gt; command, confirm that the contents of both files are the same. &lt;span class=&quot;exercise&quot; id=&quot;ex-echo-redirect-cp&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By combining the &lt;code&gt;cat&lt;/code&gt; command and the redirect operator &lt;code&gt;&amp;gt;&lt;/code&gt;, create a copy of &lt;code&gt;foo.txt&lt;/code&gt; called &lt;code&gt;baz.txt&lt;/code&gt; &lt;em&gt;without&lt;/em&gt; using the &lt;code&gt;cp&lt;/code&gt; command. &lt;span class=&quot;exercise&quot; id=&quot;ex-cat-redirect-cp&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Create a file called &lt;code&gt;quux.txt&lt;/code&gt; containing the contents of &lt;code&gt;foo.txt&lt;/code&gt; followed by the contents of &lt;code&gt;bar.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: As noted in &lt;a href=&quot;command_line_fragment.html#sec-exercises_redirecting_appending&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.1.1&lt;/span&gt;&lt;/a&gt;, &lt;code&gt;cat&lt;/code&gt; can take multiple arguments. &lt;span class=&quot;exercise&quot; id=&quot;ex-cat-combine&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;How do &lt;code&gt;rm nonexistent&lt;/code&gt; and &lt;code&gt;rm -f nonexistent&lt;/code&gt; differ for a nonexistent file? &lt;span class=&quot;exercise&quot; id=&quot;ex-rm-f&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-summary_manipulating&quot; data-tralics-id=&quot;uid102&quot; class=&quot;subsection&quot; data-number=&quot;2.4&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-summary_manipulating&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.4 &lt;/span&gt;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-manipulating_files&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;table-manipulating_files&quot; data-tralics-id=&quot;uid103&quot; data-number=&quot;3&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Redirect output to filename&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ echo foo &amp;gt; foo.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Append output to filename&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ echo bar &amp;gt;&amp;gt; foo.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cat &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Print contents of file to screen&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cat hello.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;diff &amp;lt;f1&amp;gt; &amp;lt;f2&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Diff files 1 &amp;amp; 2&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ diff foo.txt bar.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;List directory or file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ls hello.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ls -l&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;List long form&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ls -l hello.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ls -rtl&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Long by reverse modification time&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ls -rtl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ls -a&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;List all (including hidden)&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ls -a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;touch &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Create an empty file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ touch foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;mv &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Rename (move) from old to new&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ mv foo bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cp &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Copy old to new&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cp foo bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;rm &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Remove (delete) file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ rm foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;rm -f &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Force-remove file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ rm -f bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 3: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Important commands from &lt;a href=&quot;command_line_fragment.html#sec-manipulating_files&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2&lt;/span&gt;&lt;/a&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_summary_manipulating&quot; data-tralics-id=&quot;uid104&quot; class=&quot;subsubsection&quot; data-number=&quot;2.4.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_summary_manipulating&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;div id=&quot;fig-copy_paste_sonnet_1&quot; data-tralics-id=&quot;uid105&quot; data-number=&quot;17&quot; class=&quot;figure&quot;&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;&lt;p&gt;FRom faireſt creatures we deſire increaſe, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
That thereby beauties &lt;em&gt;Roſe&lt;/em&gt; might neuer die, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
But as the riper ſhould by time deceaſe, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
His tender heire might beare his memory: &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
But thou contracted to thine owne bright eyes, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
Feed’ſt thy lights flame with ſelfe ſubſtantiall fewell, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
Making a famine where aboundance lies, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
Thy ſelfe thy foe,to thy ſweet ſelfe too cruell: &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
Thou that art now the worlds freſh ornament, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
And only herauld to the gaudy ſpring, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
Within thine owne bud burieſt thy content, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
And tender chorle makſt waſt in niggarding: &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
   Pitty the world,or elſe this glutton be, &lt;span class=&quot;break&quot;&gt;&lt;/span&gt;
   To eate the worlds due,by the graue and thee.&lt;span class=&quot;break&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 17: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A copy-and-pastable version of Shakespeare’s first sonnet (&lt;a href=&quot;https://en.wikipedia.org/wiki/Cf.&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;cf.&lt;/em&gt;&lt;/a&gt; &lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;).
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;By copying and pasting the text from the &lt;a href=&quot;https://www.learnenough.com/command-line-tutorial#fig-copy_paste_sonnet_1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTML version&lt;/a&gt; of &lt;a href=&quot;command_line_fragment.html#fig-copy_paste_sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;17&lt;/span&gt;&lt;/a&gt;, use &lt;code&gt;echo&lt;/code&gt; to make a file called &lt;code&gt;sonnet_1_complete.txt&lt;/code&gt; containing the full (original) text of Shakespeare’s first sonnet.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: You may recall getting stuck when &lt;code&gt;echo&lt;/code&gt; was followed by an unmatched double quote (&lt;a href=&quot;command_line_fragment.html#sec-our_first_command&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.2&lt;/span&gt;&lt;/a&gt; and &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;), as in &lt;code&gt;echo &quot;&lt;/code&gt;, but in fact this construction allows you to print out a multi-line block of text.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Just remember to put a closing quote at the end, and then redirect to a file with the appropriate name.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Check that the contents are correct using &lt;code&gt;cat&lt;/code&gt; (&lt;a href=&quot;command_line_fragment.html#fig-cat&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;14&lt;/span&gt;&lt;/a&gt;). &lt;span class=&quot;exercise&quot; id=&quot;ex-copy-paste-to-file&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Type the sequence of commands needed to create an empty file called &lt;code&gt;foo&lt;/code&gt;, rename it to &lt;code&gt;bar&lt;/code&gt;, and copy it to &lt;code&gt;baz&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-create-rename-copy&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;What is the command to list only the files starting with the letter “b”?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use a wildcard. &lt;span class=&quot;exercise&quot; id=&quot;ex-list-wildcard&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Remove both &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; using a &lt;em&gt;single&lt;/em&gt; call to &lt;code&gt;rm&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: If those are the only two files in the current directory that start with the letter “b”, you can use the wildcard pattern from the previous exercise. &lt;span class=&quot;exercise&quot; id=&quot;ex-rm-wildcard&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;sec-inspecting_files&quot; data-tralics-id=&quot;cid3&quot; class=&quot;section&quot; data-number=&quot;3&quot;&gt;&lt;h2&gt;&lt;a href=&quot;command_line_fragment.html#sec-inspecting_files&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3 &lt;/span&gt;Inspecting files&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having seen how to create and manipulate files, now it’s time to learn how to examine their contents.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is especially important for files too long to fit on a single screen.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In particular, we saw starting in &lt;a href=&quot;command_line_fragment.html#sec-redirecting_and_appending&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.1&lt;/span&gt;&lt;/a&gt; how to use the &lt;code&gt;cat&lt;/code&gt; command to dump the file contents to the screen, but this doesn’t work very well for longer files.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-inspecting_files&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;sec-downloading_a_file&quot; data-tralics-id=&quot;uid110&quot; class=&quot;subsection&quot; data-number=&quot;3.1&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-downloading_a_file&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.1 &lt;/span&gt;Downloading a file&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To give us a place to start, rather than creating a long file by hand (which is cumbersome) we’ll download a file from the Internet using the powerful &lt;code&gt;curl&lt;/code&gt; utility (sometimes written as “cURL”), which allows us to interact with a URL&lt;sup id=&quot;cha-0_footnote-ref-17&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-17&quot;&gt;17&lt;/a&gt;&lt;/sup&gt; at the command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Although it’s not part of the core Unix command set, the &lt;code&gt;curl&lt;/code&gt; command is widely available on Unix systems.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To make sure it’s available on your system, we can use the &lt;code&gt;which&lt;/code&gt; command, which looks to see if the given program is available at the command line.&lt;sup id=&quot;cha-0_footnote-ref-18&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-18&quot;&gt;18&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The way to use it is to type &lt;code&gt;which&lt;/code&gt; followed by the name of the program—in this case, &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; which curl
&lt;span class=&quot;go&quot;&gt;/usr/bin/curl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I’ve shown the output on my system (&lt;code&gt;/usr/bin/curl&lt;/code&gt;, usually read as “user bin curl”), but the result on your system may differ.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In particular, if the result is just a blank line, you will have to install &lt;code&gt;curl&lt;/code&gt;, which you can do by Googling for “install curl” followed by the name of your operating system.&lt;/p&gt;
&lt;p&gt;Once &lt;code&gt;curl&lt;/code&gt; is installed, we can download a file called &lt;code&gt;sonnets.txt&lt;/code&gt; containing a large corpus of text using the command in &lt;a href=&quot;command_line_fragment.html#code-curl&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;10&lt;/span&gt;&lt;/a&gt;.&lt;sup id=&quot;cha-0_footnote-ref-19&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-19&quot;&gt;19&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-curl&quot; data-tralics-id=&quot;uid114&quot; data-number=&quot;10&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 10:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Using &lt;code&gt;curl&lt;/code&gt; to download a longer file.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; curl -OL cdn.learnenough.com/sonnets.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -rtl
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Be sure to copy the command exactly; in particular, note that the option &lt;code&gt;-OL&lt;/code&gt; contains a capital letter “O” (&lt;code&gt;O&lt;/code&gt;) and not a zero (&lt;code&gt;0&lt;/code&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Figuring out what these options do is left as an exercise (&lt;a href=&quot;command_line_fragment.html#sec-exercises_inspecting&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.5.1&lt;/span&gt;&lt;/a&gt;).)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Also, on some systems (for mysterious reasons) you might have to run the command twice to get it to work; by inspecting the results of &lt;code&gt;ls -rtl&lt;/code&gt;, you should be able to tell if the initial call to &lt;code&gt;curl&lt;/code&gt; created the file &lt;code&gt;sonnets.txt&lt;/code&gt; as expected.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (If you do have to repeat the &lt;code&gt;curl&lt;/code&gt; command, you could press up arrow twice to retrieve it, but see &lt;a href=&quot;command_line_fragment.html#aside-repeating_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt; for alternatives.)&lt;/p&gt;
&lt;p&gt;The result of running &lt;a href=&quot;command_line_fragment.html#code-curl&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;10&lt;/span&gt;&lt;/a&gt; is &lt;code&gt;sonnets.txt&lt;/code&gt;, a file containing all 154 of Shakespeare’s sonnets.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This file contains 2620 lines, far too many to fit on one screen.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Learning how to inspect its contents is the goal of the rest of this section.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Among other things, we’ll learn how to determine that it has 2620 lines without counting them all by hand.)&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-repeating_commands&quot; data-tralics-id=&quot;uid115&quot; data-number=&quot;9&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 9.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Repeating previous commands&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Repeating previous commands is a frequent task when using the command line.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; So far in this tutorial, we’ve used the up-arrow key to retrieve (and possibly edit) previous commands, but this isn’t the only possibility.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; An even quicker way to find and immediately run a previous command involves using the exclamation point &lt;code class=&quot;tt&quot;&gt;!&lt;/code&gt;, which in the context of software development is usually pronounced “bang”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To run the previous command exactly as written, we can use “bang bang”:&lt;/p&gt;
&lt;pre&gt; $ echo &quot;foo&quot;
 foo
 $ !!
 echo &quot;foo&quot;
 foo&lt;/pre&gt;
&lt;p&gt;A closely related usage is “bang” followed by some number of characters, which runs the last command that started with those characters.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, to run the last &lt;code class=&quot;tt&quot;&gt;curl&lt;/code&gt; command, we could type this:&lt;/p&gt;
&lt;pre&gt; $ !curl&lt;/pre&gt;
&lt;p&gt;This would save us the trouble of typing out the options, the URL, etc.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Depending on our history of commands, the even terser &lt;code class=&quot;tt&quot;&gt;!cu&lt;/code&gt; or &lt;code class=&quot;tt&quot;&gt;!c&lt;/code&gt; would work as well.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This technique is especially useful when the desired command last happened many commands ago, which can make hitting up arrow cumbersome.&lt;/p&gt;
&lt;p&gt;A second and incredibly powerful technique is &lt;code class=&quot;tt&quot;&gt;⌃R&lt;/code&gt;, which lets you search interactively through your previous commands, and then optionally edit the result before executing.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, we could try this to bring up the last &lt;code class=&quot;tt&quot;&gt;curl&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt; $ &amp;lt;⌃R&amp;gt;
 (reverse-i-search)`&#39;: curl&lt;/pre&gt;
&lt;p&gt;On most systems, hitting return would then put the last &lt;code class=&quot;tt&quot;&gt;curl&lt;/code&gt; command after our prompt and allow us to edit it (if desired) before hitting return to execute it.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; When your workflow happens to involve repeatedly running a variety of similar commands, sometimes it can seem like “all commands start with &lt;code class=&quot;tt&quot;&gt;⌃R&lt;/code&gt;.”&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;sec-exercises_downloading&quot; data-tralics-id=&quot;uid116&quot; class=&quot;subsubsection&quot; data-number=&quot;3.1.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_downloading&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Use the command &lt;code&gt;curl -I https://www.learnenough.com/&lt;/code&gt; to fetch the &lt;em&gt;HTTP header&lt;/em&gt; for the Learn Enough website.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; What is the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTP status code&lt;/a&gt; for the address?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; How does this differ from the status code for &lt;code class=&quot;tt&quot;&gt;learnenough.com&lt;/code&gt; (without the &lt;code&gt;https://&lt;/code&gt;)? &lt;span class=&quot;exercise&quot; id=&quot;ex-curl-i&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;ls&lt;/code&gt;, confirm that &lt;code&gt;sonnets.txt&lt;/code&gt; exists on your system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; How big is it in bytes?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Recall from &lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.2&lt;/span&gt;&lt;/a&gt; that the “long form” of &lt;code&gt;ls&lt;/code&gt; displays a byte count. &lt;span class=&quot;exercise&quot; id=&quot;ex-ls-long-form&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;The byte count in the previous exercise is high enough that it’s more naturally thought of in &lt;em&gt;kilobytes&lt;/em&gt; (often treated as 1000 bytes, but actually equal to &lt;span class=&quot;inline_math&quot;&gt;\( 2^{10} = 1024 \)&lt;/span&gt; bytes).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By adding &lt;code&gt;-h&lt;/code&gt; (“human-readable”) option to &lt;code&gt;ls&lt;/code&gt;, list the long form of the sonnets file with a human-readable byte count. &lt;span class=&quot;exercise&quot; id=&quot;ex-ls-human&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Suppose you wanted to list the files and directories using &lt;strong&gt;h&lt;/strong&gt;uman-readable byte counts, &lt;strong&gt;a&lt;/strong&gt;ll, by &lt;strong&gt;r&lt;/strong&gt;everse &lt;strong&gt;t&lt;/strong&gt;ime-sorted &lt;strong&gt;l&lt;/strong&gt;ong-form.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; What command would you use?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Why might this command be the personal favorite of the author of this tutorial?&lt;sup id=&quot;cha-0_footnote-ref-20&quot; class=&quot;footnote intersentence&quot;&gt;&lt;a href=&quot;#cha-0_footnote-20&quot;&gt;20&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;span class=&quot;exercise&quot; id=&quot;ex-ls-hartl&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-making_heads_and_tails&quot; data-tralics-id=&quot;uid122&quot; class=&quot;subsection&quot; data-number=&quot;3.2&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-making_heads_and_tails&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.2 &lt;/span&gt;Making heads and tails of it&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Two complementary commands for inspecting files are &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt;, which respectively allow us to view the beginning (head) and end (tail) of the file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The &lt;code&gt;head&lt;/code&gt; command shows the first 10 lines of the file (&lt;a href=&quot;command_line_fragment.html#code-head&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-head&quot; data-tralics-id=&quot;uid123&quot; data-number=&quot;11&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 11:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Looking at the head of the sample text file.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; head sonnets.txt
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;Shake-speare&#39;s Sonnets&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;I&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;That thereby beauty&#39;s Rose might never die,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But as the riper should by time decease,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;His tender heir might bear his memory:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But thou contracted to thine own bright eyes,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Feed&#39;st thy light&#39;s flame with self-substantial fuel&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Similarly, &lt;code&gt;tail&lt;/code&gt; shows the last 10 lines of the file (&lt;a href=&quot;command_line_fragment.html#code-tail&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-tail&quot; data-tralics-id=&quot;uid124&quot; data-number=&quot;12&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 12:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Looking at the tail of the sample text file.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; tail sonnets.txt
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;The fairest votary took up that fire&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Which many legions of true hearts had warm&#39;d;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And so the general of hot desire&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Was, sleeping, by a virgin hand disarm&#39;d.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;This brand she quenched in a cool well by,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Which from Love&#39;s fire took heat perpetual,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Growing a bath and healthful remedy,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;For men diseas&#39;d; but I, my mistress&#39; thrall,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Came there for cure and this by that I prove,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Love&#39;s fire heats water, water cools not love.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;These two commands are useful when (as is often the case) you know for sure you only need to inspect the beginning or end of a file.&lt;/p&gt;
&lt;div id=&quot;sec-wordcount_and_pipes&quot; data-tralics-id=&quot;uid125&quot; class=&quot;subsubsection&quot; data-number=&quot;3.2.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-wordcount_and_pipes&quot; class=&quot;heading&quot;&gt;Wordcount and pipes&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;By the way, I didn’t recall offhand how many lines &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; show by default.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Since there are only 10 lines in the output, I could have counted them by hand, but in fact I was able to figure it out using the &lt;code&gt;wc&lt;/code&gt; command (short for “wordcount”; recall &lt;a href=&quot;command_line_fragment.html#fig-y_u_no&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The most common use of &lt;code&gt;wc&lt;/code&gt; is on full files.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, we can run &lt;code&gt;sonnets.txt&lt;/code&gt; through &lt;code&gt;wc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wc sonnets.txt
&lt;span class=&quot;go&quot;&gt;  2620  17670  95635 sonnets.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here the three numbers indicate how many lines, words, and bytes there are in the file, so there are 2620 lines (thereby fulfilling the promise made at the end of &lt;a href=&quot;command_line_fragment.html#sec-downloading_a_file&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.1&lt;/span&gt;&lt;/a&gt;), 17670 words, and 95635 bytes.&lt;/p&gt;
&lt;p&gt;You are now in a position to be able to guess one method for determining how many lines are in &lt;code&gt;head sonnets.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In particular, we can combine &lt;code&gt;head&lt;/code&gt; with the redirect operator (&lt;a href=&quot;command_line_fragment.html#sec-redirecting_and_appending&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.1&lt;/span&gt;&lt;/a&gt;) to make a file with the relevant contents, and then run &lt;code&gt;wc&lt;/code&gt; on it, as shown in &lt;a href=&quot;command_line_fragment.html#code-head_redirected&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;13&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-head_redirected&quot; data-tralics-id=&quot;uid126&quot; data-number=&quot;13&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 13:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Redirecting &lt;code&gt;head&lt;/code&gt; and running &lt;code&gt;wc&lt;/code&gt; on the result.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; head sonnets.txt &amp;gt; sonnets_head.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wc sonnets_head.txt
&lt;span class=&quot;go&quot;&gt;   10   46   294 sonnets_head.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;We see from &lt;a href=&quot;command_line_fragment.html#code-head_redirected&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;13&lt;/span&gt;&lt;/a&gt; that there are 10 lines in &lt;code&gt;head wc&lt;/code&gt; (along with 46 words and 294 bytes).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The same method, of course, would work for &lt;code&gt;tail&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, you might get the feeling that it’s a little unclean to make an intermediate file just to run &lt;code&gt;wc&lt;/code&gt; on it, and indeed there’s a way to avoid it using a technique called &lt;em&gt;pipes&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;a href=&quot;command_line_fragment.html#code-head_pipe&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;14&lt;/span&gt;&lt;/a&gt; shows how to do it.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-head_pipe&quot; data-tralics-id=&quot;uid127&quot; data-number=&quot;14&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 14:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Piping the result of &lt;code&gt;head&lt;/code&gt; through &lt;code&gt;wc&lt;/code&gt;.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; head sonnets.txt &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; wc
&lt;span class=&quot;go&quot;&gt;   10   46   294&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The command in &lt;a href=&quot;command_line_fragment.html#code-head_pipe&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;14&lt;/span&gt;&lt;/a&gt; runs &lt;code&gt;head sonnets.txt&lt;/code&gt; and then &lt;em&gt;pipes&lt;/em&gt; the result through &lt;code&gt;wc&lt;/code&gt; using the pipe symbol &lt;code&gt;|&lt;/code&gt; (Shift-backslash on most QWERTY keyboards).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The reason this works is that the &lt;code&gt;wc&lt;/code&gt; command, in addition to taking a filename as an argument, can (like many Unix programs) take input from “standard in” (compare to “standard out” mentioned in &lt;a href=&quot;command_line_fragment.html#sec-our_first_command&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.2&lt;/span&gt;&lt;/a&gt;), which in this case is the output of &lt;code&gt;head sonnets.txt&lt;/code&gt; shown in &lt;a href=&quot;command_line_fragment.html#code-head&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The &lt;code&gt;wc&lt;/code&gt; program takes this input and counts it the same way it counts a file, yielding the same line, word, and byte counts as &lt;a href=&quot;command_line_fragment.html#code-head_redirected&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;13&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;sec-exercises_head_tails&quot; data-tralics-id=&quot;uid128&quot; class=&quot;subsubsection&quot; data-number=&quot;3.2.2&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_head_tails&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;By piping the results of &lt;code&gt;tail sonnets.txt&lt;/code&gt; through &lt;code&gt;wc&lt;/code&gt;, confirm that (like &lt;code&gt;head&lt;/code&gt;) the &lt;code&gt;tail&lt;/code&gt; command outputs 10 lines by default. &lt;span class=&quot;exercise&quot; id=&quot;ex-tail-wc&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By running &lt;code&gt;man head&lt;/code&gt;, learn how to look at the first &lt;code&gt;n&lt;/code&gt; lines of the file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By experimenting with different values of &lt;code&gt;n&lt;/code&gt;, find a &lt;code&gt;head&lt;/code&gt; command to print out just enough lines to display the first sonnet in its entirety (&lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;). &lt;span class=&quot;exercise&quot; id=&quot;ex-head-n&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Pipe the results of the previous exercise through &lt;code&gt;tail&lt;/code&gt; (with the appropriate options) to print out &lt;em&gt;only&lt;/em&gt; the 14 lines composing Sonnet 1.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: The command will look something like &lt;code&gt;head -n &amp;lt;i&amp;gt; sonnets.txt | tail -n &amp;lt;j&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;j&amp;gt;&lt;/code&gt; represent the numerical arguments to the &lt;code&gt;-n&lt;/code&gt; option. &lt;span class=&quot;exercise&quot; id=&quot;ex-pipe-tail&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;One of the most useful applications of &lt;code&gt;tail&lt;/code&gt; is running &lt;code&gt;tail -f&lt;/code&gt; to view a file that’s actively changing.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is especially common when monitoring files used to log the activity of, e.g., web servers, a practice known as “&lt;a href=&quot;https://en.wikipedia.org/wiki/Tail_(Unix)#File_monitoring&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tailing the log file&lt;/a&gt;”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To simulate the creation of a log file, run &lt;code&gt;ping learnenough.com &amp;gt; learnenough.log&lt;/code&gt; in one terminal tab.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The &lt;code&gt;ping&lt;/code&gt; command “pings” a server to see if it’s working.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In a second tab, type the command to tail the log file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (At this point, both tabs will be stuck, so once you’ve gotten the gist of &lt;code&gt;tail -f&lt;/code&gt; you should use the technique from &lt;a href=&quot;command_line_fragment.html#aside-getting_out_of_trouble&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt; to get out of trouble.) &lt;span class=&quot;exercise&quot; id=&quot;ex-tail-f&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-less_is_more&quot; data-tralics-id=&quot;uid133&quot; class=&quot;subsection&quot; data-number=&quot;3.3&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.3 &lt;/span&gt;Less is more&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unix provides two utilities for the common task of wanting to look at more than just the head or tail of a file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The older of these programs is called &lt;code&gt;more&lt;/code&gt;, but (I’d guess initially as a tongue-in-cheek joke) there’s a more powerful variant called &lt;code&gt;less&lt;/code&gt;.&lt;sup id=&quot;cha-0_footnote-ref-21&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-21&quot;&gt;21&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The &lt;code&gt;less&lt;/code&gt; program is interactive, so it’s hard to capture in print, but here’s roughly what it looks like:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; less sonnets.txt
&lt;span class=&quot;go&quot;&gt;Shake-speare&#39;s Sonnets&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;I&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;That thereby beauty&#39;s Rose might never die,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But as the riper should by time decease,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;His tender heir might bear his memory:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But thou contracted to thine own bright eyes,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Feed&#39;st thy light&#39;s flame with self-substantial fuel,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Making a famine where abundance lies,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Thy self thy foe, to thy sweet self too cruel:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Thou that art now the world&#39;s fresh ornament,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And only herald to the gaudy spring,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Within thine own bud buriest thy content,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And tender churl mak&#39;st waste in niggarding:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Pity the world, or else this glutton be,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; To eat the world&#39;s due, by the grave and thee.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;II&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;When forty winters shall besiege thy brow,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And dig deep trenches in thy beauty&#39;s field,&lt;/span&gt;
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;go&quot;&gt;sonnets.txt&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The point of &lt;code&gt;less&lt;/code&gt; is that it lets you navigate through the file in several useful ways, such as moving one line up or down with the arrow keys, pressing space bar to move a page down, pressing &lt;code&gt;⌃F&lt;/code&gt; to move forward a page (i.e., the same as spacebar) or &lt;code&gt;⌃B&lt;/code&gt; to move back a page.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To quit &lt;code&gt;less&lt;/code&gt;, type &lt;code&gt;q&lt;/code&gt; (for “quit”).&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-tudor_rose&quot; data-tralics-id=&quot;uid135&quot; data-number=&quot;18&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/tudor_rose.png&quot; alt=&quot;images/figures/tudor_rose&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 18: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Tudor_rose&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;famous rose&lt;/a&gt; from the time of Shakespeare.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Perhaps the most powerful aspect of &lt;code&gt;less&lt;/code&gt; is the forward slash key &lt;code&gt;/&lt;/code&gt;, which lets you search through the file from beginning to end.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, suppose we wanted to search through &lt;code&gt;sonnets.txt&lt;/code&gt; for “rose” (&lt;a href=&quot;command_line_fragment.html#fig-tudor_rose&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt;),&lt;sup id=&quot;cha-0_footnote-ref-22&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-22&quot;&gt;22&lt;/a&gt;&lt;/sup&gt; one of the most frequently used images used in the &lt;em&gt;Sonnets&lt;/em&gt;.&lt;sup id=&quot;cha-0_footnote-ref-23&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-23&quot;&gt;23&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The way to do this in &lt;code&gt;less&lt;/code&gt; is to type &lt;code&gt;/rose&lt;/code&gt; (read “slash rose”), as shown in &lt;a href=&quot;command_line_fragment.html#code-rose_search&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;15&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-rose_search&quot; data-tralics-id=&quot;uid138&quot; data-number=&quot;15&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 15:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Searching for the string “rose” using &lt;code&gt;less&lt;/code&gt;.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;go&quot;&gt;Shake-speare&#39;s Sonnets&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;I&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;From fairest creatures we desire increase,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;That thereby beauty&#39;s Rose might never die,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But as the riper should by time decease,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;His tender heir might bear his memory:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But thou contracted to thine own bright eyes,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Feed&#39;st thy light&#39;s flame with self-substantial fuel,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Making a famine where abundance lies,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Thy self thy foe, to thy sweet self too cruel:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Thou that art now the world&#39;s fresh ornament,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And only herald to the gaudy spring,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Within thine own bud buriest thy content,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And tender churl mak&#39;st waste in niggarding:&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Pity the world, or else this glutton be,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; To eat the world&#39;s due, by the grave and thee.&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;II&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;When forty winters shall besiege thy brow,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;And dig deep trenches in thy beauty&#39;s field,&lt;/span&gt;
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;go&quot;&gt;/rose&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The result of pressing return after typing &lt;code&gt;/rose&lt;/code&gt; in &lt;a href=&quot;command_line_fragment.html#code-rose_search&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;15&lt;/span&gt;&lt;/a&gt; is to highlight the first occurrence of “rose” in the file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; You can then press &lt;code&gt;n&lt;/code&gt; to navigate to the next match, or &lt;code&gt;N&lt;/code&gt; to navigate to the previous match.&lt;/p&gt;
&lt;p&gt;The last two essential &lt;code&gt;less&lt;/code&gt; less commands are &lt;code&gt;G&lt;/code&gt; to move to the end of the file and &lt;code&gt;1G&lt;/code&gt; (that’s &lt;code&gt;1&lt;/code&gt; followed by &lt;code&gt;G&lt;/code&gt;) to move back to the beginning.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;a href=&quot;command_line_fragment.html#table-less_commands&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt; summarizes what are in my view the most important key combinations (i.e., the ones I think you need to be &lt;em&gt;dangerous&lt;/em&gt;), but if you’re curious you can find a longer list of commands at the &lt;a href=&quot;https://en.wikipedia.org/wiki/Less_(Unix)&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wikipedia page on &lt;code class=&quot;tt&quot;&gt;less&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I encourage you to get in the habit of using &lt;code&gt;less&lt;/code&gt; as your go-to utility for looking at the contents of a file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The skills you develop have other applications as well; for example, the man pages (&lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.3&lt;/span&gt;&lt;/a&gt;) use the same interface as &lt;code&gt;less&lt;/code&gt;, so by learning about &lt;code&gt;less&lt;/code&gt; you’ll get better at navigating the man pages as well.&lt;/p&gt;
&lt;div id=&quot;table-less_commands&quot; data-tralics-id=&quot;uid139&quot; data-number=&quot;4&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;up &amp;amp; down arrow keys&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move up or down one line&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;spacebar&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move forward one page&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃F&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move forward one page&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;⌃B&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move back one page&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;G&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to end of file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;1G&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to beginning of file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;/&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Search file for string&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;/rose&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to next search result&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Move to previous search result&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;q&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Quit &lt;code&gt;less&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 4: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The most important &lt;code&gt;less&lt;/code&gt; commands.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_summary_less&quot; data-tralics-id=&quot;uid140&quot; class=&quot;subsubsection&quot; data-number=&quot;3.3.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_summary_less&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;less&lt;/code&gt; on &lt;code&gt;sonnets.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Go down three pages and then back up three pages.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Go to the end of the file, then to the beginning, then quit. &lt;span class=&quot;exercise&quot; id=&quot;ex-less-pages&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Search for the string “All” (case-sensitive).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Go forward a few occurrences, then back a few occurrences.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Then go to the beginning of the file and count the occurrences by searching forward until you hit the end.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Compare your count to the result of running &lt;code&gt;grep All sonnets.txt | wc&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (We’ll learn about &lt;code&gt;grep&lt;/code&gt; in &lt;a href=&quot;command_line_fragment.html#sec-grepping&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.4&lt;/span&gt;&lt;/a&gt;.) &lt;span class=&quot;exercise&quot; id=&quot;ex-less-grep&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; (“slash”), find the sonnet that begins with the line “Let me not”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Are there any other occurrences of this string in the &lt;em&gt;Sonnets&lt;/em&gt;?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Press &lt;code&gt;n&lt;/code&gt; to find the next occurrence (if any).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Extra credit&lt;/em&gt;: &lt;a href=&quot;https://youtu.be/bt7OynPUIY8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Listen to the sonnet&lt;/a&gt; in both modern and &lt;a href=&quot;http://originalpronunciation.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;original pronunciation&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Which version’s rhyme scheme is better? &lt;span class=&quot;exercise&quot; id=&quot;ex-less-slash&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Because &lt;code&gt;man&lt;/code&gt; uses &lt;code&gt;less&lt;/code&gt;, we are now in a position to search man pages interactively.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By searching for the string “sort” in the man page for &lt;code&gt;ls&lt;/code&gt;, discover the option to sort files by size.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; What is the command to display the long form of files sorted so the largest files appear at the bottom?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use &lt;code&gt;ls -rtl&lt;/code&gt; as a model. &lt;span class=&quot;exercise&quot; id=&quot;ex-man-slash&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-grepping&quot; data-tralics-id=&quot;uid145&quot; class=&quot;subsection&quot; data-number=&quot;3.4&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-grepping&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.4 &lt;/span&gt;Grepping&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of the most powerful tools for inspecting file contents is &lt;code&gt;grep&lt;/code&gt;, which probably stands for something, but it’s not important what.&lt;sup id=&quot;cha-0_footnote-ref-24&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-24&quot;&gt;24&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, &lt;em&gt;grep&lt;/em&gt; is frequently used as a verb, as in “You should totally grep that file.”&lt;/p&gt;
&lt;p&gt;The most common use of &lt;code&gt;grep&lt;/code&gt; is just to search for a substring in a file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, we saw in &lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.3&lt;/span&gt;&lt;/a&gt; how to use &lt;code&gt;less&lt;/code&gt; to search for the string “rose” in Shakespeare’s sonnets.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Using &lt;code&gt;grep&lt;/code&gt;, we can find the references directly, as shown in &lt;a href=&quot;command_line_fragment.html#code-grep_rose&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-grep_rose&quot; data-tralics-id=&quot;uid147&quot; data-number=&quot;16&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 16:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Finding the occurrences of “rose” in Shakespeare’s sonnets.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep rose sonnets.txt
&lt;span class=&quot;go&quot;&gt;The rose looks fair, but fairer we it deem&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;As the perfumed tincture of the roses.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Die to themselves. Sweet roses do not so;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Roses of shadow, since his rose is true?&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Which, like a canker in the fragrant rose,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Nor praise the deep vermilion in the rose;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;The roses fearfully on thorns did stand,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; Save thou, my rose, in it thou art my all.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;I have seen roses damask&#39;d, red and white,&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;But no such roses see I in her cheeks;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;With the command in &lt;a href=&quot;command_line_fragment.html#code-grep_rose&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;, it appears that we are in a position to count the number of lines containing references to the word “rose” by piping to &lt;code&gt;wc&lt;/code&gt; (as in &lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.3&lt;/span&gt;&lt;/a&gt;), as shown in &lt;a href=&quot;command_line_fragment.html#code-grep_rose_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;17&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-grep_rose_wc&quot; data-tralics-id=&quot;uid148&quot; data-number=&quot;17&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 17:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Piping the results of &lt;code&gt;grep&lt;/code&gt; to &lt;code&gt;wc&lt;/code&gt;.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep rose sonnets.txt &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; wc
&lt;span class=&quot;go&quot;&gt;   10   82   419&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;command_line_fragment.html#code-grep_rose_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;17&lt;/span&gt;&lt;/a&gt; tells us that 10 lines contain “rose” (or “roses”, since “rose” is a substring of “roses”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; But you may recall from &lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt; that Shakespeare’s first sonnet contains “Rose” with a &lt;em&gt;capital&lt;/em&gt; “R”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Referring to &lt;a href=&quot;command_line_fragment.html#code-grep_rose&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;, we see that this line has in fact been missed.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is because &lt;code&gt;grep&lt;/code&gt; is case-sensitive by default, and “rose” doesn’t match “Rose”.&lt;/p&gt;
&lt;p&gt;As you might suspect, &lt;code&gt;grep&lt;/code&gt; has an option to perform case-insensitive matching as well.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; One way to figure it out is to search through the &lt;code&gt;man&lt;/code&gt; page for &lt;code&gt;grep&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;man grep&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/case&lt;/code&gt; and then return
&lt;/li&gt;
&lt;li&gt;Read off the result (&lt;a href=&quot;command_line_fragment.html#fig-man_grep&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;19&lt;/span&gt;&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;(As noted briefly in &lt;a href=&quot;command_line_fragment.html#sec-man_pages&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1.3&lt;/span&gt;&lt;/a&gt;, the man pages use the same interface as the &lt;code&gt;less&lt;/code&gt; command we met in &lt;a href=&quot;command_line_fragment.html#sec-less_is_more&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.3&lt;/span&gt;&lt;/a&gt;, so we can search through them using &lt;code&gt;/&lt;/code&gt;.)&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-man_grep&quot; data-tralics-id=&quot;uid152&quot; data-number=&quot;19&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/man_grep.png&quot; alt=&quot;images/figures/man_grep&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 19: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The result of searching &lt;code&gt;man grep&lt;/code&gt; for “case”.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Applying the result of the above procedure yields &lt;a href=&quot;command_line_fragment.html#code-grep_i_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Comparing the results of &lt;a href=&quot;command_line_fragment.html#code-grep_i_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt; with &lt;a href=&quot;command_line_fragment.html#code-grep_rose_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;17&lt;/span&gt;&lt;/a&gt;, we see that we now have 12 matching lines instead of only 10, so there must be a total of &lt;span class=&quot;inline_math&quot;&gt;\( 12-10=2 \)&lt;/span&gt; lines containing “Rose” (but not “rose”) in the &lt;em&gt;Sonnets&lt;/em&gt;.&lt;sup id=&quot;cha-0_footnote-ref-25&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-25&quot;&gt;25&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-grep_i_wc&quot; data-tralics-id=&quot;uid154&quot; data-number=&quot;18&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 18:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Doing a case-insensitive grep.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep -i rose sonnets.txt &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; wc
&lt;span class=&quot;go&quot;&gt;   12   96   508&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;grep&lt;/code&gt; utility is insanely powerful, especially when combined with so-called &lt;em&gt;regular expressions&lt;/em&gt;, but learning &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;grep -i&lt;/code&gt; are &lt;em&gt;almost&lt;/em&gt; enough to be dangerous (including the important application of &lt;em&gt;grepping processes&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#aside-ps_aux&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;10&lt;/span&gt;&lt;/a&gt;)).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; We’ll see the third and final &lt;code&gt;grep&lt;/code&gt; variant needed to be dangerous in &lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-ps_aux&quot; data-tralics-id=&quot;uid155&quot; data-number=&quot;10&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 10.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Grepping processes&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;One of the many uses of &lt;code class=&quot;tt&quot;&gt;grep&lt;/code&gt; is filtering the Unix &lt;em&gt;process list&lt;/em&gt; for running programs that match a particular string.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (On Unix-like systems such as Linux and macOS, user and system tasks each take place within a well-defined container called a &lt;em&gt;process&lt;/em&gt;.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is especially useful when there’s a rogue process on your system that needs to be killed.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (A good way to find such processes is by running the &lt;code class=&quot;tt&quot;&gt;top&lt;/code&gt; command, which shows the processes consuming the most resources.)&lt;/p&gt;
&lt;p&gt;For example, at one point in the &lt;a href=&quot;http://railstutorial.org/book&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Ruby on Rails Tutorial&lt;/em&gt; book&lt;/a&gt;, it’s important to eliminate a program called &lt;code class=&quot;tt&quot;&gt;spring&lt;/code&gt; from the process list.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To do this, first the processes need to be found, and the way to see all the processes on your system is to use the &lt;code class=&quot;tt&quot;&gt;ps&lt;/code&gt; command with the &lt;code class=&quot;tt&quot;&gt;aux&lt;/code&gt; options:&lt;/p&gt;
&lt;pre&gt; $ ps aux&lt;/pre&gt;
&lt;p&gt;Per &lt;a href=&quot;command_line_fragment.html#fig-y_u_no&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;, &lt;code class=&quot;tt&quot;&gt;ps&lt;/code&gt; is short for “process status”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; And for &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=ps&amp;amp;manpath=SuSE+Linux/i386+11.3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;confusing and obscure reasons&lt;/a&gt;, options to &lt;code class=&quot;tt&quot;&gt;ps&lt;/code&gt; aren’t written with a dash (so it’s &lt;code class=&quot;tt&quot;&gt;ps aux&lt;/code&gt; instead of &lt;code class=&quot;tt&quot;&gt;ps -aux&lt;/code&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (How on earth are you supposed to know this?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; That’s what this tutorial is for.)&lt;/p&gt;
&lt;p&gt;To filter the processes by program name, you pipe the results of &lt;code class=&quot;tt&quot;&gt;ps&lt;/code&gt; through the &lt;code class=&quot;tt&quot;&gt;grep&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt; $ ps aux | grep spring
 ubuntu 12241 0.3 0.5 589960 178416 ? Ssl Sep20 1:46
 spring app | sample_app | started 7 hours ago&lt;/pre&gt;
&lt;p&gt;The result shown gives some details about the process, but the most important thing is the first number, which is the &lt;em&gt;process id&lt;/em&gt;, or pid (often pronounced to rhyme with “kid”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To eliminate an unwanted process, we use the &lt;code class=&quot;tt&quot;&gt;kill&lt;/code&gt; command to issue the Unix terminate code (which &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_signal#List_of_signals&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;happens to be 15&lt;/a&gt;) to the pid:&lt;/p&gt;
&lt;pre&gt; $ kill -15 12241&lt;/pre&gt;
&lt;p&gt;This is the technique I recommend for killing individual processes, such as a rogue web server (with the pid found via &lt;code class=&quot;tt&quot;&gt;ps aux | grep server&lt;/code&gt;), but sometimes it’s convenient to kill all the processes matching a particular process name, such as when you want to kill all the &lt;code class=&quot;tt&quot;&gt;spring&lt;/code&gt; processes gunking up your system.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In this case, you can kill all the processes with name &lt;code class=&quot;tt&quot;&gt;spring&lt;/code&gt; using the &lt;code class=&quot;tt&quot;&gt;pkill&lt;/code&gt; command as follows:&lt;/p&gt;
&lt;pre&gt; $ pkill -15 -f spring&lt;/pre&gt;
&lt;p&gt;Any time something isn’t behaving as expected, or a process appears to be frozen, it’s a good idea to run &lt;code class=&quot;tt&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;tt&quot;&gt;ps aux&lt;/code&gt; to see what’s going on, pipe &lt;code class=&quot;tt&quot;&gt;ps aux&lt;/code&gt; through &lt;code class=&quot;tt&quot;&gt;grep&lt;/code&gt; to select the suspected processes, and then run &lt;code class=&quot;tt&quot;&gt;kill -15 &amp;lt;pid&amp;gt;&lt;/code&gt; or &lt;code class=&quot;tt&quot;&gt;pkill -15 -f &amp;lt;name&amp;gt;&lt;/code&gt; to clear things up.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;sec-exercises_grep&quot; data-tralics-id=&quot;uid156&quot; class=&quot;subsubsection&quot; data-number=&quot;3.4.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_grep&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;By searching &lt;code&gt;man grep&lt;/code&gt; for “line number”, construct a command to find the line numbers in &lt;code&gt;sonnets.txt&lt;/code&gt; where the string “rose” appears. &lt;span class=&quot;exercise&quot; id=&quot;ex-grep-command&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;You should find that the last occurrences of “rose” is (via “roses”) on line 2203.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Figure out how to go directly to this line when running &lt;code&gt;less sonnets.txt&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Recall from &lt;a href=&quot;command_line_fragment.html#table-less_commands&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt; that &lt;code&gt;1G&lt;/code&gt; goes to the top of the file, i.e., line 1.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Similarly, &lt;code&gt;17G&lt;/code&gt; goes to line 17.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Etc. &lt;span class=&quot;exercise&quot; id=&quot;ex-less-command-jump&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By piping the output of &lt;code&gt;grep&lt;/code&gt; to &lt;code&gt;head&lt;/code&gt;, print out the first (and &lt;em&gt;only&lt;/em&gt; the first) line in &lt;code&gt;sonnets.txt&lt;/code&gt; containing “rose”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use the result of the second exercise in &lt;a href=&quot;command_line_fragment.html#sec-exercises_head_tails&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.2.2&lt;/span&gt;&lt;/a&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-grep-head&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;a href=&quot;command_line_fragment.html#code-grep_i_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt;, we saw two additional lines that case-insensitively matched “rose”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Execute a command confirming that both of the lines contain the string “Rose” (and not, e.g., “rOSe”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Use a case-sensitive &lt;code&gt;grep&lt;/code&gt; for “Rose”. &lt;span class=&quot;exercise&quot; id=&quot;ex-grep-case&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;You should find in the previous exercise that there are &lt;em&gt;three&lt;/em&gt; lines matching “Rose” instead of the two you might have expected from &lt;a href=&quot;command_line_fragment.html#code-grep_i_wc&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is because there is one line that contains both “Rose” &lt;em&gt;and&lt;/em&gt; “rose”, and thus shows up in both &lt;code&gt;grep rose&lt;/code&gt; and &lt;code&gt;grep -i rose&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Write a command confirming that the number of lines matching “Rose” but &lt;em&gt;not&lt;/em&gt; matching “rose” is equal to the expected 2.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Pipe the result of &lt;code&gt;grep&lt;/code&gt; to &lt;code&gt;grep -v&lt;/code&gt;, and then pipe that result to &lt;code&gt;wc&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (What does &lt;code&gt;-v&lt;/code&gt; do?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Read the man page for &lt;code&gt;grep&lt;/code&gt; (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;).) &lt;span class=&quot;exercise&quot; id=&quot;ex-grep-pipe-wc&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-summary_inspecting&quot; data-tralics-id=&quot;uid162&quot; class=&quot;subsection&quot; data-number=&quot;3.5&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-summary_inspecting&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.5 &lt;/span&gt;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-inspecting_files&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;table-inspecting_files&quot; data-tralics-id=&quot;uid163&quot; data-number=&quot;5&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;curl&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Interact with URLs&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ curl -O example.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;which&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Locate a program on the path&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ which curl&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;head &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Display first part of file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ head foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;tail &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Display last part of file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ tail bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;wc &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Count lines, words, bytes&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ wc foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cmd1 | cmd2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Pipe &lt;code class=&quot;tt&quot;&gt;cmd1&lt;/code&gt; to &lt;code class=&quot;tt&quot;&gt;cmd2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ head foo | wc&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ping &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Ping a server URL&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ping google.com&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;less &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;View file contents interactively&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ less foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;grep &amp;lt;string&amp;gt; &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Find string in file&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ grep foo bar.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;grep -i &amp;lt;string&amp;gt; &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Find case-insensitively&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ grep -i foo bar.txt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;ps&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Show processes&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ ps aux&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;top&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Show processes (sorted)&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ top&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;kill -&amp;lt;level&amp;gt; &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Kill a process&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ kill -15 24601&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;pkill -&amp;lt;level&amp;gt; -f &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Kill matching processes&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ pkill -15 -f spring&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 5: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Important commands from &lt;a href=&quot;command_line_fragment.html#sec-inspecting_files&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3&lt;/span&gt;&lt;/a&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_inspecting&quot; data-tralics-id=&quot;uid164&quot; class=&quot;subsubsection&quot; data-number=&quot;3.5.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_inspecting&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;history&lt;/code&gt; command prints the history of commands in a particular terminal shell (subject to some limit, which is typically large).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Pipe &lt;code&gt;history&lt;/code&gt; to &lt;code&gt;less&lt;/code&gt; to examine your command history.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; What was your 17th command? &lt;span class=&quot;exercise&quot; id=&quot;ex-history-pipe-grep&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By piping the output of &lt;code&gt;history&lt;/code&gt; to &lt;code&gt;wc&lt;/code&gt;, count how many commands you’ve executed so far. &lt;span class=&quot;exercise&quot; id=&quot;ex-history-pipe-wc&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;One use of &lt;code&gt;history&lt;/code&gt; is to grep your commands to find useful ones you’ve used before, with each command preceded by the corresponding number in the command history.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; By piping the output of &lt;code&gt;history&lt;/code&gt; to &lt;code&gt;grep&lt;/code&gt;, determine the number for the last occurrence of &lt;code&gt;curl&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-history-pipe-grep-curl&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;a href=&quot;command_line_fragment.html#aside-repeating_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;, we learned about &lt;code&gt;!!&lt;/code&gt; (“bang bang”) to execute the previous command.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Similarly, &lt;code&gt;!n&lt;/code&gt; executes command number &lt;code&gt;n&lt;/code&gt;, so that, e.g., &lt;code&gt;!17&lt;/code&gt; executes the 17th command in the command history.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Use the result from the previous exercise to re-run the last occurrence of &lt;code&gt;curl&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-bang-bang&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;What do the &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;L&lt;/code&gt; options in &lt;a href=&quot;command_line_fragment.html#code-curl&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;10&lt;/span&gt;&lt;/a&gt; mean?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Pipe the output of &lt;code&gt;curl -h&lt;/code&gt; to &lt;code&gt;less&lt;/code&gt; and search first for the string &lt;code&gt;-O&lt;/code&gt; and then for the string &lt;code&gt;-L&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-curl-opts&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;sec-directories&quot; data-tralics-id=&quot;cid4&quot; class=&quot;section&quot; data-number=&quot;4&quot;&gt;&lt;h2&gt;&lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4 &lt;/span&gt;Directories&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having examined many of Unix utilities for dealing with files, the time has come to learn about &lt;em&gt;directories&lt;/em&gt;, sometimes known by the synonym &lt;em&gt;folders&lt;/em&gt; (&lt;a href=&quot;command_line_fragment.html#fig-directory_folder&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As we’ll see, many of the ideas developed in the context of files also apply to directories, but there are many differences as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-directories&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;sec-structure&quot; data-tralics-id=&quot;uid170&quot; class=&quot;subsection&quot; data-number=&quot;4.1&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-structure&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.1 &lt;/span&gt;Directory structure&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The structure of Unix-style directories is typically indicated using a list of directory names separated by forward slashes, which we can combine with the &lt;code&gt;ls&lt;/code&gt; command (&lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.2&lt;/span&gt;&lt;/a&gt;) like this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls /Users/mhartl/ruby
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or like this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls /usr/local/bin
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As seen in &lt;a href=&quot;command_line_fragment.html#fig-directory_folder&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt;, these representations correspond to directories in a hierarchical filesystem, with (say) &lt;code&gt;mhartl&lt;/code&gt; a subdirectory of &lt;code&gt;Users&lt;/code&gt; and &lt;code&gt;ruby&lt;/code&gt; a subdirectory of &lt;code&gt;mhartl&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-directory_folder&quot; data-tralics-id=&quot;uid171&quot; data-number=&quot;20&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/directory_folder.png&quot; alt=&quot;images/figures/directory_folder&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 20: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;The correspondence between folders &amp;amp; directories.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Conventions vary when speaking about directories: a &lt;em&gt;user directory&lt;/em&gt; like &lt;code&gt;/Users/mhartl&lt;/code&gt; would probably be read as “slash users slash mhartl” or “slash users mhartl”, whereas omitting the initial slash in spoken language is common for &lt;em&gt;system directories&lt;/em&gt; such as &lt;code&gt;/usr/local/bin&lt;/code&gt;, which would probably be pronounced “user local bin”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because &lt;em&gt;all&lt;/em&gt; Unix directories are ultimately subdirectories of the &lt;em&gt;root directory&lt;/em&gt; &lt;code&gt;/&lt;/code&gt; (pronounced “slash”), the leading and separator slashes are implied.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Note&lt;/em&gt;: Referring to forward slashes incorrectly as “backslashes” is a &lt;a href=&quot;https://m.xkcd.com/727/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;cause of suffering&lt;/a&gt;, and should be strictly avoided.&lt;/p&gt;
&lt;p&gt;The most important directory for a particular user is the &lt;em&gt;home directory&lt;/em&gt;, which on my macOS system is &lt;code&gt;/Users/mhartl&lt;/code&gt;, corresponding to my username (&lt;code&gt;mhartl&lt;/code&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The home directory can be specified as an &lt;em&gt;absolute path&lt;/em&gt;, as in &lt;code&gt;/Users/mhartl&lt;/code&gt;, or using the shorthand for the home directory is the tilde character &lt;code&gt;~&lt;/code&gt; (which is typed using Shift-backtick, located just to the left of the number 1 on most keyboards).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, the two paths shown in &lt;a href=&quot;command_line_fragment.html#fig-directory_folder&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt; are identical: &lt;code&gt;/Users/mhartl/ruby/projects&lt;/code&gt; is the same as &lt;code&gt;~/ruby/projects&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Amusingly, the reason the tilde character is used for the home directory is simply because the “Home” key was the same as the key for producing “~” on &lt;a href=&quot;http://unix.stackexchange.com/questions/34196/why-was-chosen-to-represent-the-home-directory&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;some early keyboards&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;In addition to user directories, every Unix system has &lt;em&gt;system directories&lt;/em&gt; for the programs essential for the computer’s normal operation.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Modifying system files or directories requires special powers granted only to the &lt;em&gt;superuser&lt;/em&gt;, known as &lt;code&gt;root&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (This use of “root” is unrelated to the “root directory” mentioned above.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The superuser is so powerful that it’s considered bad form to log in as &lt;code&gt;root&lt;/code&gt;; instead, tasks executed as &lt;code&gt;root&lt;/code&gt; should typically use the &lt;code&gt;sudo&lt;/code&gt; command (&lt;a href=&quot;command_line_fragment.html#aside-sudo&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-26&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-26&quot;&gt;26&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-sudo&quot; data-tralics-id=&quot;uid173&quot; data-number=&quot;11&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 11.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;“&lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; make me a sandwich.”&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; gives ordinary users the power to execute commands as the superuser.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, let’s try &lt;code class=&quot;tt&quot;&gt;touch&lt;/code&gt;ing a file in the system directory &lt;code class=&quot;tt&quot;&gt;/opt&lt;/code&gt; as follows:&lt;/p&gt;
&lt;pre&gt; $ touch /opt/foo
 touch: /opt/foo: Permission denied&lt;/pre&gt;
&lt;p&gt;Because normal users don’t have permission to modify &lt;code class=&quot;tt&quot;&gt;/opt&lt;/code&gt;, the command fails, but it succeeds with &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt; $ sudo touch /opt/foo
 Password:&lt;/pre&gt;
&lt;p&gt;As shown, after entering &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; we are prompted to enter our user password; if entered correctly, and if the user has been configured to have &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; privileges (which is the default on most desktop Unix systems), then the command will succeed.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As shown in &lt;a href=&quot;command_line_fragment.html#fig-sandwich&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;21&lt;/span&gt;&lt;/a&gt;, this pattern of being denied at first, only to succeed using &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt;, is a common theme in computing.&lt;/p&gt;
&lt;p&gt;To check that the file really was created, we can &lt;code class=&quot;tt&quot;&gt;ls&lt;/code&gt; it:&lt;/p&gt;
&lt;pre&gt; $ ls -l /opt/foo
 -rw-r--r-- 1 root wheel 0 Jul 23 19:13 /opt/foo&lt;/pre&gt;
&lt;p&gt;Note that (1) a normal user can &lt;code class=&quot;tt&quot;&gt;ls&lt;/code&gt; a file in a system directory (without &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt;) and (2) the name &lt;code class=&quot;tt&quot;&gt;root&lt;/code&gt; appears in the listing, indicating that the superuser owns the file.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The meaning of the second term, &lt;code class=&quot;tt&quot;&gt;wheel&lt;/code&gt;, is a little obscure, but you can learn about it on a site called, appropriately enough, &lt;a href=&quot;http://superuser.com/questions/191955/what-is-the-wheel-user-in-os-x&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;superuser&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;To remove the file we just created, we again need superuser status:&lt;/p&gt;
&lt;pre&gt; $ rm -f /opt/foo
 rm: /opt/foo: Permission denied
 $ sudo !!
 $ !ls
 ls: /opt/foo: No such file or directory&lt;/pre&gt;
&lt;p&gt;Here the first &lt;code class=&quot;tt&quot;&gt;rm&lt;/code&gt; fails, so we’ve run &lt;code class=&quot;tt&quot;&gt;sudo !!&lt;/code&gt;, which runs &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; and then the previous command , and we’ve followed that up with &lt;code class=&quot;tt&quot;&gt;!ls&lt;/code&gt;, which runs the previous &lt;code class=&quot;tt&quot;&gt;ls&lt;/code&gt; command (&lt;a href=&quot;command_line_fragment.html#aside-repeating_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It’s also worth noting the English pronunciation of something like &lt;code class=&quot;tt&quot;&gt;sudo !!&lt;/code&gt;, which is important when communicating via spoken language.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As noted in &lt;a href=&quot;command_line_fragment.html#aside-repeating_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;, &lt;code class=&quot;tt&quot;&gt;!!&lt;/code&gt; is pronounced “bang bang”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt;, meanwhile, is pronounced either “SOO-doo” or “SOO-doh”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Both pronunciations are common, though I prefer the former because the &lt;code class=&quot;tt&quot;&gt;do&lt;/code&gt; in &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; is in fact just the English word “do”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Thus, my preferred pronunciation for &lt;code class=&quot;tt&quot;&gt;sudo !!&lt;/code&gt; is “SOO-doo bang bang”.&lt;/p&gt;
&lt;p&gt;By the way, the &lt;code class=&quot;tt&quot;&gt;su&lt;/code&gt; in &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; &lt;a href=&quot;https://pthree.org/2009/12/31/the-meaning-of-su/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;originally stood&lt;/a&gt; for “super-user”, but over time its use expanded, and now is usually thought of as “substitute user”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;code class=&quot;tt&quot;&gt;sudo&lt;/code&gt; is therefore a contraction of “substitute user do”, with the substitute user being the superuser by default.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because the superuser can do anything, the command “sudo make me a sandwich” in &lt;a href=&quot;command_line_fragment.html#fig-sandwich&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;21&lt;/span&gt;&lt;/a&gt; succeeds when a mere “make me a sandwich” does not.&lt;/p&gt;

&lt;/div&gt;&lt;div class=&quot;center figure&quot; id=&quot;fig-sandwich&quot; data-tralics-id=&quot;uid174&quot; data-number=&quot;21&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/sandwich.png&quot; alt=&quot;images/figures/sandwich&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 21: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;“&lt;a href=&quot;https://m.xkcd.com/149/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sandwich&lt;/a&gt;” (via &lt;a href=&quot;http://xkcd.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;xkcd&lt;/a&gt;) derives humor from the behavior of &lt;code&gt;sudo&lt;/code&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_structure&quot; data-tralics-id=&quot;uid175&quot; class=&quot;subsubsection&quot; data-number=&quot;4.1.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_structure&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Write in words how you might speak the directory &lt;code&gt;~/foo/bar&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-speak-dir&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;/Users/bill/sonnets&lt;/code&gt;, what is the home directory?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; What is the username?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Which directory is deepest in the hierarchy? &lt;span class=&quot;exercise&quot; id=&quot;ex-dir-comp&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;For a user with username &lt;code&gt;bill&lt;/code&gt;, how do &lt;code&gt;/Users/bill/sonnets&lt;/code&gt; and &lt;code&gt;~/sonnets&lt;/code&gt; differ (if at all)? &lt;span class=&quot;exercise&quot; id=&quot;ex-dir-username&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-making_directories&quot; data-tralics-id=&quot;uid179&quot; class=&quot;subsection&quot; data-number=&quot;4.2&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-making_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.2 &lt;/span&gt;Making directories&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So far in this tutorial, we’ve created (and removed) a large number of text files.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The time has finally come to make a directory to contain them.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Although most modern operating systems include a graphical interface for this task, the Unix way to do it is with &lt;code&gt;mkdir&lt;/code&gt; (short for “make directory”, per &lt;a href=&quot;command_line_fragment.html#fig-y_u_no&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;16&lt;/span&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir text_files
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Having made the directory, we can move the text files there using a wildcard:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mv *.txt text_files/
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can confirm the move worked by listing the directory:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls text_files/
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(Depending on how closely you’ve followed this tutorial, your results may vary.)&lt;/p&gt;
&lt;p&gt;By default, running &lt;code&gt;ls&lt;/code&gt; on a directory shows its &lt;em&gt;contents&lt;/em&gt;, but we can show just the directory using the &lt;code&gt;-d&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -d text_files/
&lt;span class=&quot;go&quot;&gt;text_files/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This usage is especially common with the &lt;code&gt;-l&lt;/code&gt; option (&lt;a href=&quot;command_line_fragment.html#sec-listing&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.2&lt;/span&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls -ld text_files/
&lt;span class=&quot;go&quot;&gt;drwxr-xr-x 7 mhartl staff 238 Jul 24 18:07 text_files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finally, we can change directories using &lt;code&gt;cd&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;text_files/
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;cd&lt;/code&gt; typically supports tab completion, so (as described in &lt;a href=&quot;command_line_fragment.html#aside-tab_completion&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt;) we can actually type &lt;code&gt;cd tex⇥&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After running &lt;code&gt;cd&lt;/code&gt;, we can confirm that we’re in the correct directory using the “print working directory” command, &lt;code&gt;pwd&lt;/code&gt;, together with another call to &lt;code&gt;ls&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These last steps of typing &lt;code&gt;pwd&lt;/code&gt; to double-check the directory, and especially running &lt;code&gt;ls&lt;/code&gt; to inspect the directory contents, are a matter of habit for many a grizzled command-line veteran.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (Your result for &lt;code&gt;pwd&lt;/code&gt; will, of course, be different, unless you happen to be using the username “mhartl” on macOS.)&lt;/p&gt;
&lt;div id=&quot;sec-exercises_making_dirctories&quot; data-tralics-id=&quot;uid180&quot; class=&quot;subsubsection&quot; data-number=&quot;4.2.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_making_dirctories&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;What is the option for making intermediate directories as required, so that you can create, e.g., &lt;code&gt;~/foo&lt;/code&gt; and &lt;code&gt;~/foo/bar&lt;/code&gt; with a single command?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Refer to the man page for &lt;code&gt;mkdir&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-mkdir-p&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Use the option from the previous exercise to make the directory &lt;code&gt;foo&lt;/code&gt; and, within it, the directory &lt;code&gt;bar&lt;/code&gt; (i.e., &lt;code&gt;~/foo/bar&lt;/code&gt;) with a single command. &lt;span class=&quot;exercise&quot; id=&quot;ex-mkdir-heirarchy&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;By piping the output of &lt;code&gt;ls&lt;/code&gt; to &lt;code&gt;grep&lt;/code&gt;, list everything in the home directory that contains the letter “o”. &lt;span class=&quot;exercise&quot; id=&quot;ex-ls-pipe-grep&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-navigating_directories&quot; data-tralics-id=&quot;uid184&quot; class=&quot;subsection&quot; data-number=&quot;4.3&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-navigating_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.3 &lt;/span&gt;Navigating directories&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We saw in &lt;a href=&quot;command_line_fragment.html#sec-making_directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4.2&lt;/span&gt;&lt;/a&gt; how to use &lt;code&gt;cd&lt;/code&gt; to change to a directory with a given name.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is one of the most common ways of navigating, but there are a couple of special forms worth knowing.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The first is changing to the directory one level up in the hierarchy using &lt;code&gt;cd ..&lt;/code&gt; (read “see-dee dot-dot”):&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In this case, because &lt;code&gt;/Users/mhartl&lt;/code&gt; is my &lt;em&gt;home directory&lt;/em&gt;, we could have accomplished the same thing using &lt;code&gt;cd&lt;/code&gt; by itself:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;text_files/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The reason this works is that &lt;code&gt;cd&lt;/code&gt; by itself changes to the user’s home directory, wherever that is.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This means that&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;are equivalent.&lt;/p&gt;
&lt;p&gt;When changing directories, it’s frequently useful to be able to specify the home directory somehow.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, suppose we make a second directory and cd into it:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir second_directory
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;second_directory/
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now if we want to change to the &lt;code&gt;text_files&lt;/code&gt; directory, we can &lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;text_files&lt;/code&gt; via the home directory &lt;code&gt;~&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/second_directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/text_files
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Incidentally, we’re now in a position to understand the prompts shown in &lt;a href=&quot;command_line_fragment.html#fig-command_exercise&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;: I have my prompt configured to show the current directory, which might be something like &lt;code&gt;[~]&lt;/code&gt;, &lt;code&gt;[ruby]&lt;/code&gt;, or &lt;code&gt;[projects]&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (We’ll discuss how to customize the prompt in &lt;a href=&quot;http://learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Text Editor to Be Dangerous&lt;/em&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Especially eager (or impatient) readers can exercise their technical sophistication (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;) by &lt;a href=&quot;http://lmgtfy.com/?q=bash+customize+prompt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Googling for how to do it&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Closely related to &lt;code&gt;..&lt;/code&gt; for “one directory up” is &lt;code&gt;.&lt;/code&gt; (read “dot”) which means “the current directory”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The most common use of &lt;code&gt;.&lt;/code&gt; is when moving or copying files to the current directory:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/second_directory
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp ~/text_files/sonnets.txt .
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;sonnets.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note in that the first call to &lt;code&gt;ls&lt;/code&gt; returns nothing, because &lt;code&gt;second_directory&lt;/code&gt; is initially empty.&lt;/p&gt;
&lt;p&gt;Another common use of &lt;code&gt;.&lt;/code&gt; is in conjunction with the &lt;code&gt;find&lt;/code&gt; command, which like &lt;code&gt;grep&lt;/code&gt; is insanely powerful, but in my own use it looks like this 99% of the time:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;find . -name &lt;span class=&quot;s1&quot;&gt;&#39;*.txt&#39;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./text_files/sonnet_1.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./text_files/sonnet_1_reversed.txt&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./text_files/sonnets.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In words, what this does is find files whose names match the pattern &lt;code&gt;*.txt&lt;/code&gt;, starting in the current directory &lt;code&gt;.&lt;/code&gt; and then in its subdirectories.&lt;sup id=&quot;cha-0_footnote-ref-27&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-27&quot;&gt;27&lt;/a&gt;&lt;/sup&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The &lt;code&gt;find&lt;/code&gt; utility is incredibly useful for finding a misplaced file at the command line.&lt;/p&gt;
&lt;p&gt;Perhaps my favorite use of &lt;code&gt;.&lt;/code&gt; is in “open dot”, which will work only on macOS:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/ruby/projects
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; open .
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The remarkable &lt;code&gt;open&lt;/code&gt; command opens its argument using whatever the default program is for the given file or directory.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (A similar command, &lt;code&gt;xdg-open&lt;/code&gt;, works on some Linux systems.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, &lt;code&gt;open foo.pdf&lt;/code&gt; would open the PDF file with the default viewer (which is Preview on most Macs).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In the case of a directory such as &lt;code&gt;.&lt;/code&gt;, that default program is the Finder, so &lt;code&gt;open .&lt;/code&gt; produces a result like that shown in &lt;a href=&quot;command_line_fragment.html#fig-directory_folder&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A final navigational command, and one of my personal favorites, is &lt;code&gt;cd -&lt;/code&gt;, which cds to the &lt;em&gt;previous&lt;/em&gt; directory, wherever it was:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/second_directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/text_files
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/text_files&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; -
&lt;span class=&quot;go&quot;&gt;/Users/mhartl/second_directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I find that &lt;code&gt;cd -&lt;/code&gt; is especially useful when combining commands, as described in &lt;a href=&quot;command_line_fragment.html#aside-combining_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-combining_commands&quot; data-tralics-id=&quot;uid186&quot; data-number=&quot;12&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 12.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Combining commands&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;It’s often convenient to combine commands at the command line, such as when installing software using the Unix programs &lt;code class=&quot;tt&quot;&gt;configure&lt;/code&gt; and &lt;code class=&quot;tt&quot;&gt;make&lt;/code&gt;, which often appear in the following sequence:&lt;/p&gt;
&lt;pre&gt; $ ./configure ; make ; make install&lt;/pre&gt;
&lt;p&gt;This line runs the &lt;code class=&quot;tt&quot;&gt;configure&lt;/code&gt; program from the current directory &lt;code class=&quot;tt&quot;&gt;.&lt;/code&gt;, and then runs both &lt;code class=&quot;tt&quot;&gt;make&lt;/code&gt; and &lt;code class=&quot;tt&quot;&gt;make install&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (You are not expected to understand what these programs do, and indeed they won’t work on your system unless you happen to be in the directory of a program designed to be installed this way.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Because they are separated by the semicolon character &lt;code class=&quot;tt&quot;&gt;;&lt;/code&gt;, three commands are run in sequence.&lt;/p&gt;
&lt;p&gt;An even better way to combine commands is with the double-ampersand &lt;code class=&quot;tt&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt; $ ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/pre&gt;
&lt;p&gt;The difference is that commands separated by &lt;code class=&quot;tt&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; run only if the previous command &lt;em&gt;succeeded&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In contrast, with &lt;code class=&quot;tt&quot;&gt;;&lt;/code&gt; all the commands will be run no matter what, which will cause an error in the likely case that subsequent commands depend on the results of the ones that precede them.&lt;/p&gt;
&lt;p&gt;I especially like to use &lt;code class=&quot;tt&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; in combination with &lt;code class=&quot;tt&quot;&gt;cd -&lt;/code&gt;, which lets me do things like this:&lt;/p&gt;
&lt;pre&gt; $ build_article &amp;amp;&amp;amp; cd ~/tau &amp;amp;&amp;amp; deploy &amp;amp;&amp;amp; cd -&lt;/pre&gt;
&lt;p&gt;Again, you are not expected to understand these commands, but the general idea is that we can (say) build an article in one directory, &lt;code class=&quot;tt&quot;&gt;cd&lt;/code&gt; to a different directory, deploy (perhaps a &lt;a href=&quot;http://tauday.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;website&lt;/a&gt;) to production, and then &lt;code class=&quot;tt&quot;&gt;cd&lt;/code&gt; back (&lt;code class=&quot;tt&quot;&gt;cd -&lt;/code&gt;) to the original directory, where we can continue our work.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Then, if need be, we can just use up arrow (or one of the techniques from &lt;a href=&quot;command_line_fragment.html#aside-repeating_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;9&lt;/span&gt;&lt;/a&gt;) to retrieve the whole thing and do it all again.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;sec-exercises_navigating_directories&quot; data-tralics-id=&quot;uid187&quot; class=&quot;subsubsection&quot; data-number=&quot;4.3.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_navigating_directories&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;How do the effects of &lt;code&gt;cd&lt;/code&gt; and &lt;code&gt;cd ~&lt;/code&gt; differ (or do they)? &lt;span class=&quot;exercise&quot; id=&quot;ex-cd-tilde&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Change to &lt;code&gt;text_files&lt;/code&gt;, then change to &lt;code&gt;second_directory&lt;/code&gt; using the “one directory up” double dot operator &lt;code&gt;..&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-cd-double-dot&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;From wherever you are, create an empty file called &lt;code&gt;nil&lt;/code&gt; in &lt;code&gt;text_files&lt;/code&gt; using whatever method you wish. &lt;span class=&quot;exercise&quot; id=&quot;ex-create-empty-file&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;nil&lt;/code&gt; from the previous exercise using a different path from the one you used before.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (In other words, if you used the path &lt;code&gt;~/text_files&lt;/code&gt; before, use something like &lt;code&gt;../text_files&lt;/code&gt; or &lt;code&gt;/Users/&amp;lt;username&amp;gt;/text_files&lt;/code&gt;.) &lt;span class=&quot;exercise&quot; id=&quot;ex-remove-empty-file&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-removing_directories&quot; data-tralics-id=&quot;uid192&quot; class=&quot;subsection&quot; data-number=&quot;4.4&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-removing_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.4 &lt;/span&gt;Renaming, copying, and deleting directories&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The commands for renaming, copying, and deleting directories are similar to those for files (&lt;a href=&quot;command_line_fragment.html#sec-renaming_copying_deleting&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;2.3&lt;/span&gt;&lt;/a&gt;), but there are some subtle differences worth noting.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The command with the least difference is &lt;code&gt;mv&lt;/code&gt;, which works just as it does for files:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir foo
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mv foo/ bar/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;foo/
&lt;span class=&quot;go&quot;&gt;-bash: cd: foo: No such file or directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;bar/
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here the error message indicates that the &lt;code&gt;mv&lt;/code&gt; worked: there is no file or directory called &lt;code&gt;foo&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The word &lt;code&gt;bash&lt;/code&gt; refers to the shell being run, in this case the “&lt;a href=&quot;https://www.gnu.org/software/bash/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Bourne Again SHell&lt;/a&gt;”.)&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The only minor subtlety is that the trailing slashes (which are typically added automatically by tab completion (&lt;a href=&quot;command_line_fragment.html#aside-tab_completion&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;8&lt;/span&gt;&lt;/a&gt;)) are optional:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;mv bar foo
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;foo/
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This issue with trailing slashes never makes a difference with &lt;code&gt;mv&lt;/code&gt;, but with &lt;code&gt;cp&lt;/code&gt; it can be a source of much confusion.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In particular, when copying directories, the behavior you usually want is to copy the directory contents &lt;em&gt;including&lt;/em&gt; the directory, which on many systems requires leaving off the trailing slash.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; When copying files, you also need to include the &lt;code&gt;-r&lt;/code&gt; option (for “recursive”).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; For example, to copy the contents of the &lt;code&gt;text_files&lt;/code&gt; directory to a new directory called &lt;code&gt;foobar&lt;/code&gt;, we use the command shown in &lt;a href=&quot;command_line_fragment.html#code-cp_r&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;19&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-cp_r&quot; data-tralics-id=&quot;uid193&quot; data-number=&quot;19&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 19:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Copying a directory.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;mkdir foobar
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;foobar/
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp -r ../text_files .
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;text_files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Note that we’ve used &lt;code&gt;..&lt;/code&gt; to make a &lt;em&gt;relative path&lt;/em&gt;, going up one directory and then into &lt;code&gt;text_files&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Also note the &lt;em&gt;lack&lt;/em&gt; of a trailing slash in &lt;code&gt;cp -r ../text_files .&lt;/code&gt;; if we included it, we’d get &lt;a href=&quot;command_line_fragment.html#code-cp_slash&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt; instead.&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-cp_slash&quot; data-tralics-id=&quot;uid194&quot; data-number=&quot;20&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 20:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Copying with a trailing slash.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp -r ../text_files/ .
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;go&quot;&gt;sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt   text_files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In other words, &lt;a href=&quot;command_line_fragment.html#code-cp_slash&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;20&lt;/span&gt;&lt;/a&gt; copies the individual files, but not the directory itself.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, I recommend always omitting the trailing slash, as in &lt;a href=&quot;command_line_fragment.html#code-cp_r&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;19&lt;/span&gt;&lt;/a&gt;; if you want to copy only the files, be explicit using the star operator, as in:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp ../text_files/* .
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Unlike renaming (moving) and copying directories, which use the same &lt;code&gt;mv&lt;/code&gt; and &lt;code&gt;cp&lt;/code&gt; commands used for files, in the case of removing directories there’s a dedicated command called &lt;code&gt;rmdir&lt;/code&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In my experience, though, it rarely works, as seen here:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;rmdir second_directory
&lt;span class=&quot;go&quot;&gt;rmdir: second_directory/: Directory not empty&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The error message here is what happens 99% of the time when I try to remove directories, because &lt;code&gt;rmdir&lt;/code&gt; requires the directory to be empty.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; You can of course empty it by hand (using &lt;code&gt;rm&lt;/code&gt; repeatedly), but this is frequently inconvenient, and I almost always use the more powerful (but &lt;em&gt;much&lt;/em&gt; more dangerous) “remove recursive force” command &lt;code&gt;rm -rf&lt;/code&gt;, which removes a directory, its files, and any subdirectories without confirmation (&lt;a href=&quot;command_line_fragment.html#code-rm_rf&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;21&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&quot;codelisting&quot; id=&quot;code-rm_rf&quot; data-tralics-id=&quot;uid195&quot; data-number=&quot;21&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Listing 21:&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Using &lt;code&gt;rm -rf&lt;/code&gt; to remove a directory.&lt;/span&gt;
&lt;/div&gt;

&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rm -rf second_directory/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ls second_directory
&lt;span class=&quot;go&quot;&gt;ls: second_directory: No such file or directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;As the error message from &lt;code&gt;ls&lt;/code&gt; in &lt;a href=&quot;command_line_fragment.html#code-rm_rf&quot; class=&quot;hyperref&quot;&gt;Listing &lt;span class=&quot;ref&quot;&gt;21&lt;/span&gt;&lt;/a&gt; indicates (“No such file or directory”), our use of &lt;code&gt;rm -rf&lt;/code&gt; succeeded in removing the directory.&lt;/p&gt;
&lt;p&gt;The powerful command &lt;code&gt;rm -rf&lt;/code&gt; is too convenient to ignore, but remember: “&lt;a href=&quot;https://en.wikipedia.org/wiki/Uncle_Ben#.22With_great_power_comes_great_responsibility.22&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;With great power comes great responsibility&lt;/a&gt;” (&lt;a href=&quot;command_line_fragment.html#fig-spider_man&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;22&lt;/span&gt;&lt;/a&gt;).&lt;sup id=&quot;cha-0_footnote-ref-28&quot; class=&quot;footnote&quot;&gt;&lt;a href=&quot;#cha-0_footnote-28&quot;&gt;28&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&quot;center figure&quot; id=&quot;fig-spider_man&quot; data-tralics-id=&quot;uid197&quot; data-number=&quot;22&quot;&gt;
&lt;div class=&quot;graphics image&quot;&gt;&lt;img src=&quot;images/figures/spider_man.jpg&quot; alt=&quot;images/figures/spider_man&quot;&gt;&lt;/div&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Figure 22: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;This &lt;a href=&quot;https://en.wikipedia.org/wiki/Spider-Man&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;superhero&lt;/a&gt; understands how to use the power of &lt;code&gt;rm -rf&lt;/code&gt; responsibly.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-grep_redux&quot; data-tralics-id=&quot;uid198&quot; class=&quot;subsubsection&quot; data-number=&quot;4.4.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-grep_redux&quot; class=&quot;heading&quot;&gt;Grep redux&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now that we know a little about directories, we are in a position to add a useful &lt;code&gt;grep&lt;/code&gt; variation to our toolkit from &lt;a href=&quot;command_line_fragment.html#sec-grepping&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.4&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As with &lt;code&gt;cp&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt; takes a “recursive” option, &lt;code&gt;-r&lt;/code&gt;, which in this case greps through a directory’s files and the files in its subdirectories.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is incredibly useful when you’re looking for a string in a file somewhere in a hierarchy of directories, but you’re not sure where the file is.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Here’s the setup, which puts the word “&lt;a href=&quot;http://dictionary.reference.com/browse/sesquipedalian&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;sesquipedalian&lt;/a&gt;” in a file called &lt;code&gt;long_word.txt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;text_files/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir foo
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;foo/
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;sesquipedalian &amp;gt; long_word.txt
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The final &lt;code&gt;cd&lt;/code&gt; puts us back in the home directory.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Suppose we now want to find the file containing “sesquipedalian”.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; The way &lt;em&gt;not&lt;/em&gt; to do it is this:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep sesquipedalian text_files
&lt;span class=&quot;go&quot;&gt;grep: text_files: Is a directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here &lt;code&gt;grep&lt;/code&gt;’s error message indicates that the command didn’t work, but adding &lt;code&gt;-r&lt;/code&gt; does the trick:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep -r sesquipedalian text_files
&lt;span class=&quot;go&quot;&gt;text_files/foo/long_word.txt:sesquipedalian&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Because case rarely matters, I recommend making a habit of adding the &lt;code&gt;-i&lt;/code&gt; option when grepping recursively, as follows:&lt;/p&gt;
&lt;div class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; grep -ri sesquipedalian text_files
&lt;span class=&quot;go&quot;&gt;text_files/foo/long_word.txt:sesquipedalian&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Armed with &lt;code&gt;grep -ri&lt;/code&gt;, we are now equipped to find strings of our choice in arbitrarily deep hierarchies of directories.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;sec-exercises_mv_cp_rmdir&quot; data-tralics-id=&quot;uid199&quot; class=&quot;subsubsection&quot; data-number=&quot;4.4.2&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_mv_cp_rmdir&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Make a directory &lt;code&gt;foo&lt;/code&gt; with a subdirectory &lt;code&gt;bar&lt;/code&gt;, then rename the subdirectory to &lt;code&gt;baz&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-mkdir-sub-rm&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Copy all the files in &lt;code&gt;text_files&lt;/code&gt;, &lt;em&gt;with&lt;/em&gt; directory, into &lt;code&gt;foo&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-copy-recursive&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Copy all the files in &lt;code&gt;text_files&lt;/code&gt;, &lt;em&gt;without&lt;/em&gt; directory, into &lt;code&gt;bar&lt;/code&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-copy-not-recursive&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Remove &lt;code&gt;foo&lt;/code&gt; and everything in it using a single command. &lt;span class=&quot;exercise&quot; id=&quot;ex-rm-dir&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-summary_directories&quot; data-tralics-id=&quot;uid204&quot; class=&quot;subsection&quot; data-number=&quot;4.5&quot;&gt;&lt;h3&gt;&lt;a href=&quot;command_line_fragment.html#sec-summary_directories&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.5 &lt;/span&gt;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Important commands from this section are summarized in &lt;a href=&quot;command_line_fragment.html#table-directories&quot; class=&quot;hyperref&quot;&gt;Table &lt;span class=&quot;ref&quot;&gt;6&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;table-directories&quot; data-tralics-id=&quot;uid205&quot; data-number=&quot;6&quot; class=&quot;table&quot;&gt;&lt;table class=&quot;tabular&quot;&gt;
&lt;tbody&gt;&lt;tr class=&quot;bottom_border&quot;&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;mkdir &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Make directory with name&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ mkdir foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;pwd&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Print working directory&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ pwd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cd &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Change to &amp;lt;dir&amp;gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cd foo/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cd ~/&amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;cd relative to home&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cd ~/foo/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cd&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Change to home directory&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cd -&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Change to previous directory&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cd &amp;amp;&amp;amp; pwd &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;.&lt;/code&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;The current directory&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cp ~/foo.txt .&lt;/code&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;..&lt;/code&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;One directory up&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cd ..&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;find&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Find files &amp;amp; directories&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ find .&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; -name foo*.*&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;cp -r &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Copy recursively&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ cp -r ~/foo .&lt;/code&gt;&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;rmdir &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Remove (empty) dir&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ rmdir foo/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;rm -rf &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Remove dir &amp;amp; contents&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ rm -rf foo/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;align_left&quot;&gt;&lt;code class=&quot;tt&quot;&gt;grep -ri &amp;lt;string&amp;gt; &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;Grep recursively (case-insensitive)&lt;/td&gt;
&lt;td class=&quot;align_left&quot;&gt;&lt;code&gt;$ grep -ri foo bar/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;caption&quot;&gt;&lt;span class=&quot;header&quot;&gt;Table 6: &lt;/span&gt;&lt;span class=&quot;description&quot;&gt;Important commands from &lt;a href=&quot;command_line_fragment.html#sec-directories&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;4&lt;/span&gt;&lt;/a&gt;.
&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sec-exercises_summary_directories&quot; data-tralics-id=&quot;uid206&quot; class=&quot;subsubsection&quot; data-number=&quot;4.5.1&quot;&gt;&lt;h4&gt;&lt;a href=&quot;#sec-exercises_summary_directories&quot; class=&quot;heading&quot;&gt;Exercises&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; &lt;/p&gt;&lt;div class=&quot;society-note&quot;&gt;
&lt;p&gt;Solutions to exercises are available for free at &lt;a href=&quot;http://www.learnenough.com/solutions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/solutions&lt;/a&gt; with any Learn Enough purchase.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To see other people’s answers and to record your own, join the &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Learn Enough Society&lt;/a&gt; at &lt;a href=&quot;http://learnenough.com/society&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;learnenough.com/society&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;  &lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Starting in your home directory, execute a single command-line command to make a directory &lt;code&gt;foo&lt;/code&gt;, change into it, create a file &lt;code&gt;bar&lt;/code&gt; with content “baz”, print out &lt;code&gt;bar&lt;/code&gt;’s contents, and then &lt;code&gt;cd&lt;/code&gt; back to the directory you came from.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Combine the commands as described in &lt;a href=&quot;command_line_fragment.html#aside-combining_commands&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;. &lt;span class=&quot;exercise&quot; id=&quot;ex-combined-commands&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;What happens when you run the previous command again?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; How many of the commands executed?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Why? &lt;span class=&quot;exercise&quot; id=&quot;ex-combined-commands-again&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Explain why the command &lt;code&gt;rm -rf /&lt;/code&gt; is unbelievably dangerous, and why you should never type it into a terminal window, not even as a joke. &lt;span class=&quot;exercise&quot; id=&quot;ex-rm-f-danger&quot;&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;How can the previous command be made even more dangerous?&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: Refer to &lt;a href=&quot;command_line_fragment.html#aside-sudo&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;11&lt;/span&gt;&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (This command is so dangerous you shouldn’t even &lt;em&gt;think&lt;/em&gt; it, much less type it.) &lt;span class=&quot;exercise&quot; id=&quot;ex-rm-f-more-danger&quot;&gt;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;sec-conclusion&quot; data-tralics-id=&quot;cid5&quot; class=&quot;section&quot; data-number=&quot;5&quot;&gt;&lt;h2&gt;&lt;a href=&quot;command_line_fragment.html#sec-conclusion&quot; class=&quot;heading hyperref&quot;&gt;&lt;span class=&quot;number&quot;&gt;5 &lt;/span&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Congratulations!&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; You’ve officially learned enough command line to be &lt;em&gt;dangerous&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Of course, this is only one step on a longer journey, both toward command-line excellence (&lt;a href=&quot;command_line_fragment.html#aside-additional_resources&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;13&lt;/span&gt;&lt;/a&gt;) and software development wizardry.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As you proceed on this journey, you will probably discover that learning computer magic can be exciting and empowering, but it can also be &lt;em&gt;hard&lt;/em&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Indeed, you may already have discovered this fact, either on your own or while doing this tutorial.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; To those brave magicians-in-training who wish to proceed, I offer the following sequence, which is currently in preparation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Developer Fundamentals&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/command-line-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt;&lt;/a&gt; (you are here)
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Text Editor to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/git-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Git to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web Basics&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/html-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough HTML to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/css-and-layout-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough CSS &amp;amp; Layout to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/javascript-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough JavaScript to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intro Ruby Web Development&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/ruby-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Ruby to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/sinatra-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Sinatra to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.learnenough.com/ruby-on-rails-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Ruby on Rails to Be Dangerous&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Professional Ruby Web Development&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.railstutorial.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;The Ruby on Rails Tutorial&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;Only the first three titles and the last title in the above list are complete, but all the other links go to landing pages where you can sign up to be notified when the next tutorial in the sequence is ready.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; See you there!&lt;/p&gt;
&lt;div class=&quot;aside&quot; id=&quot;aside-additional_resources&quot; data-tralics-id=&quot;uid225&quot; data-number=&quot;13&quot;&gt;&lt;div class=&quot;heading&quot;&gt;&lt;span class=&quot;number&quot;&gt;Box 13.&lt;/span&gt; 

&lt;span class=&quot;description&quot;&gt;Additional resources&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;I recommend following the &lt;em&gt;Learn Enough&lt;/em&gt; sequence, as it represents the shortest path to technical proficiency and software development skills, but at some point you’ll probably want to expand your command-line skills as well.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; When that time comes, I recommend consulting this list, which consists mainly of resources recommended by readers of the present tutorial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://conqueringthecommandline.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Conquering the Command Line&lt;/em&gt;&lt;/a&gt; book and screencasts by Mark Bates (which like the present tutorial is available for free &lt;a href=&quot;http://conqueringthecommandline.com/book&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;online&lt;/a&gt;)
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.edx.org/course/introduction-linux-linuxfoundationx-lfs101x-2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;edX course on Linux&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codecademy.com/learn/learn-the-command-line&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codecademy course on the command line&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The similarly named &lt;a href=&quot;http://cli.learncodethehardway.org/book/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;The Command Line Crash Course&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;http://www.vikingcodeschool.com/web-development-basics/a-command-line-crash-course&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;A Command Line Crash Course&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linuxcommand.org/lc3_learning_the_shell.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learning the Shell&lt;/em&gt;&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;

&lt;/div&gt;&lt;p&gt;&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;em&gt;Learn Enough Command Line to Be Dangerous&lt;/em&gt;&lt;/small&gt;&lt;small&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright © 2015 by Michael Hartl.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;If you enjoyed this tutorial, please &lt;a href=&quot;https://www.amazon.com/dp/B01KG84X44&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;leave a review at Amazon&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Thanks!&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;cha-0_footnotes&quot;&gt;
  &lt;ol class=&quot;footnotes&quot;&gt;
    &lt;li id=&quot;cha-0_footnote-1&quot;&gt;As discussed in &lt;a href=&quot;command_line_fragment.html#sec-basics&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;1&lt;/span&gt;&lt;/a&gt;, this statement applies to the &lt;a href=&quot;http://www.catb.org/esr/writings/taoup/html/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Unix tradition&lt;/em&gt;&lt;/a&gt;, which is the principal computing tradition behind the Internet and the World Wide Web, and the tradition followed by this tutorial.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In addition to being important for developers, knowing the command line is also essential for &lt;a href=&quot;https://en.wikipedia.org/wiki/System_administrator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;system administrators&lt;/a&gt; (sysadmins). &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-1&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-2&quot;&gt;In a fairly typical turn of events, the name &lt;em&gt;Unix&lt;/em&gt; started as a &lt;a href=&quot;http://www.catb.org/jargon/html/U/Unix.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pun&lt;/a&gt; on a rival system called &lt;em&gt;Multics&lt;/em&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-2&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-3&quot;&gt;An IDE, or &lt;em&gt;integrated development environment&lt;/em&gt;, integrates several development tools (such as a command line and a text editor) into one application. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-3&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-4&quot;&gt;An option is sometimes also called a &lt;em&gt;flag&lt;/em&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-4&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-5&quot;&gt;For example, when developing web applications, in addition to my main command-line tab I often have separate tabs for running a &lt;a href=&quot;https://www.railstutorial.org/book/beginning#sec-rails_server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;local web server&lt;/a&gt; and an &lt;a href=&quot;https://www.railstutorial.org/book/static_pages#sec-our_first_test&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;automated test suite&lt;/a&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-5&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-6&quot;&gt;There are subtle differences between the two cases, but they aren’t important at the level of this tutorial.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Use your technical sophistication (&lt;a href=&quot;command_line_fragment.html#aside-technical_sophistication&quot; class=&quot;hyperref&quot;&gt;Box &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;) if you’re curious.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; &lt;em&gt;Hint&lt;/em&gt;: &lt;a href=&quot;http://lmgtfy.com/?q=command+line+shell+single+double+quote+differences&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google searches&lt;/a&gt; are your friends. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-6&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-7&quot;&gt;Image retrieved from https://www.flickr.com/photos/pheezy/5875298232 on 2015-07-19.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright © 2011 by Evan P. Cordes and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution 2.0 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-7&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-8&quot;&gt;Many introductions to the command line cover elements of the shell that require knowledge of a text editor—knowledge which (as noted in the introduction) this tutorial does &lt;em&gt;not&lt;/em&gt; assume.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As a result, we’ll defer these important topics to the follow-on tutorials to this one (&lt;a href=&quot;command_line_fragment.html#sec-conclusion&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;5&lt;/span&gt;&lt;/a&gt;), starting with &lt;a href=&quot;http://learnenough.com/text-editor-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Learn Enough Text Editor to Be Dangerous&lt;/em&gt;&lt;/a&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-8&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-9&quot;&gt;Image retrieved from https://commons.wikimedia.org/wiki/File:Jazz_at_Knicks_man_to_man_defense.jpg on 2015-07-22.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright © 2005 by Lordcolus and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution 2.0 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-9&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-10&quot;&gt;Copyright © Randall Munroe and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc/2.5/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution-NonCommercial 2.5 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-10&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-11&quot;&gt;There are also commands for moving one &lt;em&gt;word&lt;/em&gt; at a time (&lt;code class=&quot;tt&quot;&gt;ESC F&lt;/code&gt; and &lt;code class=&quot;tt&quot;&gt;ESC B&lt;/code&gt;), but I hardly ever use them myself, so it’s clear they are not required to be &lt;em&gt;dangerous&lt;/em&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-11&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-12&quot;&gt;Note that the &lt;a href=&quot;http://originalpronunciation.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Original Pronunciation&lt;/a&gt; (OP) of Shakespearean English is different from modern pronunciation.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Generally speaking, Shakespeare’s sonnets include many word pairs that don’t rhyme in modern English but do in OP.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; In the case of &lt;a href=&quot;command_line_fragment.html#fig-sonnet_1&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;12&lt;/span&gt;&lt;/a&gt;, the word “memory” should be pronounced “MEM-or-aye”, leading to a rhyme between lines 2 and 4 (ending in &lt;em&gt;die&lt;/em&gt; and &lt;em&gt;memory&lt;/em&gt;, respectively).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Image retrieved from https://commons.wikimedia.org/wiki/File:Sonnet_1.jpg on 2015-07-20.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This work is in the public domain and can be used without restriction. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-12&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-13&quot;&gt;Some keyboards lack an Option key, so obviously this trick won’t work on such systems. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-13&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-14&quot;&gt;Image retrieved from https://www.flickr.com/photos/tiffanyday/4076289684 on 2015-07-22.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright 2009 by Tiffa Day and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution 2.0 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-14&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-15&quot;&gt;&lt;p&gt;From the essay “&lt;a href=&quot;http://www.paulgraham.com/say.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;What You Can’t Say&lt;/a&gt;” by &lt;a href=&quot;http://paulgraham.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Paul Graham&lt;/a&gt; (2004).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; As Graham &lt;a href=&quot;http://www.paulgraham.com/saynotes.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;notes&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;quotation&quot;&gt;
&lt;p&gt;The verb “diff” is computer jargon, but it’s the only word with exactly the sense I want.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; It comes from the Unix &lt;code class=&quot;tt&quot;&gt;diff&lt;/code&gt; utility, which yields a list of all the differences between two files.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; More generally it means an unselective and microscopically thorough comparison between two versions of something.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt; &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-15&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-16&quot;&gt;A &lt;em&gt;bit&lt;/em&gt; is one piece of yes-or-no information (such as a 1 or a 0), and a &lt;em&gt;byte&lt;/em&gt; is eight bits.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Bytes are probably most familiar from “megabytes” and “gigabytes”, which represent a million and a billion bytes, respectively.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; (The &lt;a href=&quot;https://en.wikipedia.org/wiki/Megabyte&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;official story&lt;/a&gt; is a little more complicated, but level of detail here is certainly enough to be &lt;em&gt;dangerous&lt;/em&gt;.) &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-16&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-17&quot;&gt;URL is short for &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Uniform Resource Locator&lt;/a&gt;, and in practice usually just means “web address”. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-17&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-18&quot;&gt;&lt;a href=&quot;https://m.xkcd.com/1475/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Technically&lt;/a&gt;, &lt;code&gt;which&lt;/code&gt; locates a file on the user’s &lt;em&gt;path&lt;/em&gt;, which is a list of directories where executable programs are located. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-18&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-19&quot;&gt;If for any reason using &lt;code&gt;curl&lt;/code&gt; fails, you can always visit the URL in a browser and the use &lt;strong&gt;File &amp;gt; Save As&lt;/strong&gt; feature to save it to your local disk. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-19&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-20&quot;&gt;Having known about &lt;code&gt;ls -a&lt;/code&gt; and &lt;code&gt;ls -rtl&lt;/code&gt; for a while—which together yield the suggestive command &lt;code&gt;ls -artl&lt;/code&gt;—one day I decided to add an “h”’ (for &lt;a href=&quot;http://mhartl.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;obvious reasons&lt;/a&gt;).&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; This is actually how I accidentally discovered the useful &lt;code&gt;-h&lt;/code&gt; option some years ago. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-20&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-21&quot;&gt;On some systems, apparently they’re &lt;a href=&quot;http://unix.stackexchange.com/questions/604/isnt-less-just-more&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;exactly the same program&lt;/a&gt;, so &lt;code&gt;less&lt;/code&gt; really is &lt;code&gt;more&lt;/code&gt; (or, more accurately, &lt;code&gt;more&lt;/code&gt; is &lt;code&gt;less&lt;/code&gt;). &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-21&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-22&quot;&gt;Image retrieved from https://commons.wikimedia.org/wiki/File:Tudor_Rose.svg on 2015-07-21.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright © 2011 by Sodacan and used unaltered under the &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution-ShareAlike 2.0 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-22&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-23&quot;&gt;Although Shakespeare’s sonnets are undated, most of them were probably composed during the reign of &lt;a href=&quot;https://en.wikipedia.org/wiki/Elizabeth_I_of_England&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Queen Elizabeth&lt;/a&gt;, whose &lt;a href=&quot;https://en.wikipedia.org/wiki/Tudor_dynasty&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;royal house&lt;/a&gt; adopted a rose (&lt;a href=&quot;command_line_fragment.html#fig-tudor_rose&quot; class=&quot;hyperref&quot;&gt;Figure &lt;span class=&quot;ref&quot;&gt;18&lt;/span&gt;&lt;/a&gt;) as its &lt;a href=&quot;https://en.wikipedia.org/wiki/Heraldry&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;heraldic emblem&lt;/a&gt;.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Given this context, Shakespeare’s choice of floral imagery isn’t surprising, but in fact only a few commentators on the &lt;em&gt;Sonnets&lt;/em&gt; have &lt;a href=&quot;https://hankwhittemore.wordpress.com/tag/sonnet-1/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;noticed&lt;/a&gt; the seemingly obvious reference. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-23&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-24&quot;&gt;It comes from “&lt;strong&gt;g&lt;/strong&gt;lobally search a &lt;strong&gt;r&lt;/strong&gt;egular &lt;strong&gt;e&lt;/strong&gt;xpression and &lt;strong&gt;p&lt;/strong&gt;rint”, but &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=slartibartfast&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;I told you it wasn’t important&lt;/a&gt;. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-24&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-25&quot;&gt;Actually, “ROSE”, “RoSE”, “rOSE”, etc., all match as well, but “Rose” is the likeliest candidate.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Confirming this hunch is left as an exercise (&lt;a href=&quot;command_line_fragment.html#sec-exercises_grep&quot; class=&quot;hyperref&quot;&gt;Section &lt;span class=&quot;ref&quot;&gt;3.4.1&lt;/span&gt;&lt;/a&gt;). &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-25&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-26&quot;&gt;Copyright © Randall Munroe and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc/2.5/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution-NonCommercial 2.5 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-26&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-27&quot;&gt;My directory has a huge number of text files, ’cause that’s just how I roll, so the command I ran was actually &lt;code&gt;find .&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; -name ’*.txt’ | grep text_files&lt;/code&gt;, which filters out anything that doesn’t match the directory being used in this tutorial. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-27&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
    &lt;li id=&quot;cha-0_footnote-28&quot;&gt;Image retrieved from https://www.flickr.com/photos/whatleydude/13950241545 on 2015-07-22.&lt;span class=&quot;intersentencespace&quot;&gt;&lt;/span&gt; Copyright © 2014 by James Whatley and used unaltered under the terms of the &lt;a href=&quot;https://creativecommons.org/licenses/by/2.0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creative Commons Attribution 2.0 Generic&lt;/a&gt; license. &lt;a class=&quot;arrow&quot; href=&quot;#cha-0_footnote-ref-28&quot;&gt;↑&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;" id="j_sectionContent"><div><!--?xml version='1.0' encoding='UTF-8'?--><div id="book"><div id="title_page">
    <h1 class="title">Learn Enough Command Line <span class="break"></span> to Be Dangerous</h1>
    <h1 class="subtitle">A tutorial introduction to the Unix command line</h1>
    <h2 class="author">Michael Hartl</h2>
  </div>
      

<h1 class="contents">Contents</h1><div id="table_of_contents">
  <ul>
    <li class="section">
      <a href="https://www.learnenough.com/command-line-tutorial#sec-basics" class="heading hyperref"><span class="number">1 </span>Basics</a>
    </li>
    <li>
      <ul>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-running_a_terminal" class="heading hyperref"><span class="number">1.1 </span>Running a terminal</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-our_first_command" class="heading hyperref"><span class="number">1.2 </span>Our first command</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="heading hyperref"><span class="number">1.3 </span>Man pages</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-editing_the_line" class="heading hyperref"><span class="number">1.4 </span>Editing the line</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-cleaning_up" class="heading hyperref"><span class="number">1.5 </span>Cleaning up</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-summary_cleaning" class="heading hyperref"><span class="number">1.6 </span>Summary</a>
        </li>
      </ul>
    </li>
    <li class="section">
      <a href="https://www.learnenough.com/command-line-tutorial#sec-manipulating_files" class="heading hyperref"><span class="number">2 </span>Manipulating files</a>
    </li>
    <li>
      <ul>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-redirecting_and_appending" class="heading hyperref"><span class="number">2.1 </span>Redirecting and appending</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="heading hyperref"><span class="number">2.2 </span>Listing</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-renaming_copying_deleting" class="heading hyperref"><span class="number">2.3 </span>Renaming, copying, deleting</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-summary_manipulating" class="heading hyperref"><span class="number">2.4 </span>Summary</a>
        </li>
      </ul>
    </li>
    <li class="section">
      <a href="https://www.learnenough.com/command-line-tutorial#sec-inspecting_files" class="heading hyperref"><span class="number">3 </span>Inspecting files</a>
    </li>
    <li>
      <ul>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-downloading_a_file" class="heading hyperref"><span class="number">3.1 </span>Downloading a file</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-making_heads_and_tails" class="heading hyperref"><span class="number">3.2 </span>Making heads and tails of it</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="heading hyperref"><span class="number">3.3 </span>Less is more</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-grepping" class="heading hyperref"><span class="number">3.4 </span>Grepping</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-summary_inspecting" class="heading hyperref"><span class="number">3.5 </span>Summary</a>
        </li>
      </ul>
    </li>
    <li class="section">
      <a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="heading hyperref"><span class="number">4 </span>Directories</a>
    </li>
    <li>
      <ul>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-structure" class="heading hyperref"><span class="number">4.1 </span>Directory structure</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-making_directories" class="heading hyperref"><span class="number">4.2 </span>Making directories</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-navigating_directories" class="heading hyperref"><span class="number">4.3 </span>Navigating directories</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-removing_directories" class="heading hyperref"><span class="number">4.4 </span>Renaming, copying, and deleting directories</a>
        </li>
        <li class="subsection">
          <a href="https://www.learnenough.com/command-line-tutorial#sec-summary_directories" class="heading hyperref"><span class="number">4.5 </span>Summary</a>
        </li>
      </ul>
    </li>
    <li class="section">
      <a href="https://www.learnenough.com/command-line-tutorial#sec-conclusion" class="heading hyperref"><span class="number">5 </span>Conclusion</a>
    </li>
  </ul>
</div><p><em>Learn Enough Command Line to Be Dangerous</em> is an introduction to the command line for complete beginners, the first in a <a href="http://learnenough.com/" target="_blank" rel="noopener">series of tutorials</a> designed to teach the common foundations of “computer magic” (<a href="https://www.learnenough.com/command-line-tutorial#aside-computer_magic" class="hyperref">Box&nbsp;<span class="ref">1</span></a>) to as broad an audience as possible.<span class="intersentencespace"></span> It is aimed both at those who work with software developers and those who aspire to become developers themselves.<span class="intersentencespace"></span> Unlike most introductions to the command line, which typically assume a relatively high level of technical sophistication, <em>Learn Enough Command Line to Be Dangerous</em> assumes no prerequisites other than general computer knowledge (how to launch an application, how to use a web browser, how to <a href="http://lmgtfy.com/?q=learn+to+touch+type" target="_blank" rel="noopener">touch type</a>, etc.).<span class="intersentencespace"></span> Among other things, this means that it doesn’t assume you know <a href="http://learnenough.com/text-editor-tutorial" target="_blank" rel="noopener">how to use a text editor</a>, or even what a text editor is.<span class="intersentencespace"></span> Indeed, this tutorial doesn’t even assume you know what a <em>command line</em> is, so if you’re confused by the title, you’re still in the right place.<span class="intersentencespace"></span> Finally, even if you already know how to use the command line, following this tutorial (and doing the exercises) will help fill in any gaps in your knowledge, and might even teach you a few new things.</p>
 <div class="society-note">
<p><em>Note</em>: To get the most out of this tutorial, join the <a href="http://learnenough.com/story" target="_blank" rel="noopener">Learn Enough Society</a>, a subscription service from Learn Enough to Be Dangerous that includes integrated progress tracking, exercise answers, live chat, and streaming videos.<span class="intersentencespace"></span> See <a href="http://learnenough.com/story" target="_blank" rel="noopener">learnenough.com/story</a> for more information.<span class="intersentencespace"></span>  </p></div>
<div class="aside" id="aside-computer_magic" data-tralics-id="uid1" data-number="1"><div class="heading"><span class="number">Box 1.</span> 

<span class="description">The magic of computers</span></div>
<p>Computers may be as close as we get to <em>magic</em> in the real world: we type incantations into a machine, and—if the incantations are right—the machine does our bidding.<span class="intersentencespace"></span> To perform such magic, computer witches and wizards rely not only on words, but also on wands, potions, and an ancient tome or two.<span class="intersentencespace"></span> Taken together, these tricks of the trade are known as <em>software development</em>: computer programming, plus tools like <em>command lines</em>, <em>text editors</em>, and <em>version control</em>.<span class="intersentencespace"></span> Knowledge of these tools is perhaps the main dividing line between “technical” and “non-technical” people (or, to put it in magical terms, between magicians and <a href="https://en.wikipedia.org/wiki/Muggle" target="_blank" rel="noopener">Muggles</a>).<span class="intersentencespace"></span> The present tutorial represents the first step needed to cross this technical/non-technical divide.<span class="intersentencespace"></span> The resulting <em>technical sophistication</em> (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>) will make us software magicians—able to cast computer spells, and get the machine to do our bidding.</p>
<p>My name is <a href="http://www.michaelhartl.com/" target="_blank" rel="noopener">Michael Hartl</a>, and I am perhaps best known as the creator of the <a href="http://www.railstutorial.org/" target="_blank" rel="noopener">Ruby on Rails Tutorial</a>, a <a href="http://railstutorial.org/book" target="_blank" rel="noopener">book</a> and <a href="http://screencasts.railstutorial.org/" target="_blank" rel="noopener">screencast series</a> that together constitute one of the leading introductions to web development.<span class="intersentencespace"></span> (You may also know me, in my more mathematical mode, as the founder of <a href="http://tauday.com/" target="_blank" rel="noopener">Tau Day</a> and author of <a href="http://tauday.com/tau-manifesto" target="_blank" rel="noopener"><em>The Tau Manifesto</em></a>.)<span class="intersentencespace"></span> One of the most frequently asked questions about the Rails Tutorial is, “Is the Rails Tutorial good for complete beginners?”<span class="intersentencespace"></span> The answer is, “Not really.”<span class="intersentencespace"></span> While it is possible for complete beginners to learn web development with the Ruby on Rails Tutorial (and an impressively large number have), it can be challenging and occasionally frustrating, and I don’t generally recommend it.<span class="intersentencespace"></span> Instead, I recommend starting here.</p>

</div><p>Many programming tutorials either gloss over the command line or assume you already know how to use it.<span class="intersentencespace"></span> But understanding the basics of the command line is <em>absolutely essential</em> to becoming a skilled developer.<sup id="cha-0_footnote-ref-1" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-1" data-hasqtip="0">1</a></sup><span class="intersentencespace"></span> Indeed, if you look at the desktop of an experienced computer programmer, even on a system with a polished graphical user interface like macOS, you are likely to find a large number of “terminal windows”, each containing a series of commands at a command line (<a href="https://www.learnenough.com/command-line-tutorial#fig-dev_desktop" class="hyperref">Figure&nbsp;<span class="ref">1</span></a>).<span class="intersentencespace"></span> Proficiency at the command line is also useful for anyone who needs to <em>work</em> with developers, such as product managers, project managers, and designers.<span class="intersentencespace"></span> Making this essential component of technical sophistication accessible to as broad an audience as possible is the goal of <em>Learn Enough Command Line to Be Dangerous</em>.</p>
<div class="center figure" id="fig-dev_desktop" data-tralics-id="uid3" data-number="1">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/dev_desktop.png" alt="images/figures/dev_desktop"></div><div class="caption"><span class="header">Figure 1: </span><span class="description">Terminal windows on the desktop of an experienced developer.
</span></div></div>
<div id="sec-basics" data-tralics-id="cid1" class="section" data-number="1"><h2><a href="https://www.learnenough.com/command-line-tutorial#sec-basics" class="heading hyperref"><span class="number">1 </span>Basics</a></h2>
<p>As author <a href="https://en.wikipedia.org/wiki/Neal_Stephenson" target="_blank" rel="noopener">Neal Stephenson</a> famously <a href="http://www.cryptonomicon.com/beginning.html" target="_blank" rel="noopener">put it</a>, “In the Beginning was the Command Line.”<span class="intersentencespace"></span> Although a graphical user interface (GUI) can dramatically simplify computer use, in many contexts the most powerful and flexible way to interact with a computer is through a <em>command-line interface</em> (CLI).<span class="intersentencespace"></span> In such an interface, the <a href="http://tron.wikia.com/wiki/User" target="_blank" rel="noopener">user</a> types <em>commands</em> that tell the computer to perform desired tasks.<span class="intersentencespace"></span> These commands can then be combined in various ways to achieve a variety of outcomes.<span class="intersentencespace"></span> An example of a typical command-line command appears in <a href="https://www.learnenough.com/command-line-tutorial#fig-command_line_command" class="hyperref">Figure&nbsp;<span class="ref">2</span></a>.</p>
<div class="center figure" id="fig-command_line_command" data-tralics-id="uid4" data-number="2">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/command_line_command.png" alt="images/figures/command_line_command"></div><div class="caption"><span class="header">Figure 2: </span><span class="description">A prototypical command-line command.
</span></div></div>
<p>This tutorial covers the basics of the Unix command line, where <em>Unix</em> refers to a <a href="https://en.wikipedia.org/wiki/Unix" target="_blank" rel="noopener">family of operating systems</a> that includes Linux, Android, iOS (iPhone/iPad), and macOS.<sup id="cha-0_footnote-ref-2" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-2" data-hasqtip="1">2</a></sup><span class="intersentencespace"></span> Unix systems serve most of the software on the World Wide Web, run most mobile and tablet devices, and power many of the world’s desktop computers as well.<span class="intersentencespace"></span> As a result of Unix’s central role in modern computing, this tutorial covers the Unix way of developing software.<span class="intersentencespace"></span> The main exception to Unix’s dominance is Microsoft® Windows™, which is not part of the Unix tradition, but those who mostly develop using native Windows development tools will still benefit from learning the Unix command line.<span class="intersentencespace"></span> Among other things, at some point such users are likely to need to issue commands on a Unix server (e.g., via the “secure shell” command <code>ssh</code>), at which point familiarity with Unix commands becomes essential.<span class="intersentencespace"></span> As a result, Windows users are strongly encouraged to run a free <em>Linux virtual machine</em> (as described in <a href="https://www.learnenough.com/command-line-tutorial#aside-virtual_machine" class="hyperref">Box&nbsp;<span class="ref">2</span></a>) in order to get the most out of this tutorial.<span class="intersentencespace"></span> Another good option is to use a cloud IDE<sup id="cha-0_footnote-ref-3" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-3" data-hasqtip="2">3</a></sup> such as <a href="http://c9.io/" target="_blank" rel="noopener">Cloud9</a>; to go this route, follow the “<a href="https://www.railstutorial.org/book/beginning#sec-development_environment" target="_blank" rel="noopener">Development environment</a>” section in the <a href="http://railstutorial.org/book" target="_blank" rel="noopener"><em>Ruby on Rails Tutorial</em> book</a>.</p>
<p><em>Note</em>: Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-man_echo" class="hyperref">Table&nbsp;<span class="ref">2</span></a>.</p>
<div class="aside" id="aside-virtual_machine" data-tralics-id="uid7" data-number="2"><div class="heading"><span class="number">Box 2.</span> 

<span class="description">Running a virtual machine</span></div>
<p>In order to complete this tutorial, Windows users should install a couple of free programs to run a <em>virtual machine</em> (a simulation of a computer) that allows Windows to host a version of the Linux operating system.<span class="intersentencespace"></span> The steps appear as follows:</p>
<ol>
<li>Install the right version of <a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> for your system (free).<span class="intersentencespace"></span>
</li>
<li>Download the <a href="https://softcover-static.s3.amazonaws.com/LearnEnough-v.1.4.ova" target="_blank" rel="noopener">Learn Enough Virtual Machine</a> (large file).<span class="intersentencespace"></span>
</li>
<li>Once the download is complete, double-click the resulting “OVA” file and follow the instructions to install the Virtual Machine (VM).<span class="intersentencespace"></span>
</li>
<li>Double-click the VM itself and log in using the default user’s password, which is “<code class="tt">foobar!</code>”.<span class="intersentencespace"></span>
</li></ol>
<p>(Getting all these steps to work is a good exercise in <em>technical sophistication</em>, an idea we’ll develop further starting in <a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="hyperref">Section&nbsp;<span class="ref">1.3</span></a> (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>).)<span class="intersentencespace"></span> The result will be a Linux desktop environment (including a command-line terminal program) pre-configured for this tutorial, as shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-virtual_machine" class="hyperref">Figure&nbsp;<span class="ref">3</span></a>.</p>
<p>In the longer run, I recommend switching to a Mac as soon as possible.<span class="intersentencespace"></span> You might have to save up a bit, as Macs are generally more expensive than Windows machines, but in most cases the increased productivity will quickly pay for the difference.<span class="intersentencespace"></span> (If you find yourself liking Linux, feel free to stick with it, but Macs are generally easier to use with a better user interface.<span class="intersentencespace"></span> Plus, you can always run Linux inside a VM, even on a Mac.)<span class="intersentencespace"></span></p>

</div><div class="center figure" id="fig-virtual_machine" data-tralics-id="uid12" data-number="3">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/virtual_machine.png" alt="images/figures/virtual_machine"></div><div class="caption"><span class="header">Figure 3: </span><span class="description">A Linux virtual machine running inside a host OS.
</span></div></div>
<div id="sec-running_a_terminal" data-tralics-id="uid13" class="subsection" data-number="1.1"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-running_a_terminal" class="heading hyperref"><span class="number">1.1 </span>Running a terminal</a></h3>
<p>To run a command-line command, we first need to start a <em>terminal</em>, which is the program that gives us a command line.<span class="intersentencespace"></span> On macOS, you can open a terminal window using the macOS application <a href="https://support.apple.com/en-us/HT204014" target="_blank" rel="noopener"><em>Spotlight</em></a>, which you can launch either by typing ⌘␣ (Command-space) or by clicking on the magnifying glass in the upper right part of your screen.<span class="intersentencespace"></span> Once you’ve launched Spotlight, you can start a terminal program by typing “terminal” in the Spotlight Search bar.<span class="intersentencespace"></span> (If you are interested in using a more advanced and customizable terminal program, I recommend installing <a href="https://www.iterm2.com/" target="_blank" rel="noopener">iTerm</a>, but this step is optional.)<span class="intersentencespace"></span> On Linux, you can click the terminal icon as shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-virtual_machine" class="hyperref">Figure&nbsp;<span class="ref">3</span></a>.<span class="intersentencespace"></span> The result should be something like <a href="https://www.learnenough.com/command-line-tutorial#fig-terminal_window" class="hyperref">Figure&nbsp;<span class="ref">4</span></a>, although the exact details on your system will likely differ.<span class="intersentencespace"></span> If you’re using a different OS, I recommend applying your technical sophistication (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>) to figure how to open a terminal on your system; for example, to learn how to open a command-line terminal on a <a href="https://www.google.com/chromebook/" target="_blank" rel="noopener">Chromebook</a>, you could Google “<a href="http://lmgtfy.com/?q=how+to+get+a+command+line+on+a+chromebook" target="_blank" rel="noopener">how to get a command line on a chromebook</a>”.</p>
<div class="center figure" id="fig-terminal_window" data-tralics-id="uid14" data-number="4">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/terminal_window.png" alt="images/figures/terminal_window"></div><div class="caption"><span class="header">Figure 4: </span><span class="description">A terminal window.
</span></div></div>
<p>The example we saw in <a href="https://www.learnenough.com/command-line-tutorial#fig-command_line_command" class="hyperref">Figure&nbsp;<span class="ref">2</span></a> includes all of the typical elements of a command, as illustrated in <a href="https://www.learnenough.com/command-line-tutorial#fig-anatomy" class="hyperref">Figure&nbsp;<span class="ref">5</span></a>: the <em>prompt</em> followed by a <em>command</em> (as in “give the computer a command”), an <em>option</em> (as in “choose a different option”), and an <em>argument</em> (as in the “<a href="https://en.wikipedia.org/wiki/Argument_of_a_function" target="_blank" rel="noopener">argument of a function</a>” in mathematics).<sup id="cha-0_footnote-ref-4" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-4" data-hasqtip="3">4</a></sup><span class="intersentencespace"></span> It’s essential to understand that the prompt is supplied automatically by the terminal, and you do not need to type it.<span class="intersentencespace"></span> (Indeed, if you do type it, it will likely result in an error.)<span class="intersentencespace"></span> Moreover, the exact details of the prompt will differ, and are not important for the purposes of this tutorial (<a href="https://www.learnenough.com/command-line-tutorial#aside-prompt" class="hyperref">Box&nbsp;<span class="ref">3</span></a>).</p>
<div class="center figure" id="fig-anatomy" data-tralics-id="uid16" data-number="5">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/anatomy.png" alt="images/figures/anatomy"></div><div class="caption"><span class="header">Figure 5: </span><span class="description">Anatomy of a command line.<span class="intersentencespace"></span> (Your prompt may differ.)<span class="intersentencespace"></span> 
</span></div></div>
<div class="aside" id="aside-prompt" data-tralics-id="uid17" data-number="3"><div class="heading"><span class="number">Box 3.</span> 

<span class="description">What is the prompt?</span></div>
<p>Every command line starts with some symbol or symbols designed to “prompt” you to action.<span class="intersentencespace"></span> The prompt usually ends with a dollar sign&nbsp;<code class="inline_verbatim">$</code>, and is preceded by information that depends on the details of your system.<span class="intersentencespace"></span> For example, on some systems the prompt might look like this:
</p><pre> Michael's MacBook Air:~ mhartl$</pre>
<p>In <a href="https://www.learnenough.com/command-line-tutorial#fig-terminal_window" class="hyperref">Figure&nbsp;<span class="ref">4</span></a>, the prompt looks like this instead:
</p><pre> [~]$</pre>
<p>and in <a href="https://www.learnenough.com/command-line-tutorial#fig-anatomy" class="hyperref">Figure&nbsp;<span class="ref">5</span></a> it looks like this:</p>
<pre> [projects]$</pre>
<p>Finally, the prompt I’m looking at right now looks like this:
</p><pre> [learn_enough_command_line (master)]$</pre>
<p>For the purposes of this tutorial, the details of the prompt are not important, but we will discuss useful ways to customize the prompt starting in the next tutorial after this one (<a href="http://learnenough.com/text-editor-tutorial" target="_blank" rel="noopener"><em>Learn Enough Text Editor to Be Dangerous</em></a>).<span class="intersentencespace"></span></p>

</div>
<div id="sec-exercises_terminal" data-tralics-id="uid18" class="subsubsection" data-number="1.1.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_terminal" class="heading">Exercises</a></h4>
<p><em>Learn Enough Command Line to Be Dangerous</em> includes a large number of exercises.<span class="intersentencespace"></span> I strongly recommend getting in the habit of attempting them before moving on to the next section, as they reinforce the material we’ve just covered and will give you essential practice in using the many commands discussed.<span class="intersentencespace"></span> It’s not generally the case that they are <em>required</em> to proceed, though, so if you get stuck it’s sometimes a good idea to continue forward and then revisit the exercise at a later time.<span class="intersentencespace"></span> Indeed, this is good advice for the main text as well—you’ll be surprised how often a seemingly impossible idea or intractable problem will look easy the second time around.</p>
 <div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>By referring to <a href="https://www.learnenough.com/command-line-tutorial#fig-anatomy" class="hyperref">Figure&nbsp;<span class="ref">5</span></a>, identify the prompt, command, options, arguments, and cursor in each line of <a href="https://www.learnenough.com/command-line-tutorial#fig-command_exercise" class="hyperref">Figure&nbsp;<span class="ref">6</span></a>.<span class="intersentencespace"></span>  <span class="exercise" id="ex-terminal_tabs"></span>
</li>
<li>Most modern terminal programs have the ability to create multiple <em>tabs</em> (<a href="https://www.learnenough.com/command-line-tutorial#fig-terminal_tabs" class="hyperref">Figure&nbsp;<span class="ref">7</span></a>), which are useful for organizing a set of related terminal windows.<sup id="cha-0_footnote-ref-5" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-5" data-hasqtip="4">5</a></sup><span class="intersentencespace"></span> By examining the menu items for your terminal program (<a href="https://www.learnenough.com/command-line-tutorial#fig-terminal_menu" class="hyperref">Figure&nbsp;<span class="ref">8</span></a>), figure out how to create a new tab.<span class="intersentencespace"></span> <em>Extra credit</em>: Learn the keyboard shortcut for creating a new tab.<span class="intersentencespace"></span> (Learning keyboard shortcuts for your system is an excellent habit to cultivate.)<span class="intersentencespace"></span>  <span class="exercise" id="ex-new_tab"></span>
</li></ol>
<div class="center figure" id="fig-command_exercise" data-tralics-id="uid22" data-number="6">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/command_exercise.png" alt="images/figures/command_exercise"></div><div class="caption"><span class="header">Figure 6: </span><span class="description">A series of typical commands.
</span></div></div>
<div class="center figure" id="fig-terminal_tabs" data-tralics-id="uid23" data-number="7">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/terminal_tabs.png" alt="images/figures/terminal_tabs"></div><div class="caption"><span class="header">Figure 7: </span><span class="description">A terminal window with three tabs.
</span></div></div>
<div class="center figure" id="fig-terminal_menu" data-tralics-id="uid24" data-number="8">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/terminal_menu.png" alt="images/figures/terminal_menu"></div><div class="caption"><span class="header">Figure 8: </span><span class="description">Some menu items for the default macOS terminal.
</span></div></div>
</div></div>
<div id="sec-our_first_command" data-tralics-id="uid25" class="subsection" data-number="1.2"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-our_first_command" class="heading hyperref"><span class="number">1.2 </span>Our first command</a></h3>
<p>We are now prepared to run our first command, which prints the word “hello” to the screen.<span class="intersentencespace"></span> (The place where characters get printed is known as “standard out”, which is usually just the screen, and rarely refers to a physical printer.)<span class="intersentencespace"></span> The command is <code>echo</code>, and the argument is the string of characters—or simply <em>string</em> for short—that we want to print.<span class="intersentencespace"></span> To run the <code>echo</code> command, type “echo hello” at the prompt, and then press the Return key (also called Enter):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo </span>hello
<span class="go">hello</span>
<span class="gp">$</span>
</pre></div></div>
<p>(I recommend always typing the commands out yourself, which will let you learn more than if you rely on copying and pasting.)<span class="intersentencespace"></span> Here we see that <code>echo hello</code> prints “hello” and then returns another prompt.<span class="intersentencespace"></span> Note that, for brevity, I’ve omitted all characters in the prompt except the dollar sign&nbsp;<code>$</code>.</p>
<p>Just to make the pattern clear, let’s try a second <code>echo</code> command:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"goodbye"</span>
<span class="go">goodbye</span>
<span class="gp">$</span> <span class="nb">echo</span> <span class="s1">'goodbye'</span>
<span class="go">goodbye</span>
<span class="gp">$</span>
</pre></div></div>
<p>Note here that we’ve wrapped “goodbye” in quotation marks—and we also see that we can use either double quotes, as in <code>"goodbye"</code>, or single quotes, as in <code>’goodbye’</code>.<span class="intersentencespace"></span> Such quotes can be used to group strings visually, though in many contexts they are not required by <code>echo</code> (<a href="https://www.learnenough.com/command-line-tutorial#code-hello_goodbye" class="hyperref">Listing&nbsp;<span class="ref">1</span></a>).<sup id="cha-0_footnote-ref-6" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-6" data-hasqtip="5">6</a></sup></p>
<div class="codelisting" id="code-hello_goodbye" data-tralics-id="uid27" data-number="1"><div class="heading"><span class="number">Listing 1:</span> 

<span class="description">Printing “hello, goodbye” two different ways.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo </span>hello, goodbye
<span class="go">hello, goodbye</span>
<span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"hello, goodbye"</span>
<span class="go">hello, goodbye</span>
<span class="gp">$</span>
</pre></div></div></div><p>One thing that can happen when using quotes is accidentally not matching them, as follows:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="err">"</span>hello, goodbye
<span class="gp">&gt;</span>
</pre></div></div>
<p>At this point, it seems we’re stuck.<span class="intersentencespace"></span> There are specific ways out of this quandary (in fact, in this case you can just add a closing quote and hit return), but it’s good to have a general strategy for getting out of trouble (<a href="https://www.learnenough.com/command-line-tutorial#fig-cat_in_box" class="hyperref">Figure&nbsp;<span class="ref">9</span></a>).<sup id="cha-0_footnote-ref-7" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-7" data-hasqtip="6">7</a></sup><span class="intersentencespace"></span> This strategy is called “Ctrl-C” (<a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a>).</p>
<div class="center figure" id="fig-cat_in_box" data-tralics-id="uid29" data-number="9">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/cat_in_box.png" alt="images/figures/cat_in_box"></div><div class="caption"><span class="header">Figure 9: </span><span class="description">This cat appears to be stuck and should probably hit <code>Ctrl-C</code>.
</span></div></div>
<div class="aside" id="aside-getting_out_of_trouble" data-tralics-id="uid30" data-number="4"><div class="heading"><span class="number">Box 4.</span> 

<span class="description">Getting out of trouble</span></div>
<p>When using the command line, there are lots of things that can get you in trouble, by which I mean the terminal will just hang or otherwise end up in a state that makes entering further commands difficult or impossible.<span class="intersentencespace"></span> Here are some examples of such commands:</p>
<pre> $ echo "hello</pre>
<pre> $ grep foobar</pre>
<pre> $ yes</pre>
<pre> $ tail</pre>
<pre> $ cat</pre>
<p>In every case, the solution is the same: hit <code class="tt">Ctrl-C</code> (pronounced “control-see”).<span class="intersentencespace"></span> Here <code class="tt">Ctrl</code> refers to the “control” key on your keyboard, and <code class="tt">C</code> refers to the key labeled “C”.<span class="intersentencespace"></span> <code class="tt">Ctrl-C</code> thus means “While holding down the control key, press C.”<span class="intersentencespace"></span> In particular, <code class="tt">C</code> does <em>not</em> refer to the capital letter&nbsp;C, so you should not press Shift in addition to Ctrl.<span class="intersentencespace"></span> (<code class="tt">Ctrl-C</code> sends a <em>control code</em> to the terminal and has nothing to do with producing a capital C when typing normal text.)<span class="intersentencespace"></span> The result of typing <code class="tt">Ctrl-C</code> is sometimes written as <code class="inline_verbatim">⌃C</code>, like this:</p>
<pre> $ tail
 ^C</pre>
<p>The <a href="https://en.wikipedia.org/wiki/Control-C" target="_blank" rel="noopener">origins of <code class="tt">Ctrl-C</code></a> are somewhat obscure, but as a mnemonic I like to think of it as meaning “cancel”.<span class="intersentencespace"></span> However you remember it, <em>do</em> remember it: when you get into trouble at the command line, your best bet is usually to hit <code class="tt">Ctrl-C</code>.</p>
<p><em>Note</em>: When <code class="tt">Ctrl-C</code> fails, 90% of the time hitting <code class="tt">ESC</code> (escape) will do the trick.<span class="intersentencespace"></span></p>

</div>
<div id="sec-exercises_first_command" data-tralics-id="uid31" class="subsubsection" data-number="1.2.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_first_command" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Write a command that prints out the string “hello, world”.<span class="intersentencespace"></span> <em>Extra credit</em>: As in <a href="https://www.learnenough.com/command-line-tutorial#code-hello_goodbye" class="hyperref">Listing&nbsp;<span class="ref">1</span></a>, do it two different ways, both with and without using quotation marks. <span class="exercise" id="ex-hello-world"></span>
</li>
<li>Type the command <code>echo ’hello</code> (with a mismatched single quote), and then get out of trouble using the technique from <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a>. <span class="exercise" id="ex-echo-hello"></span>
</li></ol>
</div></div>
<div id="sec-man_pages" data-tralics-id="uid34" class="subsection" data-number="1.3"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="heading hyperref"><span class="number">1.3 </span>Man pages</a></h3>
<p>The program we’re using to run a command line, which is technically known as a <em>shell</em>,<sup id="cha-0_footnote-ref-8" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-8" data-hasqtip="7">8</a></sup> includes a powerful (though often cryptic) tool to learn more about available commands.<span class="intersentencespace"></span> This tool is itself a command-line command called <code>man</code> (short for “manual”).<span class="intersentencespace"></span> Its argument is the name of the command (such as <code>echo</code>) that we want to learn more about.<span class="intersentencespace"></span> The details are system-dependent, but on my system the result of running <code>man echo</code> appears as in <a href="https://www.learnenough.com/command-line-tutorial#code-man_echo" class="hyperref">Listing&nbsp;<span class="ref">2</span></a>.</p>
<div class="codelisting" id="code-man_echo" data-tralics-id="uid36" data-number="2"><div class="heading"><span class="number">Listing 2:</span> 

<span class="description">The result of running <code>man echo</code>.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> man <span class="nb">echo</span>
<span class="go">ECHO(1)          BSD General Commands Manual         ECHO(1)</span>

<span class="go">NAME</span>
<span class="go">   echo -- write arguments to the standard output</span>

<span class="go">SYNOPSIS</span>
<span class="go">   echo [-n] [string ...]</span>

<span class="go">DESCRIPTION</span>
<span class="go">   The echo utility writes any specified operands, separated by single blank</span>
<span class="go">   (` ') characters and followed by a newline (`\n') character, to the stan-</span>
<span class="go">   dard output.</span>

<span class="go">   The following option is available:</span>

<span class="go">   -n  Do not print the trailing newline character. This may also be</span>
<span class="go">      achieved by appending `\c' to the end of the string, as is done by</span>
<span class="go">      iBCS2 compatible systems. Note that this option as well as the</span>
<span class="go">      effect of `\c' are implementation-defined in IEEE Std 1003.1-2001</span>
<span class="go">      (``POSIX.1'') as amended by Cor. 1-2002. Applications aiming for</span>
<span class="go">      maximum portability are strongly encouraged to use printf(1) to</span>
<span class="go">      suppress the newline character.</span>
<span class="hll"><span class="go">:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
</span></pre></div></div></div><p>On the last line of <a href="https://www.learnenough.com/command-line-tutorial#code-man_echo" class="hyperref">Listing&nbsp;<span class="ref">2</span></a>, note the presence of a colon&nbsp;<code>:</code>, which indicates that there is more information below.<span class="intersentencespace"></span> The details of this last line are system-dependent, but on any system you should be able to access subsequent information one line at a time by pressing the down arrow key, or one page at a time by pressing the spacebar.<span class="intersentencespace"></span> To exit the man page, press “q” (for “quit”).<span class="intersentencespace"></span> (This interface to the man pages is the same as for the <code>less</code> program, which we’ll learn about in <a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="hyperref">Section&nbsp;<span class="ref">3.3</span></a>.)</p>
<div class="center figure" id="fig-man_to_man" data-tralics-id="uid37" data-number="10">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/man_to_man.jpg" alt="images/figures/man_to_man"></div><div class="caption"><span class="header">Figure 10: </span><span class="description">Applying <code>man</code> to <code>man</code>.
</span></div></div>
<p>Because <code>man</code> itself is a command, we can apply <code>man</code> to <code>man</code> (<a href="https://www.learnenough.com/command-line-tutorial#fig-man_to_man" class="hyperref">Figure&nbsp;<span class="ref">10</span></a>),<sup id="cha-0_footnote-ref-9" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-9" data-hasqtip="8">9</a></sup> as shown in <a href="https://www.learnenough.com/command-line-tutorial#code-man_man" class="hyperref">Listing&nbsp;<span class="ref">3</span></a>.</p>
<div class="codelisting" id="code-man_man" data-tralics-id="uid39" data-number="3"><div class="heading"><span class="number">Listing 3:</span> 

<span class="description">The result of running <code>man man</code>.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> man man
<span class="go">man(1)                                 man(1)</span>

<span class="go">NAME</span>
<span class="go">    man - format and display the on-line manual pages</span>

<span class="go">SYNOPSIS</span>
<span class="go">    man [-acdfFhkKtwW] [--path] [-m system] [-p string] [-C config_file]</span>
<span class="go">    [-M pathlist] [-P pager] [-B browser] [-H htmlpager] [-S section_list]</span>
<span class="go">    [section] name ...</span>

<span class="go">DESCRIPTION</span>
<span class="go">    man formats and displays the on-line manual pages. If you specify sec-</span>
<span class="go">    tion, man only looks in that section of the manual. name is normally</span>
<span class="go">    the name of the manual page, which is typically the name of a command,</span>
<span class="go">    function, or file. However, if name contains a slash (/) then man</span>
<span class="go">    interprets it as a file specification, so that you can do man ./foo.5</span>
<span class="go">    or even man /cd/foo/bar.1.gz.</span>

<span class="go">    See below for a description of where man looks for the manual page</span>
<span class="go">    files.</span>

<span class="go">OPTIONS</span>
<span class="go">    -C config_file</span>
<span class="go">:</span>
</pre></div></div></div><p>We can see from <a href="https://www.learnenough.com/command-line-tutorial#code-man_man" class="hyperref">Listing&nbsp;<span class="ref">3</span></a> that the synopsis of <code>man</code> looks something like this:</p>
<div class="code"><div class="highlight"><pre>man [-acdfFhkKtwW] [--path] [-m system] [-p string] ...
</pre></div></div>
<p>This is what I meant above when I described man pages as “often cryptic”.<span class="intersentencespace"></span> Indeed, in many cases I find the details of man pages to be almost impossible to understand, but being able to scan over the man page to get a high-level overview of a command is a valuable skill, one worth acquiring.<span class="intersentencespace"></span> To get used to reading man pages, I recommend running <code>man &lt;command name&gt;</code> when encountering a new command.<span class="intersentencespace"></span> Even if the details aren’t entirely clear, reading the man pages will help develop the valuable skill of <em>technical sophistication</em> (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>).<sup id="cha-0_footnote-ref-10" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-10" data-hasqtip="9">10</a></sup></p>
<div class="aside" id="aside-technical_sophistication" data-tralics-id="uid41" data-number="5"><div class="heading"><span class="number">Box 5.</span> 

<span class="description">Technical sophistication</span></div>
<p>In mathematics, many subjects can be developed by applying pure deduction to a small number of assumptions, or <em>axioms</em>; examples include algebra, geometry, number theory, and analysis.<span class="intersentencespace"></span> As a result, such subjects are completely self-contained, and thus have no formal prerequisites—in principle, even a small child could learn them.<span class="intersentencespace"></span> In practice, though, something else is required, and mathematicians often recommend the informal prerequisite of <em>mathematical maturity</em>, which consists of the experience and general sophistication needed to understand and write mathematical proofs.</p>
<p>In technology, a similar skill (or, more accurately, set of skills) exists in the form of <em>technical sophistication</em>.<span class="intersentencespace"></span> In addition to “hard skills” like familiarity with text editors and the Unix command line, technical sophistication includes “soft skills” like looking for promising menu items and knowing the kinds of search terms to drop into Google (<a href="https://www.learnenough.com/command-line-tutorial#fig-tech_support_cheat_sheet" class="hyperref">Figure&nbsp;<span class="ref">11</span></a>), along with an <em>attitude</em> of doing what it takes to make the machine do our bidding (<a href="https://www.learnenough.com/command-line-tutorial#aside-computer_magic" class="hyperref">Box&nbsp;<span class="ref">1</span></a>).<span class="intersentencespace"></span> These soft skills, and this attitude, are hard to teach directly, so as you progress through this and subsequent <a href="http://learnenough.com/" target="_blank" rel="noopener">Learn Enough tutorials</a> you should always be on the lookout for opportunities to increase your technical sophistication (such as, for example, learning how to get the gist of a program by scanning its man page (<a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="hyperref">Section&nbsp;<span class="ref">1.3</span></a>)).<span class="intersentencespace"></span> Over time, the cumulative effect will be that, like the author of <a href="https://www.learnenough.com/command-line-tutorial#fig-tech_support_cheat_sheet" class="hyperref">Figure&nbsp;<span class="ref">11</span></a>, you’ll have the seemingly magical ability to do everything in every program.</p>
<p>By the way, <a href="https://www.learnenough.com/command-line-tutorial#fig-tech_support_cheat_sheet" class="hyperref">Figure&nbsp;<span class="ref">11</span></a> is missing three important techniques for solving common problems:</p>
<ol>
<li>Have you restarted the application?<span class="intersentencespace"></span>
</li>
<li>Have you rebooted the device?<span class="intersentencespace"></span>
</li>
<li>Have you tried uninstalling and reinstalling the app?<span class="intersentencespace"></span>
</li></ol>
<p>#2 alone probably solves 90% of unexplained computer errors.</p>

</div><div class="center figure" id="fig-tech_support_cheat_sheet" data-tralics-id="uid45" data-number="11">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/tech_support_cheat_sheet.png" alt="images/figures/tech_support_cheat_sheet"></div><div class="caption"><span class="header">Figure 11: </span><span class="description">“<a href="https://m.xkcd.com/627/" target="_blank" rel="noopener">Tech Support Cheat Sheet</a>” (via <a href="http://xkcd.com/" target="_blank" rel="noopener">xkcd</a>).<span class="intersentencespace"></span> See <a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a> for three extra techniques.
</span></div></div>
<div id="sec-exercises_man" data-tralics-id="uid46" class="subsubsection" data-number="1.3.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_man" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>According to the man page, what are the official short and long descriptions of <code>echo</code> on your system? <span class="exercise" id="ex-man-echo"></span>
</li>
<li>As seen in <a href="https://www.learnenough.com/command-line-tutorial#code-hello_goodbye" class="hyperref">Listing&nbsp;<span class="ref">1</span></a>, by default the <code>echo</code> command prints its argument to the screen and then puts the new prompt on a new line.<span class="intersentencespace"></span> The way it does this is by appending a special character called a <a href="https://en.wikipedia.org/wiki/Newline" target="_blank" rel="noopener"><em>newline</em></a> (a special character that literally puts the string on a new line, written in many contexts as “backslash n”&nbsp;<code class="inline_verbatim">\n</code>).<span class="intersentencespace"></span> Because <code>echo</code> is often used in programs to print out a sequence of strings <em>not</em> separated by newlines, there is a special command-line option to prevent the newline from being inserted.
<p>By reading the man page for <code>echo</code>, determine the command needed to print out “hello” <em>without</em> the trailing newline, and verify using your terminal that it works as expected.<span class="intersentencespace"></span> <em>Hints</em>: To determine the placement of the command-line option, it may help to refer to <a href="https://www.learnenough.com/command-line-tutorial#fig-anatomy" class="hyperref">Figure&nbsp;<span class="ref">5</span></a>.<span class="intersentencespace"></span> By comparing your result with <a href="https://www.learnenough.com/command-line-tutorial#code-with_newline" class="hyperref">Listing&nbsp;<span class="ref">4</span></a> and <a href="https://www.learnenough.com/command-line-tutorial#code-without_newline" class="hyperref">Listing&nbsp;<span class="ref">5</span></a>, you should be able to verify that you’ve used the option properly.<span class="intersentencespace"></span> (<em>Note</em>: This exercise may fail when using the default terminal program on some older versions of macOS.<span class="intersentencespace"></span> In this case, I recommend installing <a href="https://www.iterm2.com/" target="_blank" rel="noopener">iTerm</a> (which isn’t a bad idea anyway).) <span class="exercise" id="ex-man-echo-hello"></span></p>
</li></ol>
<div class="codelisting" id="code-with_newline" data-tralics-id="uid49" data-number="4"><div class="heading"><span class="number">Listing 4:</span> 

<span class="description">The result of running <code>echo</code> with a newline (without option).</span>
</div>

<div class="code"><div class="highlight"><pre><span class="go">hello</span>
<span class="go">[~]$</span>
</pre></div></div></div><div class="codelisting" id="code-without_newline" data-tralics-id="uid50" data-number="5"><div class="heading"><span class="number">Listing 5:</span> 

<span class="description">The result of running <code>echo</code> without a newline (<em>with</em> option).</span>
</div>

<div class="code"><div class="highlight"><pre><span class="go">hello[~]$</span>
</pre></div></div></div></div></div>
<div id="sec-editing_the_line" data-tralics-id="uid51" class="subsection" data-number="1.4"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-editing_the_line" class="heading hyperref"><span class="number">1.4 </span>Editing the line</a></h3>
<p>Command lines include several features to make it easy to repeat previous commands, possibly in edited form.<span class="intersentencespace"></span> These and many other command-line features often involve special keys on the keyboard, so for reference <a href="https://www.learnenough.com/command-line-tutorial#table-keyboard_symbols" class="hyperref">Table&nbsp;<span class="ref">1</span></a> shows these symbols for the various keys on a typical Macintosh keyboard.<span class="intersentencespace"></span> Apply your technical sophistication (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>) if your keyboard differs.</p>
<div id="table-keyboard_symbols" data-tralics-id="uid52" data-number="1" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Key</strong></td>
<td class="align_left"><strong>Symbol</strong></td>
</tr><tr><td class="align_left">Command</td>
<td class="align_left">⌘</td>
</tr><tr><td class="align_left">Control</td>
<td class="align_left">⌃</td>
</tr><tr><td class="align_left">Shift</td>
<td class="align_left">⇧</td>
</tr><tr><td class="align_left">Option</td>
<td class="align_left">⌥</td>
</tr><tr><td class="align_left">Up, down, left, right</td>
<td class="align_left">↑ ↓ ← →</td>
</tr><tr><td class="align_left">Enter/Return</td>
<td class="align_left">↵</td>
</tr><tr><td class="align_left">Tab</td>
<td class="align_left">⇥</td>
</tr><tr><td class="align_left">Delete</td>
<td class="align_left">⌫</td>
</tr></tbody></table><div class="caption"><span class="header">Table 1: </span><span class="description">Miscellaneous keyboard symbols.
</span></div></div>
<p>One of the most useful ways to edit the line is to “up arrow”&nbsp;↑, which simply retrieves the previous command.<span class="intersentencespace"></span> Pressing up arrow again moves further up the list of commands, while “down arrow”&nbsp;↓ goes back toward the bottom.</p>
<p>Other common ways to edit the line use the control key, which (as we saw in <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a>) is usually written as <code>Ctrl</code> or&nbsp;<code>⌃</code>.<span class="intersentencespace"></span> For example, when typing a new command, or dealing with a previous command, it is often convenient to be able to move quickly within the line.<span class="intersentencespace"></span> Suppose we typed</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> goodbye
</pre></div></div>
<p>only to realize that we wanted to put <code>echo</code> in front of it.<span class="intersentencespace"></span> We could use the left arrow key&nbsp;← to get to the beginning of the line, but it’s easier to type <code>⌃A</code>, which takes us there immediately.<span class="intersentencespace"></span> Similarly, <code>⌃E</code> moves to the end of the line.<sup id="cha-0_footnote-ref-11" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-11" data-hasqtip="10">11</a></sup><span class="intersentencespace"></span> Finally, <code>⌃U</code> clears to the beginning of the line and lets us start over.</p>
<p>The combination of <code>⌃A</code>, <code>⌃E</code>, and <code>⌃U</code> will work on most systems, but they don’t do you much good if you’re editing a longer line, such as this one containing the first line of <a href="http://www.shakespeares-sonnets.com/sonnet/1" target="_blank" rel="noopener">Sonnet 1 by William Shakespeare</a> (<a href="https://www.learnenough.com/command-line-tutorial#code-sonnet_1" class="hyperref">Listing&nbsp;<span class="ref">6</span></a>).</p>
<div class="codelisting" id="code-sonnet_1" data-tralics-id="uid54" data-number="6"><div class="heading"><span class="number">Listing 6:</span> 

<span class="description">Printing the first line of Shakespeare’s first sonnet.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"From fairest creatures we desire increase,"</span>
</pre></div></div></div><p>Suppose we wanted to change “From” to “FRom” to more closely match the text from the original sonnet (<a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a>).<sup id="cha-0_footnote-ref-12" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-12" data-hasqtip="11">12</a></sup><span class="intersentencespace"></span> We could type <code>⌃A</code> followed by the right arrow key a few times, but on some systems it’s possible to move directly to the desired spot by combining the keyboard and mouse via Option-click.<span class="intersentencespace"></span> That is, you can hold down the Option key on your keyboard (if it exists),<sup id="cha-0_footnote-ref-13" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-13" data-hasqtip="12">13</a></sup> and then click with the mouse pointer on the place in the command where you want the cursor.<span class="intersentencespace"></span> This would let us move right to the “o” in “From”, allowing us to delete the “r” and yielding <a href="https://www.learnenough.com/command-line-tutorial#code-sonnet_1_edited" class="hyperref">Listing&nbsp;<span class="ref">7</span></a> directly.</p>
<div class="center figure" id="fig-sonnet_1" data-tralics-id="uid57" data-number="12">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/Sonnet_1.jpg" alt="images/figures/Sonnet_1"></div><div class="caption"><span class="header">Figure 12: </span><span class="description">The original appearance of Shakespeare’s first sonnet.
</span></div></div>
<div class="codelisting" id="code-sonnet_1_edited" data-tralics-id="uid58" data-number="7"><div class="heading"><span class="number">Listing 7:</span> 

<span class="description">The result of editing a longer command-line command.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"FRom fairest creatures we desire increase,"</span>
</pre></div></div></div><p>I usually move around the command line with a combination of <code>⌃A</code>, <code>⌃E</code>, and right &amp; left arrow keys, but for longer commands Option-click can be a big help.<span class="intersentencespace"></span> (I also frequently change my mind about the exact command I’m typing, in which case I usually find that hitting <code>⌃U</code> and starting over again is the fastest way to proceed.)</p>
<div id="sec-exercises_editing_the_line" data-tralics-id="uid59" class="subsubsection" data-number="1.4.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_editing_the_line" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Using the up arrow, print to the screen the strings “fee”, “fie”, “foe”, and “fum” without retyping <code>echo</code> each time. <span class="exercise" id="ex-up-arrow"></span>
</li>
<li>Starting with the line in <a href="https://www.learnenough.com/command-line-tutorial#code-sonnet_1" class="hyperref">Listing&nbsp;<span class="ref">6</span></a>, use any combination of <code>⌃A</code>, <code>⌃E</code>, arrow keys, or Option-click to change the occurrences of the short s to the archaic <a href="https://en.wikipedia.org/wiki/Long_s" target="_blank" rel="noopener">long s</a> “ſ” in order to match the appearance of the original (<a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a>).<span class="intersentencespace"></span> In other words, the argument to <code>echo</code> should read “FRom faireſt creatures we deſire increaſe,”.<span class="intersentencespace"></span> <em>Hint</em>: It’s unlikely that your keyboard can produce “ſ” natively, so either copy it from the text of this tutorial or <a href="http://lmgtfy.com/?q=unicode+long+s" target="_blank" rel="noopener">Google for it</a> and copy it from the Internet.<span class="intersentencespace"></span> (If you have trouble copying and pasting into your terminal, I suggest applying the ideas in <a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a> to figure out how to do it on your system.) <span class="exercise" id="ex-archaic"></span>
</li></ol>
</div></div>
<div id="sec-cleaning_up" data-tralics-id="uid62" class="subsection" data-number="1.5"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-cleaning_up" class="heading hyperref"><span class="number">1.5 </span>Cleaning up</a></h3>
<p>When using the command line, sometimes it’s convenient to be able to clean up by clearing the screen, which we can do with <code>clear</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> clear
</pre></div></div>
<p>A keyboard shortcut for this is <code>⌃L</code>.</p>
<p>Similarly, when we are done with a terminal window (or tab) and are ready to exit, we can use the <code>exit</code> command:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">exit</span>
</pre></div></div>
<p>A keyboard shortcut for this is <code>⌃D</code>.</p>
<div id="sec-exercises_cleaning" data-tralics-id="uid63" class="subsubsection" data-number="1.5.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_cleaning" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Clear the contents of the current tab. <span class="exercise" id="ex-clear-contents"></span>
</li>
<li>Open a new tab, execute <code>echo ’hello’</code>, and then exit. <span class="exercise" id="ex-new-tab"></span>
</li></ol>
</div></div>
<div id="sec-summary_cleaning" data-tralics-id="uid66" class="subsection" data-number="1.6"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-summary_cleaning" class="heading hyperref"><span class="number">1.6 </span>Summary</a></h3>
<p>Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-man_echo" class="hyperref">Table&nbsp;<span class="ref">2</span></a>.</p>
<div id="table-man_echo" data-tralics-id="uid67" data-number="2" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Command</strong></td>
<td class="align_left"><strong>Description</strong></td>
<td class="align_left"><strong>Example</strong></td>
</tr><tr><td class="align_left"><code class="tt">echo &lt;string&gt;</code></td>
<td class="align_left">Print string to screen</td>
<td class="align_left"><code>$ echo hello</code></td>
</tr><tr><td class="align_left"><code class="tt">man &lt;command&gt;</code></td>
<td class="align_left">Display manual page for command</td>
<td class="align_left"><code>$ man echo</code></td>
</tr><tr><td class="align_left"><code class="tt">⌃C</code></td>
<td class="align_left">Get out of trouble</td>
<td class="align_left"><code>$ tail</code><code class="inline_verbatim">^C</code></td>
</tr><tr><td class="align_left"><code class="tt">⌃A</code></td>
<td class="align_left">Move to beginning of line</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">⌃E</code></td>
<td class="align_left">Move to end of line</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">⌃U</code></td>
<td class="align_left">Delete to beginning of line</td>
<td class="align_left"></td>
</tr><tr><td class="align_left">Option-click</td>
<td class="align_left">Move cursor to location clicked</td>
<td class="align_left"></td>
</tr><tr><td class="align_left">Up &amp; down arrow</td>
<td class="align_left">Scroll through previous commands</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">clear</code> or <code class="tt">⌃L</code></td>
<td class="align_left">Clear screen</td>
<td class="align_left"><code>$ clear</code></td>
</tr><tr><td class="align_left"><code class="tt">exit</code> or <code class="tt">⌃D</code></td>
<td class="align_left">Exit terminal</td>
<td class="align_left"><code>$ exit</code></td>
</tr></tbody></table><div class="caption"><span class="header">Table 2: </span><span class="description">Important commands from <a href="https://www.learnenough.com/command-line-tutorial#sec-basics" class="hyperref">Section&nbsp;<span class="ref">1</span></a>.
</span></div></div>
<div id="sec-exercises_summary_basics" data-tralics-id="uid68" class="subsubsection" data-number="1.6.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_summary_basics" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Write a command to print the string <code>Use "man echo"</code>, <em>including</em> the quotes; i.e., take care not to print out <code>Use man echo</code> instead.<span class="intersentencespace"></span> <em>Hint</em>: Use double quotes in the inner string, and wrap the whole thing in single quotes. <span class="exercise" id="ex-command-man"></span>
</li>
<li>By running <code>man sleep</code>, figure out how to make the terminal “sleep” for 5 seconds, and execute the command to do so. <span class="exercise" id="ex-man-sleep"></span>
</li>
<li>Execute the command to sleep for 5000 seconds, realize that’s well over an hour, and then use the instructions from <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a> to get out of trouble. <span class="exercise" id="ex-out-of-trouble"></span>
</li></ol>
</div></div></div><div id="sec-manipulating_files" data-tralics-id="cid2" class="section" data-number="2"><h2><a href="https://www.learnenough.com/command-line-tutorial#sec-manipulating_files" class="heading hyperref"><span class="number">2 </span>Manipulating files</a></h2>
<p>Having covered how to run a basic command, we’re now ready to learn how to manipulate files, one of the most important tasks at the command line.<span class="intersentencespace"></span> Because this tutorial assumes no technical prerequisites, we’re not going to require any familiarity with programs designed to edit text.<span class="intersentencespace"></span> (Such programs, called <em>text editors</em>, are the subject of the next tutorial in the sequence, <a href="http://learnenough.com/text-editor-tutorial" target="_blank" rel="noopener"><em>Learn Enough Text Editor to Be Dangerous</em></a>.)<span class="intersentencespace"></span> This means that we’ll need to create files by hand at the command line.<span class="intersentencespace"></span> But this is a feature, not a bug (<a href="https://www.learnenough.com/command-line-tutorial#aside-speak_geek" class="hyperref">Box&nbsp;<span class="ref">6</span></a>), because learning to create files at the command line is a valuable skill in itself.</p>
<p><em>Note</em>: Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-manipulating_files" class="hyperref">Table&nbsp;<span class="ref">3</span></a>.</p>
<div class="aside" id="aside-speak_geek" data-tralics-id="uid72" data-number="6"><div class="heading"><span class="number">Box 6.</span> 

<span class="description">Learning to speak “geek”</span></div>
<p>One important part of learning software development is becoming familiar with the <a href="http://www.catb.org/~esr/faqs/hacker-howto.html" target="_blank" rel="noopener">hacker</a>, nerd, and geek culture from which much of it springs.<span class="intersentencespace"></span> For example, the phrase “It’s not a bug, it’s a feature” is a common way of recasting a seeming flaw as a virtue.<span class="intersentencespace"></span> As the Urban Dictionary <a href="http://www.urbandictionary.com/define.php?term=It%27s+not+a+bug%2C+it%27s+a+feature&amp;defid=6751775" target="_blank" rel="noopener">puts it</a>:</p>
<blockquote class="quotation"><p><strong>It’s not a bug, it’s a feature</strong></p>
<p>Excuse made by software developers when they try to convince the user that a flaw in their program is actually what it’s supposed to be doing.<span class="intersentencespace"></span></p>
</blockquote><p>The <a href="http://www.catb.org/jargon/html/" target="_blank" rel="noopener">Jargon File</a>, which includes an <a href="http://www.catb.org/jargon/html/go01.html" target="_blank" rel="noopener">enormous and entertaining lexicon</a> of hacker terms, expands on this theme in its entry on <a href="http://www.catb.org/jargon/html/F/feature.html" target="_blank" rel="noopener"><em>feature</em></a>:</p>
<blockquote class="quotation"><p>“Undocumented feature” is a common, allegedly humorous euphemism for a <a href="http://www.catb.org/jargon/html/B/bug.html" target="_blank" rel="noopener"><em>bug</em></a>.<span class="intersentencespace"></span> There’s a related joke that is sometimes referred to as the “one-question geek test”.<span class="intersentencespace"></span> You say to someone “I saw a Volkswagen Beetle today with a vanity license plate that read FEATURE”.<span class="intersentencespace"></span> If he/she laughs, he/she is a <a href="http://www.catb.org/jargon/html/G/geek.html" target="_blank" rel="noopener"><em>geek</em></a>.<span class="intersentencespace"></span></p>
</blockquote><p>The joke here is that, because “bug” is a common slang term for a Volkswagen Beetle, a Beetle with the vanity plate FEATURE is a real-life manifestation of “It’s not a bug, it’s a feature” (<a href="https://www.learnenough.com/command-line-tutorial#fig-bug_feature" class="hyperref">Figure&nbsp;<span class="ref">13</span></a>).</p>
<p>Even if you’re not a geek or nerd yourself, learning to “speak geek” will help you navigate both the technological landscape and the social world that surrounds it.</p>

</div><div class="center figure" id="fig-bug_feature" data-tralics-id="uid73" data-number="13">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/bug_feature.png" alt="images/figures/bug_feature"></div><div class="caption"><span class="header">Figure 13: </span><span class="description">It’s not a bug, it’s a feature.
</span></div></div>
<div id="sec-redirecting_and_appending" data-tralics-id="uid74" class="subsection" data-number="2.1"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-redirecting_and_appending" class="heading hyperref"><span class="number">2.1 </span>Redirecting and appending</a></h3>
<p>Let’s pick up (more or less) where we left off in <a href="https://www.learnenough.com/command-line-tutorial#sec-basics" class="hyperref">Section&nbsp;<span class="ref">1</span></a>, with an <code>echo</code> command to print out the first line of Shakespeare’s first sonnet (<a href="https://www.learnenough.com/command-line-tutorial#code-sonnet_1" class="hyperref">Listing&nbsp;<span class="ref">6</span></a>):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"From fairest creatures we desire increase,"</span>
<span class="go">From fairest creatures we desire increase,</span>
</pre></div></div>
<p>Our task now is to create a file containing this line.<span class="intersentencespace"></span> Even without the benefit of a text editor, it is possible to do this using the <em>redirect operator</em>&nbsp;<code>&gt;</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"From fairest creatures we desire increase,"</span> &gt; sonnet_1.txt
</pre></div></div>
<p>(Recall that you can use up arrow to retrieve the previous command rather than typing it from scratch.)<span class="intersentencespace"></span> Here the right angle bracket <code>&gt;</code> takes the string output from <code>echo</code> and redirects its contents to a file called <code>sonnet_1.txt</code>.</p>
<p>How can we tell if the redirect worked?<span class="intersentencespace"></span> We’ll learn some more advanced command-line tools for inspecting files in <a href="https://www.learnenough.com/command-line-tutorial#sec-inspecting_files" class="hyperref">Section&nbsp;<span class="ref">3</span></a>, but for now we’ll use the <code>cat</code> command, which simply dumps the contents of the file to the screen:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> cat sonnet_1.txt
<span class="go">From fairest creatures we desire increase,</span>
</pre></div></div>
<p>The name <code>cat</code> is short for “<a href="http://dictionary.reference.com/browse/concatenate" target="_blank" rel="noopener">concatenate</a>”, which is a hint that it can be used to combine the contents of multiple files, but the usage above (to dump the contents of a single file to the screen) is extremely common.<span class="intersentencespace"></span> Think of <code>cat</code> as a “quick-and-dirty” way to view the contents of a particular file (<a href="https://www.learnenough.com/command-line-tutorial#fig-cat" class="hyperref">Figure&nbsp;<span class="ref">14</span></a>).<sup id="cha-0_footnote-ref-14" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-14" data-hasqtip="13">14</a></sup></p>
<div class="center figure" id="fig-cat" data-tralics-id="uid76" data-number="14"><span class="graphics"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/cat.jpg" alt="cat"></span>
<div class="caption"><span class="header">Figure 14: </span><span class="description">Viewing a file with <code>cat</code>.
</span></div></div>
<p>In order to add the second line of the sonnet (in modernized spelling), we can use the <em>append operator</em>&nbsp;<code>&gt;&gt;</code> as follows:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"That thereby beauty's Rose might never die,"</span> &gt;&gt; sonnet_1.txt
</pre></div></div>
<p>This just adds the line to the end of the given file.<span class="intersentencespace"></span> As before, we can see the result using <code>cat</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> cat sonnet_1.txt
<span class="go">From fairest creatures we desire increase,</span>
<span class="go">That thereby beauty's Rose might never die,</span>
</pre></div></div>
<p>(To get to this command, I hope you just hit up arrow twice instead of retyping it.<span class="intersentencespace"></span> If so, you’re definitely getting the hang of this.)<span class="intersentencespace"></span> The result above shows that the double right angle bracket <code>&gt;&gt;</code> appended the string from <code>echo</code> to the file <code>sonnet_1.txt</code> as expected.</p>
<p>Modernized treatments of the <em>Sonnets</em> sometimes <a href="http://dictionary.reference.com/browse/emend" target="_blank" rel="noopener">emend</a> <em>Rose</em> to <em>rose</em> (thereby obscuring the <a href="https://en.wikipedia.org/wiki/Tudor_rose" target="_blank" rel="noopener">likely meaning</a>), and we can make a second file following this convention using two more calls to <code>echo</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"From fairest creatures we desire increase,"</span> &gt; sonnet_1_lower_case.txt
<span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"That thereby beauty's rose might never die,"</span> &gt;&gt; sonnet_1_lower_case.txt
</pre></div></div>
<p>In order to facilitate the comparison of files that are similar but not identical, Unix systems come with the helpful <code>diff</code> command:</p>
<div class="code"><div class="highlight"><pre>$ diff sonnet_1.txt sonnet_1_lower_case.txt
&lt; That thereby beauty's Rose might never die,
<span class="gd">---</span>
&gt; That thereby beauty's rose might never die,
</pre></div></div>
<p>When discussing computer files, <em>diff</em> is frequently employed both as a noun (“What’s the diff between those files?”) and as a verb (“You should diff the files to see what changed.”).<span class="intersentencespace"></span> As with many technical terms, this sometimes bleeds over into common usage, such as “Diff present ideas against those of various past cultures, and see what you get.”<sup id="cha-0_footnote-ref-15" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-15" data-hasqtip="14">15</a></sup></p>
<div id="sec-exercises_redirecting_appending" data-tralics-id="uid78" class="subsubsection" data-number="2.1.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_redirecting_appending" class="heading">Exercises</a></h4>
<p>At the end of each of the exercises below, use the <code>cat</code> command to verify your answer.</p>
 <div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Using <code>echo</code> and <code>&gt;</code>, make files called <code>line_1.txt</code> and <code>line_2.txt</code> containing the first and second lines of Sonnet&nbsp;1, respectively. <span class="exercise" id="ex-echo-redirect"></span>
</li>
<li>Replicate the original <code>sonnet_1.txt</code> (containing the first two lines of the sonnet) by first redirecting the contents of <code>line_1.txt</code> and then appending the contents of <code>line_2.txt</code>.<span class="intersentencespace"></span> Call the new file <code>sonnet_1_copy.txt</code>, and confirm using <code>diff</code> that it’s identical to <code>sonnet_1.txt</code>.<span class="intersentencespace"></span> <em>Hint</em>: When there is no diff between two files, <code>diff</code> simply outputs nothing. <span class="exercise" id="ex-echo-redirect-append"></span>
</li>
<li>Use <code>cat</code> to combine the contents of <code>line_1.txt</code> and <code>line_2.txt</code> in reverse order using a <em>single</em> command, yielding the file <code>sonnet_1_reversed.txt</code>.<span class="intersentencespace"></span> <em>Hint</em>: The <code>cat</code> command can take multiple arguments. <span class="exercise" id="ex-echo-redirect-reverse"></span>
</li></ol>
</div></div>
<div id="sec-listing" data-tralics-id="uid82" class="subsection" data-number="2.2"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="heading hyperref"><span class="number">2.2 </span>Listing</a></h3>
<p>Perhaps the mostly frequently typed command on the Unix command line is <code>ls</code>, short for “list” (<a href="https://www.learnenough.com/command-line-tutorial#code-ls" class="hyperref">Listing&nbsp;<span class="ref">8</span></a>).</p>
<div class="codelisting" id="code-ls" data-tralics-id="uid83" data-number="8"><div class="heading"><span class="number">Listing 8:</span> 

<span class="description">Listing files and directories with <code>ls</code>.<span class="intersentencespace"></span> (Output will vary.)</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls
<span class="go">Desktop</span>
<span class="go">Downloads</span>
<span class="go">sonnet_1.txt</span>
<span class="go">sonnet_1_reversed.txt</span>
</pre></div></div></div><p>The <code>ls</code> command simply lists all the files and directories in the current directory (except for those that are <em>hidden</em>, which we’ll learn more about in a moment).<span class="intersentencespace"></span> In this sense, it’s effectively a command-line version of the graphical browser used to show files and directories (also called “folders”), as seen in <a href="https://www.learnenough.com/command-line-tutorial#fig-file_listing" class="hyperref">Figure&nbsp;<span class="ref">15</span></a>.<span class="intersentencespace"></span> (We’ll sharpen our understanding of directories and folders in <a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="hyperref">Section&nbsp;<span class="ref">4</span></a>.)<span class="intersentencespace"></span> As with a graphical file browser, the output in <a href="https://www.learnenough.com/command-line-tutorial#code-ls" class="hyperref">Listing&nbsp;<span class="ref">8</span></a> is just a sample, and results will differ based on the details of your system.<span class="intersentencespace"></span> (This goes for all the <code>ls</code> examples, so don’t be concerned if there are minor differences in output.)</p>
<div class="center figure" id="fig-file_listing" data-tralics-id="uid84" data-number="15">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/file_listing.png" alt="images/figures/file_listing"></div><div class="caption"><span class="header">Figure 15: </span><span class="description">The graphical equivalent of <code>ls</code>.
</span></div></div>
<p>The <code>ls</code> command can be used to check if a file (or directory) exists, because trying to <code>ls</code> a nonexistent file results in an error message, as seen in <a href="https://www.learnenough.com/command-line-tutorial#code-ls_no_such" class="hyperref">Listing&nbsp;<span class="ref">9</span></a>.</p>
<div class="codelisting" id="code-ls_no_such" data-tralics-id="uid85" data-number="9"><div class="heading"><span class="number">Listing 9:</span> 

<span class="description">Running <code>ls</code> on a nonexistent file.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls foo
<span class="go">ls: foo: No such file or directory</span>
<span class="gp">$</span> touch foo
<span class="gp">$</span> ls foo
<span class="go">foo</span>
</pre></div></div></div><p><a href="https://www.learnenough.com/command-line-tutorial#code-ls_no_such" class="hyperref">Listing&nbsp;<span class="ref">9</span></a> uses the <code>touch</code> command to create an empty file with the name <code>foo</code> (<a href="https://www.learnenough.com/command-line-tutorial#aside-foo_bar" class="hyperref">Box&nbsp;<span class="ref">7</span></a>), so the second time we run <code>ls</code> the error message is gone.<span class="intersentencespace"></span> (The stated purpose of <code>touch</code> is to change the modification time on files or directories, but (ab)using <code>touch</code> to create empty files as in <a href="https://www.learnenough.com/command-line-tutorial#code-ls_no_such" class="hyperref">Listing&nbsp;<span class="ref">9</span></a> is a common Unix idiom.)</p>
<div class="aside" id="aside-foo_bar" data-tralics-id="uid86" data-number="7"><div class="heading"><span class="number">Box 7.</span> 

<span class="description">Foo, bar, baz, etc.</span></div>
<p>When reading about computers, you will encounter certain strange words—words like <em>foo</em>, <em>bar</em>, and <em>baz</em>—with surprising frequency.<span class="intersentencespace"></span> Indeed, in addition to <code class="tt">ls foo</code> and <code class="tt">touch foo</code>, we have already seen four such references in this tutorial: in a typical command-line command (<a href="https://www.learnenough.com/command-line-tutorial#fig-command_line_command" class="hyperref">Figure&nbsp;<span class="ref">2</span></a>), in a virtual machine password (<code class="tt">foobar!</code>, <a href="https://www.learnenough.com/command-line-tutorial#aside-virtual_machine" class="hyperref">Box&nbsp;<span class="ref">2</span></a>), again when getting out of trouble (<code class="tt">grep foobar</code>, <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a>), and yet again in a man page (<a href="https://www.learnenough.com/command-line-tutorial#code-man_man" class="hyperref">Listing&nbsp;<span class="ref">3</span></a>).<span class="intersentencespace"></span> The first three were my own uses, but the last I had nothing to do with:</p>
<pre> ...if name contains a slash (/) then man interprets
 it as a file specification,  so that you can do man
 ./foo.5 or even man /cd/foo/bar.1.gz.</pre>
<p>Here we see both <em>foo</em> and <em>bar</em> making an appearance in the man page for <code class="tt">man</code> itself—an unambiguous testament to their ubiquity in computing.</p>
<p>What is the origin of these odd terms?<span class="intersentencespace"></span> As usual, the <a href="http://www.catb.org/jargon/html/" target="_blank" rel="noopener">Jargon File</a> (via its entry on <a href="http://www.catb.org/jargon/html/F/foo.html" target="_blank" rel="noopener"><em>foo</em></a>) enlightens us:</p>
<blockquote class="quotation"><p><strong>foo</strong>: /foo/</p>
<p>1.<span class="intersentencespace"></span> interj.<span class="intersentencespace"></span> Term of disgust.</p>
<p>2.<span class="intersentencespace"></span> [very common] Used very generally as a sample name for absolutely anything, esp. programs and files (esp. scratch files).</p>
<p>3.<span class="intersentencespace"></span> First on the standard list of <a href="http://www.catb.org/jargon/html/M/metasyntactic-variable.html" target="_blank" rel="noopener">metasyntactic variable</a>s used in syntax examples.<span class="intersentencespace"></span> See also <a href="http://www.catb.org/jargon/html/B/bar.html" target="_blank" rel="noopener">bar</a>, <a href="http://www.catb.org/jargon/html/B/baz.html" target="_blank" rel="noopener">baz</a>, <a href="http://www.catb.org/jargon/html/Q/qux.html" target="_blank" rel="noopener">qux</a>, <a href="http://www.catb.org/jargon/html/Q/quux.html" target="_blank" rel="noopener">quux</a>, etc.</p>
<p>When ‘foo’ is used in connection with ‘bar’ it has generally traced to the WWII-era Army slang acronym <a href="http://www.catb.org/jargon/html/F/FUBAR.html" target="_blank" rel="noopener"><em>FUBAR</em></a> [<a href="http://www.urbandictionary.com/define.php?term=fubar" target="_blank" rel="noopener">see original meaning</a>], later modified to <a href="http://www.catb.org/jargon/html/F/foobar.html" target="_blank" rel="noopener"><em>foobar</em></a>.<span class="intersentencespace"></span> Early versions of the Jargon File interpreted this change as a post-war bowdlerization, but it now seems more likely that FUBAR was itself a derivative of ‘foo’ perhaps influenced by German <em>furchtbar</em> (terrible) — ‘foobar’ may actually have been the <em>original</em> form.<span class="intersentencespace"></span></p>
</blockquote><p>Following the link to <a href="http://www.catb.org/jargon/html/M/metasyntactic-variable.html" target="_blank" rel="noopener">metasyntactic variable</a>s, we then find the following:</p>
<blockquote class="quotation"><p><strong>metasyntactic variable</strong>: n.</p>
<p>A name used in examples and understood to stand for whatever thing is under discussion, or any random member of a class of things under discussion.<span class="intersentencespace"></span> The word foo is the canonical example.<span class="intersentencespace"></span> To avoid confusion, hackers never (well, hardly ever) use ‘foo’ or other words like it as permanent names for anything.<span class="intersentencespace"></span> In filenames, a common convention is that any filename beginning with a metasyntactic-variable name is a scratch file that may be deleted at any time.</p>
<p>Metasyntactic variables are so called because (1) they are variables in the metalanguage used to talk about programs, etc.; (2) they are variables whose values are often variables (as in usages like “the value of f(foo,bar) is the sum of foo and bar”).<span class="intersentencespace"></span> However, it has been plausibly suggested that the real reason for the term “metasyntactic variable” is that it sounds good.<span class="intersentencespace"></span></p>
</blockquote><p>In other words, if you want to create a file, and the name doesn’t matter, the name is usually “foo”.<span class="intersentencespace"></span> Once you’ve used “foo”, the next file is called “bar”, the one after that “baz”.<span class="intersentencespace"></span> Continuations from there vary (“quux” is one <a href="http://www.catb.org/jargon/html/Q/quux.html" target="_blank" rel="noopener">common choice</a>), but in many cases three is enough.</p>

</div><p>A common pattern when using the command line is changing directories using <code>cd</code> (covered in <a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="hyperref">Section&nbsp;<span class="ref">4</span></a>) and then immediately typing <code>ls</code> to view the contents of the directory.<span class="intersentencespace"></span> This lets us orient ourselves, and is a good first step toward whatever our next action might be.</p>
<p>One useful ability of <code>ls</code> is support for the <em>wildcard character</em>&nbsp;<code>*</code> (read “star”).<span class="intersentencespace"></span> For example, to list all files ending in “.txt”, we would type this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls *.txt
<span class="go">sonnet_1.txt</span>
<span class="go">sonnet_1_reversed.txt</span>
</pre></div></div>
<p>Here <code>*.txt</code> (read “star dot tee-ex-tee”) automatically expands to all the filenames that match the pattern “any string followed by .txt”.</p>
<p>There are three particularly important optional forms of <code>ls</code>, starting with the “long form”, using the option <code>-l</code> (read “dash-ell”):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -l *.txt
<span class="go">total 16</span>
<span class="go">-rw-r--r-- 1 mhartl staff  87 Jul 20 18:05 sonnet_1.txt</span>
<span class="go">-rw-r--r-- 1 mhartl staff 294 Jul 21 12:09 sonnet_1_reversed.txt</span>
</pre></div></div>
<p>For now, you can safely ignore most of the information output by <code>ls -l</code>, but note that the long form lists a date and time indicating the last time the file was modified.<span class="intersentencespace"></span> The number before the date is the <em>size</em> of the file, in bytes.<sup id="cha-0_footnote-ref-16" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-16" data-hasqtip="15">16</a></sup></p>
<p>A second powerful <code>ls</code> variant is “list by <strong>r</strong>eversed <strong>t</strong>ime of modification (<strong>l</strong>ong format)”, or <code>ls -rtl</code>, which lists the long form of each file or directory in order of how recently it was modified (<em>reversed</em> so that the most recently modified entries appear at the bottom of the screen for easy inspection).<span class="intersentencespace"></span> This is particularly useful when there are a lot of files in the directory but you really only care about seeing the ones that have been modified recently, such when confirming a file download.<span class="intersentencespace"></span> We’ll see an example of this in <a href="https://www.learnenough.com/command-line-tutorial#sec-downloading_a_file" class="hyperref">Section&nbsp;<span class="ref">3.1</span></a>, but you are free to try it now:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -rtl
<span class="go">&lt;results system-dependent&gt;</span>
</pre></div></div>
<p>By the way, <code>-rtl</code> is the commonly used compact form, but you can also pass the options individually, like this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -r -t -l
</pre></div></div>
<p>In addition, their order is irrelevant, so typing <code>ls -trl</code> gives the same result.</p>
<div id="sec-hidden_files" data-tralics-id="uid88" class="subsubsection" data-number="2.2.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-hidden_files" class="heading">Hidden files</a></h4>
<p>Finally, Unix has the concept of “hidden files (and directories)”, which don’t show up by default when listing files.<span class="intersentencespace"></span> Hidden files and directories are identified by starting with a dot&nbsp;<code>.</code>, and are commonly used for things like storing user preferences.<span class="intersentencespace"></span> For example, in <a href="http://learnenough.com/git" target="_blank" rel="noopener"><em>Learn Enough Git to Be Dangerous</em></a>, we’ll create a file called <code>.gitignore</code> that tells a particular program (Git) to ignore files matching certain patterns.<span class="intersentencespace"></span> As a concrete example, to ignore all files ending in “.txt”, we could do this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"*.txt"</span> &gt; .gitignore
<span class="gp">$</span> cat .gitignore
<span class="go">*.txt</span>
</pre></div></div>
<p>If we then run <code>ls</code>, the file won’t show up, because it’s hidden:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls
<span class="go">sonnet_1.txt</span>
<span class="go">sonnet_1_reversed.txt</span>
</pre></div></div>
<p>To get <code>ls</code> to display hidden files and directories, we need to pass it the <code>-a</code> option (for “all”):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -a
<span class="go">.           .gitignore      sonnet_1_reversed.txt</span>
<span class="go">..          sonnet_1.txt</span>
</pre></div></div>
<p>Now <code>.gitignore</code> shows up, as expected.<span class="intersentencespace"></span> (We’ll learn what <code>.</code> and <code>..</code> refer to in <a href="https://www.learnenough.com/command-line-tutorial#sec-navigating_directories" class="hyperref">Section&nbsp;<span class="ref">4.3</span></a>.)</p>
</div>
<div id="sec-exercises_listing" data-tralics-id="uid89" class="subsubsection" data-number="2.2.2"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_listing" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>What’s the command to list all the non-hidden files and directories that start with the letter “s”? <span class="exercise" id="ex-command-list-all-prefix"></span>
</li>
<li>What is the command to list all the non-hidden files that contain the string “onnet”, long-form by reverse modification time?<span class="intersentencespace"></span> <em>Hint</em>: Use the wildcard operator at both the beginning and the end. <span class="exercise" id="ex-command-list-all-contains"></span>
</li>
<li>What is the command to list <em>all</em> files (including hidden ones) by reverse modification time, in long form? <span class="exercise" id="ex-command-list-all-reverse-mod"></span>
</li></ol>
</div></div>
<div id="sec-renaming_copying_deleting" data-tralics-id="uid93" class="subsection" data-number="2.3"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-renaming_copying_deleting" class="heading hyperref"><span class="number">2.3 </span>Renaming, copying, deleting</a></h3>
<p>Next to listing files, probably the most common file operations involve renaming, copying, and deleting them.<span class="intersentencespace"></span> As with listing files, most modern operating systems provide a graphical user interface to such tasks, but in many contexts it is more convenient to perform them at the command line.</p>
<p>The way to rename a file is with the <code>mv</code> command, short for “move”:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">echo</span> <span class="s2">"test text"</span> &gt; <span class="nb">test</span>
<span class="hll"><span class="gp">$</span><span class="nb"> </span>mv <span class="nb">test </span>test_file.txt
</span><span class="gp">$</span> ls
<span class="go">test_file.txt</span>
</pre></div></div>
<p>This renames the file called <code>test</code> to <code>test_file.txt</code>.<span class="intersentencespace"></span> The final step in the example runs <code>ls</code> to confirm that the file renaming was successful, but system-specific files other than the test file are omitted from the output shown.<span class="intersentencespace"></span> (The name “move” comes from the general use of <code>mv</code> to move a file to a different directory (<a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="hyperref">Section&nbsp;<span class="ref">4</span></a>), possibly renaming it en route.<span class="intersentencespace"></span> When the origin and target directories coincide, such a “move” reduces to a simple renaming.)</p>
<p>The way to copy a file is with <code>cp</code>, short for “copy”:</p>
<div class="code"><div class="highlight"><pre><span class="hll"><span class="gp">$</span> cp test_file.txt second_test.txt
</span><span class="gp">$</span> ls
<span class="go">second_test.txt</span>
<span class="go">test_file.txt</span>
</pre></div></div>
<p>Finally, the command for deleting a file is <code>rm</code>, for “remove”:</p>
<div class="code"><div class="highlight"><pre><span class="hll"><span class="gp">$</span> rm second_test.txt
</span><span class="go">remove second_test.txt? y</span>
<span class="gp">$</span> ls second_test.txt
<span class="go">ls: second_test.txt: No such file or directory</span>
</pre></div></div>
<p>Note that, on many systems, by default you will be prompted to confirm the removal of the file.<span class="intersentencespace"></span> Any answer starting with the letter “y” or “Y” will cause the file to be deleted, and any other answers will prevent the deletion from occurring.</p>
<p>By the way, in the calls to <code>cp</code> and <code>rm</code> above, I would almost certainly not type out <code>test_file.txt</code> or <code>second_test.txt</code>.<span class="intersentencespace"></span> Instead, I would type something like <code>test⇥</code> or <code>sec⇥</code> (where ⇥ represents the tab key (<a href="https://www.learnenough.com/command-line-tutorial#table-keyboard_symbols" class="hyperref">Table&nbsp;<span class="ref">1</span></a>)), thereby making use of <em>tab completion</em> (<a href="https://www.learnenough.com/command-line-tutorial#aside-tab_completion" class="hyperref">Box&nbsp;<span class="ref">8</span></a>).</p>
<div class="aside" id="aside-tab_completion" data-tralics-id="uid94" data-number="8"><div class="heading"><span class="number">Box 8.</span> 

<span class="description">Tab completion</span></div>
<p>Most modern command-line programs (shells) support <em>tab completion</em>, which involves automatically completing a word if there’s only one valid match on the system.<span class="intersentencespace"></span> For example, if the only file starting with the letters “tes” is <code class="tt">test_file</code>, we could create the command to remove it as follows:</p>
<pre> $ rm tes⇥</pre>
<p>where ⇥ is the tab key (<a href="https://www.learnenough.com/command-line-tutorial#table-keyboard_symbols" class="hyperref">Table&nbsp;<span class="ref">1</span></a>).<span class="intersentencespace"></span> The shell would then complete the filename, yielding <code class="tt">rm test_file</code>.<span class="intersentencespace"></span> Especially with longer filenames (or directories), tab completion can save a huge amount of typing.<span class="intersentencespace"></span> It also lowers the <a href="https://en.wikipedia.org/wiki/Cognitive_load" target="_blank" rel="noopener"><em>cognitive load</em></a>, since it means you don’t have to remember the full name of the file—only its first few letters.</p>
<p>If the match is ambiguous, as would happen if we had files called <code class="tt">foobarquux</code> and <code class="tt">foobazquux</code>, the word will be completed only as far as possible, so</p>
<pre> $ ls foo⇥</pre>
<p>would be completed to</p>
<pre> $ ls fooba</pre>
<p>If we then hit tab <em>again</em>, we would see a list of matches:</p>
<pre> $ ls fooba⇥
 foobarquux foobazquux</pre>
<p>We could then type more letters to resolve the ambiguity, so typing the <code class="tt">r</code> after <code class="tt">fooba</code> and hitting <code class="tt">⇥</code> would yield</p>
<pre> $ ls foobar⇥</pre>
<p>which would be completed to <code class="tt">foobarquux</code>.<span class="intersentencespace"></span> This situation is common enough that experienced command-line users will often just hit something like <code class="tt">f⇥⇥</code> to get the shell to show all the possibilities:</p>
<pre> $ ls f⇥⇥
 figure_1.png foobarquux  foobazquux</pre>
<p>Additional letters would then be typed as usual to resolve the ambiguity.</p>

</div><p>The default behavior of <code>rm</code> on an unconfigured Unix system is actually to remove the file without confirmation, but (because deletion is irreversible) many systems <em>alias</em> the <code>rm</code> command to use an option to turn on confirmation.<span class="intersentencespace"></span> (As you can verify by running <code>man rm</code>, this option is <code>-i</code>, so in fact <code>rm</code> is really <code>rm -i</code>.)<span class="intersentencespace"></span> There are many situations where confirmation is inconvenient, though, such as when you’re deleting a list of files and don’t want to have to confirm each one.<span class="intersentencespace"></span> This is especially common when using the wildcard&nbsp;<code>*</code> introduced in <a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="hyperref">Section&nbsp;<span class="ref">2.2</span></a>.<span class="intersentencespace"></span> For example, to remove all the files ending with “.txt” using a single command, <em>without</em> having to confirm each one, you can type this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> rm -f *.txt
</pre></div></div>
<p>Here <code>-f</code> (for “force”) overrides the implicit <code>-i</code> option and removes all files immediately.<span class="intersentencespace"></span> (<a href="https://en.wikipedia.org/wiki/Nota_bene" target="_blank" rel="noopener">N.B.</a> You are now in a position to understand the command in <a href="https://www.learnenough.com/command-line-tutorial#fig-command_line_command" class="hyperref">Figure&nbsp;<span class="ref">2</span></a>.)</p>
<div id="sec-unix_terseness" data-tralics-id="uid95" class="subsubsection" data-number="2.3.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-unix_terseness" class="heading">Unix terseness</a></h4>
<p>One thing you might notice is that the commands in this section and in <a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="hyperref">Section&nbsp;<span class="ref">2.2</span></a> are short: instead of <code>list</code>, <code>move</code>, <code>copy</code>, and <code>remove</code>, we have <code>ls</code>, <code>mv</code>, <code>cp</code>, and <code>rm</code>.<span class="intersentencespace"></span> Because the former command names are easier to understand and memorize, you may wonder why the actual commands aren’t longer (<a href="https://www.learnenough.com/command-line-tutorial#fig-y_u_no" class="hyperref">Figure&nbsp;<span class="ref">16</span></a>).</p>
<div class="center figure" id="fig-y_u_no" data-tralics-id="uid96" data-number="16">
<div class="graphics image box"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/y_u_no.jpg" alt="images/figures/y_u_no"></div><div class="caption"><span class="header">Figure 16: </span><span class="description">The terseness of Unix commands can be a source of confusion.
</span></div></div>
<p>The answer is that Unix dates from a time when most computer users logged on to centralized servers over slow connections, and there could be a noticeable delay between the time users pressed a key and the time it appeared on the terminal.<span class="intersentencespace"></span> For frequently used commands like listing files, the difference between <code>list</code> and <code>ls</code> or <code>remove</code> and <code>rm</code> could be significant.<span class="intersentencespace"></span> As a result, the most commonly used Unix commands tend to be only two or three letters long.<span class="intersentencespace"></span> Because it makes them more difficult to memorize, this can be a minor inconvenience when learning them, but over a lifetime of command-line use the savings represented by, say, <code>mv</code> really add up.</p>
</div>
<div id="sec-exercises_manipulating" data-tralics-id="uid97" class="subsubsection" data-number="2.3.2"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_manipulating" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Use the <code>echo</code> command and the redirect operator&nbsp;<code>&gt;</code> to make a file called <code>foo.txt</code> containing the text “hello, world”.<span class="intersentencespace"></span> Then, using the <code>cp</code> command, make a copy of <code>foo.txt</code> called <code>bar.txt</code>.<span class="intersentencespace"></span> Using the <code>diff</code> command, confirm that the contents of both files are the same. <span class="exercise" id="ex-echo-redirect-cp"></span>
</li>
<li>By combining the <code>cat</code> command and the redirect operator&nbsp;<code>&gt;</code>, create a copy of <code>foo.txt</code> called <code>baz.txt</code> <em>without</em> using the <code>cp</code> command. <span class="exercise" id="ex-cat-redirect-cp"></span>
</li>
<li>Create a file called <code>quux.txt</code> containing the contents of <code>foo.txt</code> followed by the contents of <code>bar.txt</code>.<span class="intersentencespace"></span> <em>Hint</em>: As noted in <a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_redirecting_appending" class="hyperref">Section&nbsp;<span class="ref">2.1.1</span></a>, <code>cat</code> can take multiple arguments. <span class="exercise" id="ex-cat-combine"></span>
</li>
<li>How do <code>rm nonexistent</code> and <code>rm -f nonexistent</code> differ for a nonexistent file? <span class="exercise" id="ex-rm-f"></span>
</li></ol>
</div></div>
<div id="sec-summary_manipulating" data-tralics-id="uid102" class="subsection" data-number="2.4"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-summary_manipulating" class="heading hyperref"><span class="number">2.4 </span>Summary</a></h3>
<p>Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-manipulating_files" class="hyperref">Table&nbsp;<span class="ref">3</span></a>.</p>
<div id="table-manipulating_files" data-tralics-id="uid103" data-number="3" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Command</strong></td>
<td class="align_left"><strong>Description</strong></td>
<td class="align_left"><strong>Example</strong></td>
</tr><tr><td class="align_left"><code class="tt">&gt;</code></td>
<td class="align_left">Redirect output to filename</td>
<td class="align_left"><code>$ echo foo &gt; foo.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">&gt;&gt;</code></td>
<td class="align_left">Append output to filename</td>
<td class="align_left"><code>$ echo bar &gt;&gt; foo.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">cat &lt;file&gt;</code></td>
<td class="align_left">Print contents of file to screen</td>
<td class="align_left"><code>$ cat hello.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">diff &lt;f1&gt; &lt;f2&gt;</code></td>
<td class="align_left">Diff files 1 &amp; 2</td>
<td class="align_left"><code>$ diff foo.txt bar.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">ls</code></td>
<td class="align_left">List directory or file</td>
<td class="align_left"><code>$ ls hello.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">ls -l</code></td>
<td class="align_left">List long form</td>
<td class="align_left"><code>$ ls -l hello.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">ls -rtl</code></td>
<td class="align_left">Long by reverse modification time</td>
<td class="align_left"><code>$ ls -rtl</code></td>
</tr><tr><td class="align_left"><code class="tt">ls -a</code></td>
<td class="align_left">List all (including hidden)</td>
<td class="align_left"><code>$ ls -a</code></td>
</tr><tr><td class="align_left"><code class="tt">touch &lt;file&gt;</code></td>
<td class="align_left">Create an empty file</td>
<td class="align_left"><code>$ touch foo</code></td>
</tr><tr><td class="align_left"><code class="tt">mv &lt;old&gt; &lt;new&gt;</code></td>
<td class="align_left">Rename (move) from old to new</td>
<td class="align_left"><code>$ mv foo bar</code></td>
</tr><tr><td class="align_left"><code class="tt">cp &lt;old&gt; &lt;new&gt;</code></td>
<td class="align_left">Copy old to new</td>
<td class="align_left"><code>$ cp foo bar</code></td>
</tr><tr><td class="align_left"><code class="tt">rm &lt;file&gt;</code></td>
<td class="align_left">Remove (delete) file</td>
<td class="align_left"><code>$ rm foo</code></td>
</tr><tr><td class="align_left"><code class="tt">rm -f &lt;file&gt;</code></td>
<td class="align_left">Force-remove file</td>
<td class="align_left"><code>$ rm -f bar</code></td>
</tr></tbody></table><div class="caption"><span class="header">Table 3: </span><span class="description">Important commands from <a href="https://www.learnenough.com/command-line-tutorial#sec-manipulating_files" class="hyperref">Section&nbsp;<span class="ref">2</span></a>.
</span></div></div>
<div id="sec-exercises_summary_manipulating" data-tralics-id="uid104" class="subsubsection" data-number="2.4.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_summary_manipulating" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<div id="fig-copy_paste_sonnet_1" data-tralics-id="uid105" data-number="17" class="figure">
<blockquote class="quotation"><p>FRom faireſt creatures we deſire increaſe, <span class="break"></span>
That thereby beauties <em>Roſe</em> might neuer die, <span class="break"></span>
But as the riper ſhould by time deceaſe, <span class="break"></span>
His tender heire might beare his memory: <span class="break"></span>
But thou contracted to thine owne bright eyes, <span class="break"></span>
Feed’ſt thy lights flame with ſelfe ſubſtantiall fewell, <span class="break"></span>
Making a famine where aboundance lies, <span class="break"></span>
Thy ſelfe thy foe,to thy ſweet ſelfe too cruell: <span class="break"></span>
Thou that art now the worlds freſh ornament, <span class="break"></span>
And only herauld to the gaudy ſpring, <span class="break"></span>
Within thine owne bud burieſt thy content, <span class="break"></span>
And tender chorle makſt waſt in niggarding: <span class="break"></span>
&nbsp;&nbsp;&nbsp;Pitty the world,or elſe this glutton be, <span class="break"></span>
&nbsp;&nbsp;&nbsp;To eate the worlds due,by the graue and thee.<span class="break"></span></p>
</blockquote><div class="caption"><span class="header">Figure 17: </span><span class="description">A copy-and-pastable version of Shakespeare’s first sonnet (<a href="https://en.wikipedia.org/wiki/Cf." target="_blank" rel="noopener"><em>cf.</em></a> <a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a>).
</span></div></div>
<ol>
<li>By copying and pasting the text from the <a href="https://www.learnenough.com/command-line-tutorial#fig-copy_paste_sonnet_1" target="_blank" rel="noopener">HTML version</a> of <a href="https://www.learnenough.com/command-line-tutorial#fig-copy_paste_sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">17</span></a>, use <code>echo</code> to make a file called <code>sonnet_1_complete.txt</code> containing the full (original) text of Shakespeare’s first sonnet.<span class="intersentencespace"></span> <em>Hint</em>: You may recall getting stuck when <code>echo</code> was followed by an unmatched double quote (<a href="https://www.learnenough.com/command-line-tutorial#sec-our_first_command" class="hyperref">Section&nbsp;<span class="ref">1.2</span></a> and <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a>), as in <code>echo "</code>, but in fact this construction allows you to print out a multi-line block of text.<span class="intersentencespace"></span> Just remember to put a closing quote at the end, and then redirect to a file with the appropriate name.<span class="intersentencespace"></span> Check that the contents are correct using <code>cat</code> (<a href="https://www.learnenough.com/command-line-tutorial#fig-cat" class="hyperref">Figure&nbsp;<span class="ref">14</span></a>). <span class="exercise" id="ex-copy-paste-to-file"></span>
</li>
<li>Type the sequence of commands needed to create an empty file called <code>foo</code>, rename it to <code>bar</code>, and copy it to <code>baz</code>. <span class="exercise" id="ex-create-rename-copy"></span>
</li>
<li>What is the command to list only the files starting with the letter “b”?<span class="intersentencespace"></span> <em>Hint</em>: Use a wildcard. <span class="exercise" id="ex-list-wildcard"></span>
</li>
<li>Remove both <code>bar</code> and <code>baz</code> using a <em>single</em> call to <code>rm</code>.<span class="intersentencespace"></span> <em>Hint</em>: If those are the only two files in the current directory that start with the letter “b”, you can use the wildcard pattern from the previous exercise. <span class="exercise" id="ex-rm-wildcard"></span>
</li></ol>
</div></div></div><div id="sec-inspecting_files" data-tralics-id="cid3" class="section" data-number="3"><h2><a href="https://www.learnenough.com/command-line-tutorial#sec-inspecting_files" class="heading hyperref"><span class="number">3 </span>Inspecting files</a></h2>
<p>Having seen how to create and manipulate files, now it’s time to learn how to examine their contents.<span class="intersentencespace"></span> This is especially important for files too long to fit on a single screen.<span class="intersentencespace"></span> In particular, we saw starting in <a href="https://www.learnenough.com/command-line-tutorial#sec-redirecting_and_appending" class="hyperref">Section&nbsp;<span class="ref">2.1</span></a> how to use the <code>cat</code> command to dump the file contents to the screen, but this doesn’t work very well for longer files.</p>
<p><em>Note</em>: Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-inspecting_files" class="hyperref">Table&nbsp;<span class="ref">5</span></a>.</p>
<div id="sec-downloading_a_file" data-tralics-id="uid110" class="subsection" data-number="3.1"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-downloading_a_file" class="heading hyperref"><span class="number">3.1 </span>Downloading a file</a></h3>
<p>To give us a place to start, rather than creating a long file by hand (which is cumbersome) we’ll download a file from the Internet using the powerful <code>curl</code> utility (sometimes written as “cURL”), which allows us to interact with a URL<sup id="cha-0_footnote-ref-17" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-17" data-hasqtip="16">17</a></sup> at the command line.<span class="intersentencespace"></span> Although it’s not part of the core Unix command set, the <code>curl</code> command is widely available on Unix systems.<span class="intersentencespace"></span> To make sure it’s available on your system, we can use the <code>which</code> command, which looks to see if the given program is available at the command line.<sup id="cha-0_footnote-ref-18" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-18" data-hasqtip="17">18</a></sup><span class="intersentencespace"></span> The way to use it is to type <code>which</code> followed by the name of the program—in this case, <code>curl</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> which curl
<span class="go">/usr/bin/curl</span>
</pre></div></div>
<p>I’ve shown the output on my system (<code>/usr/bin/curl</code>, usually read as “user bin curl”), but the result on your system may differ.<span class="intersentencespace"></span> In particular, if the result is just a blank line, you will have to install <code>curl</code>, which you can do by Googling for “install curl” followed by the name of your operating system.</p>
<p>Once <code>curl</code> is installed, we can download a file called <code>sonnets.txt</code> containing a large corpus of text using the command in <a href="https://www.learnenough.com/command-line-tutorial#code-curl" class="hyperref">Listing&nbsp;<span class="ref">10</span></a>.<sup id="cha-0_footnote-ref-19" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-19" data-hasqtip="18">19</a></sup></p>
<div class="codelisting" id="code-curl" data-tralics-id="uid114" data-number="10"><div class="heading"><span class="number">Listing 10:</span> 

<span class="description">Using <code>curl</code> to download a longer file.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> curl -OL cdn.learnenough.com/sonnets.txt
<span class="gp">$</span> ls -rtl
</pre></div></div></div><p>Be sure to copy the command exactly; in particular, note that the option <code>-OL</code> contains a capital letter “O” (<code>O</code>) and not a zero (<code>0</code>).<span class="intersentencespace"></span> (Figuring out what these options do is left as an exercise (<a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_inspecting" class="hyperref">Section&nbsp;<span class="ref">3.5.1</span></a>).)<span class="intersentencespace"></span> Also, on some systems (for mysterious reasons) you might have to run the command twice to get it to work; by inspecting the results of <code>ls -rtl</code>, you should be able to tell if the initial call to <code>curl</code> created the file <code>sonnets.txt</code> as expected.<span class="intersentencespace"></span> (If you do have to repeat the <code>curl</code> command, you could press up arrow twice to retrieve it, but see <a href="https://www.learnenough.com/command-line-tutorial#aside-repeating_commands" class="hyperref">Box&nbsp;<span class="ref">9</span></a> for alternatives.)</p>
<p>The result of running <a href="https://www.learnenough.com/command-line-tutorial#code-curl" class="hyperref">Listing&nbsp;<span class="ref">10</span></a> is <code>sonnets.txt</code>, a file containing all 154 of Shakespeare’s sonnets.<span class="intersentencespace"></span> This file contains 2620 lines, far too many to fit on one screen.<span class="intersentencespace"></span> Learning how to inspect its contents is the goal of the rest of this section.<span class="intersentencespace"></span> (Among other things, we’ll learn how to determine that it has 2620 lines without counting them all by hand.)</p>
<div class="aside" id="aside-repeating_commands" data-tralics-id="uid115" data-number="9"><div class="heading"><span class="number">Box 9.</span> 

<span class="description">Repeating previous commands</span></div>
<p>Repeating previous commands is a frequent task when using the command line.<span class="intersentencespace"></span> So far in this tutorial, we’ve used the up-arrow key to retrieve (and possibly edit) previous commands, but this isn’t the only possibility.<span class="intersentencespace"></span> An even quicker way to find and immediately run a previous command involves using the exclamation point&nbsp;<code class="tt">!</code>, which in the context of software development is usually pronounced “bang”.<span class="intersentencespace"></span> To run the previous command exactly as written, we can use “bang bang”:</p>
<pre> $ echo "foo"
 foo
 $ !!
 echo "foo"
 foo</pre>
<p>A closely related usage is “bang” followed by some number of characters, which runs the last command that started with those characters.<span class="intersentencespace"></span> For example, to run the last <code class="tt">curl</code> command, we could type this:</p>
<pre> $ !curl</pre>
<p>This would save us the trouble of typing out the options, the URL, etc.<span class="intersentencespace"></span> Depending on our history of commands, the even terser <code class="tt">!cu</code> or <code class="tt">!c</code> would work as well.<span class="intersentencespace"></span> This technique is especially useful when the desired command last happened many commands ago, which can make hitting up arrow cumbersome.</p>
<p>A second and incredibly powerful technique is <code class="tt">⌃R</code>, which lets you search interactively through your previous commands, and then optionally edit the result before executing.<span class="intersentencespace"></span> For example, we could try this to bring up the last <code class="tt">curl</code> command:</p>
<pre> $ &lt;⌃R&gt;
 (reverse-i-search)`': curl</pre>
<p>On most systems, hitting return would then put the last <code class="tt">curl</code> command after our prompt and allow us to edit it (if desired) before hitting return to execute it.<span class="intersentencespace"></span> When your workflow happens to involve repeatedly running a variety of similar commands, sometimes it can seem like “all commands start with <code class="tt">⌃R</code>.”</p>

</div>
<div id="sec-exercises_downloading" data-tralics-id="uid116" class="subsubsection" data-number="3.1.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_downloading" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Use the command <code>curl -I https://www.learnenough.com/</code> to fetch the <em>HTTP header</em> for the Learn Enough website.<span class="intersentencespace"></span> What is the <a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes" target="_blank" rel="noopener">HTTP status code</a> for the address?<span class="intersentencespace"></span> How does this differ from the status code for <code class="tt">learnenough.com</code> (without the <code>https://</code>)? <span class="exercise" id="ex-curl-i"></span>
</li>
<li>Using <code>ls</code>, confirm that <code>sonnets.txt</code> exists on your system.<span class="intersentencespace"></span> How big is it in bytes?<span class="intersentencespace"></span> <em>Hint</em>: Recall from <a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="hyperref">Section&nbsp;<span class="ref">2.2</span></a> that the “long form” of <code>ls</code> displays a byte count. <span class="exercise" id="ex-ls-long-form"></span>
</li>
<li>The byte count in the previous exercise is high enough that it’s more naturally thought of in <em>kilobytes</em> (often treated as 1000 bytes, but actually equal to <span class="inline_math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax_Error" id="MathJax-Element-1-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1024&lt;/mn&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><span aria-hidden="true">[Math Processing Error]</span><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mrow class="MJX-TeXAtom-ORD"><mn>10</mn></mrow></msup><mo>=</mo><mn>1024</mn></math></span></span><script type="math/tex" id="MathJax-Element-1"> 2^{10} = 1024 </script></span> bytes).<span class="intersentencespace"></span> By adding <code>-h</code> (“human-readable”) option to <code>ls</code>, list the long form of the sonnets file with a human-readable byte count. <span class="exercise" id="ex-ls-human"></span>
</li>
<li>Suppose you wanted to list the files and directories using <strong>h</strong>uman-readable byte counts, <strong>a</strong>ll, by <strong>r</strong>everse <strong>t</strong>ime-sorted <strong>l</strong>ong-form.<span class="intersentencespace"></span> What command would you use?<span class="intersentencespace"></span> Why might this command be the personal favorite of the author of this tutorial?<sup id="cha-0_footnote-ref-20" class="footnote intersentence"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-20" data-hasqtip="19">20</a></sup><span class="intersentencespace"></span> <span class="exercise" id="ex-ls-hartl"></span>
</li></ol>
</div></div>
<div id="sec-making_heads_and_tails" data-tralics-id="uid122" class="subsection" data-number="3.2"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-making_heads_and_tails" class="heading hyperref"><span class="number">3.2 </span>Making heads and tails of it</a></h3>
<p>Two complementary commands for inspecting files are <code>head</code> and <code>tail</code>, which respectively allow us to view the beginning (head) and end (tail) of the file.<span class="intersentencespace"></span> The <code>head</code> command shows the first 10 lines of the file (<a href="https://www.learnenough.com/command-line-tutorial#code-head" class="hyperref">Listing&nbsp;<span class="ref">11</span></a>).</p>
<div class="codelisting" id="code-head" data-tralics-id="uid123" data-number="11"><div class="heading"><span class="number">Listing 11:</span> 

<span class="description">Looking at the head of the sample text file.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="hll"><span class="gp">$</span> head sonnets.txt
</span><span class="go">Shake-speare's Sonnets</span>

<span class="go">I</span>

<span class="go">From fairest creatures we desire increase,</span>
<span class="go">That thereby beauty's Rose might never die,</span>
<span class="go">But as the riper should by time decease,</span>
<span class="go">His tender heir might bear his memory:</span>
<span class="go">But thou contracted to thine own bright eyes,</span>
<span class="go">Feed'st thy light's flame with self-substantial fuel</span>
</pre></div></div></div><p>Similarly, <code>tail</code> shows the last 10 lines of the file (<a href="https://www.learnenough.com/command-line-tutorial#code-tail" class="hyperref">Listing&nbsp;<span class="ref">12</span></a>).</p>
<div class="codelisting" id="code-tail" data-tralics-id="uid124" data-number="12"><div class="heading"><span class="number">Listing 12:</span> 

<span class="description">Looking at the tail of the sample text file.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="hll"><span class="gp">$</span> tail sonnets.txt
</span><span class="go">The fairest votary took up that fire</span>
<span class="go">Which many legions of true hearts had warm'd;</span>
<span class="go">And so the general of hot desire</span>
<span class="go">Was, sleeping, by a virgin hand disarm'd.</span>
<span class="go">This brand she quenched in a cool well by,</span>
<span class="go">Which from Love's fire took heat perpetual,</span>
<span class="go">Growing a bath and healthful remedy,</span>
<span class="go">For men diseas'd; but I, my mistress' thrall,</span>
<span class="go"> Came there for cure and this by that I prove,</span>
<span class="go"> Love's fire heats water, water cools not love.</span>
</pre></div></div></div><p>These two commands are useful when (as is often the case) you know for sure you only need to inspect the beginning or end of a file.</p>
<div id="sec-wordcount_and_pipes" data-tralics-id="uid125" class="subsubsection" data-number="3.2.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-wordcount_and_pipes" class="heading">Wordcount and pipes</a></h4>
<p>By the way, I didn’t recall offhand how many lines <code>head</code> and <code>tail</code> show by default.<span class="intersentencespace"></span> Since there are only 10 lines in the output, I could have counted them by hand, but in fact I was able to figure it out using the <code>wc</code> command (short for “wordcount”; recall <a href="https://www.learnenough.com/command-line-tutorial#fig-y_u_no" class="hyperref">Figure&nbsp;<span class="ref">16</span></a>).</p>
<p>The most common use of <code>wc</code> is on full files.<span class="intersentencespace"></span> For example, we can run <code>sonnets.txt</code> through <code>wc</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> wc sonnets.txt
<span class="go">  2620  17670  95635 sonnets.txt</span>
</pre></div></div>
<p>Here the three numbers indicate how many lines, words, and bytes there are in the file, so there are 2620 lines (thereby fulfilling the promise made at the end of <a href="https://www.learnenough.com/command-line-tutorial#sec-downloading_a_file" class="hyperref">Section&nbsp;<span class="ref">3.1</span></a>), 17670 words, and 95635 bytes.</p>
<p>You are now in a position to be able to guess one method for determining how many lines are in <code>head sonnets.txt</code>.<span class="intersentencespace"></span> In particular, we can combine <code>head</code> with the redirect operator (<a href="https://www.learnenough.com/command-line-tutorial#sec-redirecting_and_appending" class="hyperref">Section&nbsp;<span class="ref">2.1</span></a>) to make a file with the relevant contents, and then run <code>wc</code> on it, as shown in <a href="https://www.learnenough.com/command-line-tutorial#code-head_redirected" class="hyperref">Listing&nbsp;<span class="ref">13</span></a>.</p>
<div class="codelisting" id="code-head_redirected" data-tralics-id="uid126" data-number="13"><div class="heading"><span class="number">Listing 13:</span> 

<span class="description">Redirecting <code>head</code> and running <code>wc</code> on the result.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> head sonnets.txt &gt; sonnets_head.txt
<span class="gp">$</span> wc sonnets_head.txt
<span class="go">   10   46   294 sonnets_head.txt</span>
</pre></div></div></div><p>We see from <a href="https://www.learnenough.com/command-line-tutorial#code-head_redirected" class="hyperref">Listing&nbsp;<span class="ref">13</span></a> that there are 10 lines in <code>head wc</code> (along with 46 words and 294 bytes).<span class="intersentencespace"></span> The same method, of course, would work for <code>tail</code>.</p>
<p>On the other hand, you might get the feeling that it’s a little unclean to make an intermediate file just to run <code>wc</code> on it, and indeed there’s a way to avoid it using a technique called <em>pipes</em>.<span class="intersentencespace"></span> <a href="https://www.learnenough.com/command-line-tutorial#code-head_pipe" class="hyperref">Listing&nbsp;<span class="ref">14</span></a> shows how to do it.</p>
<div class="codelisting" id="code-head_pipe" data-tralics-id="uid127" data-number="14"><div class="heading"><span class="number">Listing 14:</span> 

<span class="description">Piping the result of <code>head</code> through <code>wc</code>.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> head sonnets.txt <span class="p">|</span> wc
<span class="go">   10   46   294</span>
</pre></div></div></div><p>The command in <a href="https://www.learnenough.com/command-line-tutorial#code-head_pipe" class="hyperref">Listing&nbsp;<span class="ref">14</span></a> runs <code>head sonnets.txt</code> and then <em>pipes</em> the result through <code>wc</code> using the pipe symbol&nbsp;<code>|</code> (Shift-backslash on most QWERTY keyboards).<span class="intersentencespace"></span> The reason this works is that the <code>wc</code> command, in addition to taking a filename as an argument, can (like many Unix programs) take input from “standard in” (compare to “standard out” mentioned in <a href="https://www.learnenough.com/command-line-tutorial#sec-our_first_command" class="hyperref">Section&nbsp;<span class="ref">1.2</span></a>), which in this case is the output of <code>head sonnets.txt</code> shown in <a href="https://www.learnenough.com/command-line-tutorial#code-head" class="hyperref">Listing&nbsp;<span class="ref">11</span></a>.<span class="intersentencespace"></span> The <code>wc</code> program takes this input and counts it the same way it counts a file, yielding the same line, word, and byte counts as <a href="https://www.learnenough.com/command-line-tutorial#code-head_redirected" class="hyperref">Listing&nbsp;<span class="ref">13</span></a>.</p>
</div>
<div id="sec-exercises_head_tails" data-tralics-id="uid128" class="subsubsection" data-number="3.2.2"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_head_tails" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>By piping the results of <code>tail sonnets.txt</code> through <code>wc</code>, confirm that (like <code>head</code>) the <code>tail</code> command outputs 10 lines by default. <span class="exercise" id="ex-tail-wc"></span>
</li>
<li>By running <code>man head</code>, learn how to look at the first <code>n</code> lines of the file.<span class="intersentencespace"></span> By experimenting with different values of <code>n</code>, find a <code>head</code> command to print out just enough lines to display the first sonnet in its entirety (<a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a>). <span class="exercise" id="ex-head-n"></span>
</li>
<li>Pipe the results of the previous exercise through <code>tail</code> (with the appropriate options) to print out <em>only</em> the 14 lines composing Sonnet&nbsp;1.<span class="intersentencespace"></span> <em>Hint</em>: The command will look something like <code>head -n &lt;i&gt; sonnets.txt | tail -n &lt;j&gt;</code>, where <code>&lt;i&gt;</code> and <code>&lt;j&gt;</code> represent the numerical arguments to the <code>-n</code> option. <span class="exercise" id="ex-pipe-tail"></span>
</li>
<li>One of the most useful applications of <code>tail</code> is running <code>tail -f</code> to view a file that’s actively changing.<span class="intersentencespace"></span> This is especially common when monitoring files used to log the activity of, e.g., web servers, a practice known as “<a href="https://en.wikipedia.org/wiki/Tail_(Unix)#File_monitoring" target="_blank" rel="noopener">tailing the log file</a>”.<span class="intersentencespace"></span> To simulate the creation of a log file, run <code>ping learnenough.com &gt; learnenough.log</code> in one terminal tab.<span class="intersentencespace"></span> (The <code>ping</code> command “pings” a server to see if it’s working.)<span class="intersentencespace"></span> In a second tab, type the command to tail the log file.<span class="intersentencespace"></span> (At this point, both tabs will be stuck, so once you’ve gotten the gist of <code>tail -f</code> you should use the technique from <a href="https://www.learnenough.com/command-line-tutorial#aside-getting_out_of_trouble" class="hyperref">Box&nbsp;<span class="ref">4</span></a> to get out of trouble.) <span class="exercise" id="ex-tail-f"></span>
</li></ol>
</div></div>
<div id="sec-less_is_more" data-tralics-id="uid133" class="subsection" data-number="3.3"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="heading hyperref"><span class="number">3.3 </span>Less is more</a></h3>
<p>Unix provides two utilities for the common task of wanting to look at more than just the head or tail of a file.<span class="intersentencespace"></span> The older of these programs is called <code>more</code>, but (I’d guess initially as a tongue-in-cheek joke) there’s a more powerful variant called <code>less</code>.<sup id="cha-0_footnote-ref-21" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-21" data-hasqtip="20">21</a></sup><span class="intersentencespace"></span> The <code>less</code> program is interactive, so it’s hard to capture in print, but here’s roughly what it looks like:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> less sonnets.txt
<span class="go">Shake-speare's Sonnets</span>

<span class="go">I</span>

<span class="go">From fairest creatures we desire increase,</span>
<span class="go">That thereby beauty's Rose might never die,</span>
<span class="go">But as the riper should by time decease,</span>
<span class="go">His tender heir might bear his memory:</span>
<span class="go">But thou contracted to thine own bright eyes,</span>
<span class="go">Feed'st thy light's flame with self-substantial fuel,</span>
<span class="go">Making a famine where abundance lies,</span>
<span class="go">Thy self thy foe, to thy sweet self too cruel:</span>
<span class="go">Thou that art now the world's fresh ornament,</span>
<span class="go">And only herald to the gaudy spring,</span>
<span class="go">Within thine own bud buriest thy content,</span>
<span class="go">And tender churl mak'st waste in niggarding:</span>
<span class="go"> Pity the world, or else this glutton be,</span>
<span class="go"> To eat the world's due, by the grave and thee.</span>

<span class="go">II</span>

<span class="go">When forty winters shall besiege thy brow,</span>
<span class="go">And dig deep trenches in thy beauty's field,</span>
<span class="hll"><span class="go">sonnets.txt</span>
</span></pre></div></div>
<p>The point of <code>less</code> is that it lets you navigate through the file in several useful ways, such as moving one line up or down with the arrow keys, pressing space bar to move a page down, pressing <code>⌃F</code> to move forward a page (i.e., the same as spacebar) or <code>⌃B</code> to move back a page.<span class="intersentencespace"></span> To quit <code>less</code>, type <code>q</code> (for “quit”).</p>
<div class="center figure" id="fig-tudor_rose" data-tralics-id="uid135" data-number="18">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/tudor_rose.png" alt="images/figures/tudor_rose"></div><div class="caption"><span class="header">Figure 18: </span><span class="description">A <a href="https://en.wikipedia.org/wiki/Tudor_rose" target="_blank" rel="noopener">famous rose</a> from the time of Shakespeare.
</span></div></div>
<p>Perhaps the most powerful aspect of <code>less</code> is the forward slash key&nbsp;<code>/</code>, which lets you search through the file from beginning to end.<span class="intersentencespace"></span> For example, suppose we wanted to search through <code>sonnets.txt</code> for “rose” (<a href="https://www.learnenough.com/command-line-tutorial#fig-tudor_rose" class="hyperref">Figure&nbsp;<span class="ref">18</span></a>),<sup id="cha-0_footnote-ref-22" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-22" data-hasqtip="21">22</a></sup> one of the most frequently used images used in the <em>Sonnets</em>.<sup id="cha-0_footnote-ref-23" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-23" data-hasqtip="22">23</a></sup><span class="intersentencespace"></span> The way to do this in <code>less</code> is to type <code>/rose</code> (read “slash rose”), as shown in <a href="https://www.learnenough.com/command-line-tutorial#code-rose_search" class="hyperref">Listing&nbsp;<span class="ref">15</span></a>.</p>
<div class="codelisting" id="code-rose_search" data-tralics-id="uid138" data-number="15"><div class="heading"><span class="number">Listing 15:</span> 

<span class="description">Searching for the string “rose” using <code>less</code>.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="go">Shake-speare's Sonnets</span>

<span class="go">I</span>

<span class="go">From fairest creatures we desire increase,</span>
<span class="go">That thereby beauty's Rose might never die,</span>
<span class="go">But as the riper should by time decease,</span>
<span class="go">His tender heir might bear his memory:</span>
<span class="go">But thou contracted to thine own bright eyes,</span>
<span class="go">Feed'st thy light's flame with self-substantial fuel,</span>
<span class="go">Making a famine where abundance lies,</span>
<span class="go">Thy self thy foe, to thy sweet self too cruel:</span>
<span class="go">Thou that art now the world's fresh ornament,</span>
<span class="go">And only herald to the gaudy spring,</span>
<span class="go">Within thine own bud buriest thy content,</span>
<span class="go">And tender churl mak'st waste in niggarding:</span>
<span class="go"> Pity the world, or else this glutton be,</span>
<span class="go"> To eat the world's due, by the grave and thee.</span>

<span class="go">II</span>

<span class="go">When forty winters shall besiege thy brow,</span>
<span class="go">And dig deep trenches in thy beauty's field,</span>
<span class="hll"><span class="go">/rose</span>
</span></pre></div></div></div><p>The result of pressing return after typing <code>/rose</code> in <a href="https://www.learnenough.com/command-line-tutorial#code-rose_search" class="hyperref">Listing&nbsp;<span class="ref">15</span></a> is to highlight the first occurrence of “rose” in the file.<span class="intersentencespace"></span> You can then press <code>n</code> to navigate to the next match, or <code>N</code> to navigate to the previous match.</p>
<p>The last two essential <code>less</code> less commands are <code>G</code> to move to the end of the file and <code>1G</code> (that’s <code>1</code> followed by <code>G</code>) to move back to the beginning.<span class="intersentencespace"></span> <a href="https://www.learnenough.com/command-line-tutorial#table-less_commands" class="hyperref">Table&nbsp;<span class="ref">4</span></a> summarizes what are in my view the most important key combinations (i.e., the ones I think you need to be <em>dangerous</em>), but if you’re curious you can find a longer list of commands at the <a href="https://en.wikipedia.org/wiki/Less_(Unix)" target="_blank" rel="noopener">Wikipedia page on <code class="tt">less</code></a>.</p>
<p>I encourage you to get in the habit of using <code>less</code> as your go-to utility for looking at the contents of a file.<span class="intersentencespace"></span> The skills you develop have other applications as well; for example, the man pages (<a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="hyperref">Section&nbsp;<span class="ref">1.3</span></a>) use the same interface as <code>less</code>, so by learning about <code>less</code> you’ll get better at navigating the man pages as well.</p>
<div id="table-less_commands" data-tralics-id="uid139" data-number="4" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Command</strong></td>
<td class="align_left"><strong>Description</strong></td>
<td class="align_left"><strong>Example</strong></td>
</tr><tr><td class="align_left"><code class="tt">up &amp; down arrow keys</code></td>
<td class="align_left">Move up or down one line</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">spacebar</code></td>
<td class="align_left">Move forward one page</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">⌃F</code></td>
<td class="align_left">Move forward one page</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">⌃B</code></td>
<td class="align_left">Move back one page</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">G</code></td>
<td class="align_left">Move to end of file</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">1G</code></td>
<td class="align_left">Move to beginning of file</td>
<td class="align_left"></td>
</tr><tr><td class="align_left"><code class="tt">/&lt;string&gt;</code></td>
<td class="align_left">Search file for string</td>
<td class="align_left"><code>/rose</code></td>
</tr><tr><td class="align_left"><code class="tt">n</code></td>
<td class="align_left">Move to next search result</td>
</tr><tr><td class="align_left"><code class="tt">N</code></td>
<td class="align_left">Move to previous search result</td>
</tr><tr><td class="align_left"><code class="tt">q</code></td>
<td class="align_left">Quit <code>less</code></td>
</tr></tbody></table><div class="caption"><span class="header">Table 4: </span><span class="description">The most important <code>less</code> commands.
</span></div></div>
<div id="sec-exercises_summary_less" data-tralics-id="uid140" class="subsubsection" data-number="3.3.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_summary_less" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Run <code>less</code> on <code>sonnets.txt</code>.<span class="intersentencespace"></span> Go down three pages and then back up three pages.<span class="intersentencespace"></span> Go to the end of the file, then to the beginning, then quit. <span class="exercise" id="ex-less-pages"></span>
</li>
<li>Search for the string “All” (case-sensitive).<span class="intersentencespace"></span> Go forward a few occurrences, then back a few occurrences.<span class="intersentencespace"></span> Then go to the beginning of the file and count the occurrences by searching forward until you hit the end.<span class="intersentencespace"></span> Compare your count to the result of running <code>grep All sonnets.txt | wc</code>.<span class="intersentencespace"></span> (We’ll learn about <code>grep</code> in <a href="https://www.learnenough.com/command-line-tutorial#sec-grepping" class="hyperref">Section&nbsp;<span class="ref">3.4</span></a>.) <span class="exercise" id="ex-less-grep"></span>
</li>
<li>Using <code>less</code> and <code>/</code> (“slash”), find the sonnet that begins with the line “Let me not”.<span class="intersentencespace"></span> Are there any other occurrences of this string in the <em>Sonnets</em>?<span class="intersentencespace"></span> <em>Hint</em>: Press <code>n</code> to find the next occurrence (if any).<span class="intersentencespace"></span> <em>Extra credit</em>: <a href="https://youtu.be/bt7OynPUIY8" target="_blank" rel="noopener">Listen to the sonnet</a> in both modern and <a href="http://originalpronunciation.com/" target="_blank" rel="noopener">original pronunciation</a>.<span class="intersentencespace"></span> Which version’s rhyme scheme is better? <span class="exercise" id="ex-less-slash"></span>
</li>
<li>Because <code>man</code> uses <code>less</code>, we are now in a position to search man pages interactively.<span class="intersentencespace"></span> By searching for the string “sort” in the man page for <code>ls</code>, discover the option to sort files by size.<span class="intersentencespace"></span> What is the command to display the long form of files sorted so the largest files appear at the bottom?<span class="intersentencespace"></span> <em>Hint</em>: Use <code>ls -rtl</code> as a model. <span class="exercise" id="ex-man-slash"></span>
</li></ol>
</div></div>
<div id="sec-grepping" data-tralics-id="uid145" class="subsection" data-number="3.4"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-grepping" class="heading hyperref"><span class="number">3.4 </span>Grepping</a></h3>
<p>One of the most powerful tools for inspecting file contents is <code>grep</code>, which probably stands for something, but it’s not important what.<sup id="cha-0_footnote-ref-24" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-24" data-hasqtip="23">24</a></sup><span class="intersentencespace"></span> Indeed, <em>grep</em> is frequently used as a verb, as in “You should totally grep that file.”</p>
<p>The most common use of <code>grep</code> is just to search for a substring in a file.<span class="intersentencespace"></span> For example, we saw in <a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="hyperref">Section&nbsp;<span class="ref">3.3</span></a> how to use <code>less</code> to search for the string “rose” in Shakespeare’s sonnets.<span class="intersentencespace"></span> Using <code>grep</code>, we can find the references directly, as shown in <a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose" class="hyperref">Listing&nbsp;<span class="ref">16</span></a>.</p>
<div class="codelisting" id="code-grep_rose" data-tralics-id="uid147" data-number="16"><div class="heading"><span class="number">Listing 16:</span> 

<span class="description">Finding the occurrences of “rose” in Shakespeare’s sonnets.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep rose sonnets.txt
<span class="go">The rose looks fair, but fairer we it deem</span>
<span class="go">As the perfumed tincture of the roses.</span>
<span class="go">Die to themselves. Sweet roses do not so;</span>
<span class="go">Roses of shadow, since his rose is true?</span>
<span class="go">Which, like a canker in the fragrant rose,</span>
<span class="go">Nor praise the deep vermilion in the rose;</span>
<span class="go">The roses fearfully on thorns did stand,</span>
<span class="go"> Save thou, my rose, in it thou art my all.</span>
<span class="go">I have seen roses damask'd, red and white,</span>
<span class="go">But no such roses see I in her cheeks;</span>
</pre></div></div></div><p>With the command in <a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose" class="hyperref">Listing&nbsp;<span class="ref">16</span></a>, it appears that we are in a position to count the number of lines containing references to the word “rose” by piping to <code>wc</code> (as in <a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="hyperref">Section&nbsp;<span class="ref">3.3</span></a>), as shown in <a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose_wc" class="hyperref">Listing&nbsp;<span class="ref">17</span></a>.</p>
<div class="codelisting" id="code-grep_rose_wc" data-tralics-id="uid148" data-number="17"><div class="heading"><span class="number">Listing 17:</span> 

<span class="description">Piping the results of <code>grep</code> to <code>wc</code>.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep rose sonnets.txt <span class="p">|</span> wc
<span class="go">   10   82   419</span>
</pre></div></div></div><p><a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose_wc" class="hyperref">Listing&nbsp;<span class="ref">17</span></a> tells us that 10 lines contain “rose” (or “roses”, since “rose” is a substring of “roses”).<span class="intersentencespace"></span> But you may recall from <a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a> that Shakespeare’s first sonnet contains “Rose” with a <em>capital</em> “R”.<span class="intersentencespace"></span> Referring to <a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose" class="hyperref">Listing&nbsp;<span class="ref">16</span></a>, we see that this line has in fact been missed.<span class="intersentencespace"></span> This is because <code>grep</code> is case-sensitive by default, and “rose” doesn’t match “Rose”.</p>
<p>As you might suspect, <code>grep</code> has an option to perform case-insensitive matching as well.<span class="intersentencespace"></span> One way to figure it out is to search through the <code>man</code> page for <code>grep</code>:</p>
<ul>
<li>Type <code>man grep</code>
</li>
<li>Type <code>/case</code> and then return
</li>
<li>Read off the result (<a href="https://www.learnenough.com/command-line-tutorial#fig-man_grep" class="hyperref">Figure&nbsp;<span class="ref">19</span></a>)
</li></ul>
<p>(As noted briefly in <a href="https://www.learnenough.com/command-line-tutorial#sec-man_pages" class="hyperref">Section&nbsp;<span class="ref">1.3</span></a>, the man pages use the same interface as the <code>less</code> command we met in <a href="https://www.learnenough.com/command-line-tutorial#sec-less_is_more" class="hyperref">Section&nbsp;<span class="ref">3.3</span></a>, so we can search through them using&nbsp;<code>/</code>.)</p>
<div class="center figure" id="fig-man_grep" data-tralics-id="uid152" data-number="19">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/man_grep.png" alt="images/figures/man_grep"></div><div class="caption"><span class="header">Figure 19: </span><span class="description">The result of searching <code>man grep</code> for “case”.
</span></div></div>
<p>Applying the result of the above procedure yields <a href="https://www.learnenough.com/command-line-tutorial#code-grep_i_wc" class="hyperref">Listing&nbsp;<span class="ref">18</span></a>.<span class="intersentencespace"></span> Comparing the results of <a href="https://www.learnenough.com/command-line-tutorial#code-grep_i_wc" class="hyperref">Listing&nbsp;<span class="ref">18</span></a> with <a href="https://www.learnenough.com/command-line-tutorial#code-grep_rose_wc" class="hyperref">Listing&nbsp;<span class="ref">17</span></a>, we see that we now have 12 matching lines instead of only 10, so there must be a total of <span class="inline_math"><span class="MathJax_Preview" style="color: inherit; display: none;"></span><span class="MathJax_Error" id="MathJax-Element-2-Frame" tabindex="0" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/math&gt;" role="presentation" style="position: relative;"><span aria-hidden="true">[Math Processing Error]</span><span class="MJX_Assistive_MathML" role="presentation"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>12</mn><mo>−</mo><mn>10</mn><mo>=</mo><mn>2</mn></math></span></span><script type="math/tex" id="MathJax-Element-2"> 12-10=2 </script></span> lines containing “Rose” (but not “rose”) in the <em>Sonnets</em>.<sup id="cha-0_footnote-ref-25" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-25" data-hasqtip="24">25</a></sup></p>
<div class="codelisting" id="code-grep_i_wc" data-tralics-id="uid154" data-number="18"><div class="heading"><span class="number">Listing 18:</span> 

<span class="description">Doing a case-insensitive grep.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep -i rose sonnets.txt <span class="p">|</span> wc
<span class="go">   12   96   508</span>
</pre></div></div></div><p>The <code>grep</code> utility is insanely powerful, especially when combined with so-called <em>regular expressions</em>, but learning <code>grep</code> and <code>grep -i</code> are <em>almost</em> enough to be dangerous (including the important application of <em>grepping processes</em> (<a href="https://www.learnenough.com/command-line-tutorial#aside-ps_aux" class="hyperref">Box&nbsp;<span class="ref">10</span></a>)).<span class="intersentencespace"></span> We’ll see the third and final <code>grep</code> variant needed to be dangerous in <a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="hyperref">Section&nbsp;<span class="ref">4</span></a>.</p>
<div class="aside" id="aside-ps_aux" data-tralics-id="uid155" data-number="10"><div class="heading"><span class="number">Box 10.</span> 

<span class="description">Grepping processes</span></div>
<p>One of the many uses of <code class="tt">grep</code> is filtering the Unix <em>process list</em> for running programs that match a particular string.<span class="intersentencespace"></span> (On Unix-like systems such as Linux and macOS, user and system tasks each take place within a well-defined container called a <em>process</em>.)<span class="intersentencespace"></span> This is especially useful when there’s a rogue process on your system that needs to be killed.<span class="intersentencespace"></span> (A good way to find such processes is by running the <code class="tt">top</code> command, which shows the processes consuming the most resources.)</p>
<p>For example, at one point in the <a href="http://railstutorial.org/book" target="_blank" rel="noopener"><em>Ruby on Rails Tutorial</em> book</a>, it’s important to eliminate a program called <code class="tt">spring</code> from the process list.<span class="intersentencespace"></span> To do this, first the processes need to be found, and the way to see all the processes on your system is to use the <code class="tt">ps</code> command with the <code class="tt">aux</code> options:</p>
<pre> $ ps aux</pre>
<p>Per <a href="https://www.learnenough.com/command-line-tutorial#fig-y_u_no" class="hyperref">Figure&nbsp;<span class="ref">16</span></a>, <code class="tt">ps</code> is short for “process status”.<span class="intersentencespace"></span> And for <a href="http://www.freebsd.org/cgi/man.cgi?query=ps&amp;manpath=SuSE+Linux/i386+11.3" target="_blank" rel="noopener">confusing and obscure reasons</a>, options to <code class="tt">ps</code> aren’t written with a dash (so it’s <code class="tt">ps aux</code> instead of <code class="tt">ps -aux</code>).<span class="intersentencespace"></span> (How on earth are you supposed to know this?<span class="intersentencespace"></span> That’s what this tutorial is for.)</p>
<p>To filter the processes by program name, you pipe the results of <code class="tt">ps</code> through the <code class="tt">grep</code>:</p>
<pre> $ ps aux | grep spring
 ubuntu 12241 0.3 0.5 589960 178416 ? Ssl Sep20 1:46
 spring app | sample_app | started 7 hours ago</pre>
<p>The result shown gives some details about the process, but the most important thing is the first number, which is the <em>process id</em>, or pid (often pronounced to rhyme with “kid”).<span class="intersentencespace"></span> To eliminate an unwanted process, we use the <code class="tt">kill</code> command to issue the Unix terminate code (which <a href="https://en.wikipedia.org/wiki/Unix_signal#List_of_signals" target="_blank" rel="noopener">happens to be&nbsp;15</a>) to the pid:</p>
<pre> $ kill -15 12241</pre>
<p>This is the technique I recommend for killing individual processes, such as a rogue web server (with the pid found via <code class="tt">ps aux | grep server</code>), but sometimes it’s convenient to kill all the processes matching a particular process name, such as when you want to kill all the <code class="tt">spring</code> processes gunking up your system.<span class="intersentencespace"></span> In this case, you can kill all the processes with name <code class="tt">spring</code> using the <code class="tt">pkill</code> command as follows:</p>
<pre> $ pkill -15 -f spring</pre>
<p>Any time something isn’t behaving as expected, or a process appears to be frozen, it’s a good idea to run <code class="tt">top</code> or <code class="tt">ps aux</code> to see what’s going on, pipe <code class="tt">ps aux</code> through <code class="tt">grep</code> to select the suspected processes, and then run <code class="tt">kill -15 &lt;pid&gt;</code> or <code class="tt">pkill -15 -f &lt;name&gt;</code> to clear things up.</p>

</div>
<div id="sec-exercises_grep" data-tralics-id="uid156" class="subsubsection" data-number="3.4.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_grep" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>By searching <code>man grep</code> for “line number”, construct a command to find the line numbers in <code>sonnets.txt</code> where the string “rose” appears. <span class="exercise" id="ex-grep-command"></span>
</li>
<li>You should find that the last occurrences of “rose” is (via “roses”) on line 2203.<span class="intersentencespace"></span> Figure out how to go directly to this line when running <code>less sonnets.txt</code>.<span class="intersentencespace"></span> <em>Hint</em>: Recall from <a href="https://www.learnenough.com/command-line-tutorial#table-less_commands" class="hyperref">Table&nbsp;<span class="ref">4</span></a> that <code>1G</code> goes to the top of the file, i.e., line&nbsp;1.<span class="intersentencespace"></span> Similarly, <code>17G</code> goes to line&nbsp;17.<span class="intersentencespace"></span> Etc. <span class="exercise" id="ex-less-command-jump"></span>
</li>
<li>By piping the output of <code>grep</code> to <code>head</code>, print out the first (and <em>only</em> the first) line in <code>sonnets.txt</code> containing “rose”.<span class="intersentencespace"></span> <em>Hint</em>: Use the result of the second exercise in <a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_head_tails" class="hyperref">Section&nbsp;<span class="ref">3.2.2</span></a>. <span class="exercise" id="ex-grep-head"></span>
</li>
<li>In <a href="https://www.learnenough.com/command-line-tutorial#code-grep_i_wc" class="hyperref">Listing&nbsp;<span class="ref">18</span></a>, we saw two additional lines that case-insensitively matched “rose”.<span class="intersentencespace"></span> Execute a command confirming that both of the lines contain the string “Rose” (and not, e.g., “rOSe”).<span class="intersentencespace"></span> <em>Hint</em>: Use a case-sensitive <code>grep</code> for “Rose”. <span class="exercise" id="ex-grep-case"></span>
</li>
<li>You should find in the previous exercise that there are <em>three</em> lines matching “Rose” instead of the two you might have expected from <a href="https://www.learnenough.com/command-line-tutorial#code-grep_i_wc" class="hyperref">Listing&nbsp;<span class="ref">18</span></a>.<span class="intersentencespace"></span> This is because there is one line that contains both “Rose” <em>and</em> “rose”, and thus shows up in both <code>grep rose</code> and <code>grep -i rose</code>.<span class="intersentencespace"></span> Write a command confirming that the number of lines matching “Rose” but <em>not</em> matching “rose” is equal to the expected&nbsp;2.<span class="intersentencespace"></span> <em>Hint</em>: Pipe the result of <code>grep</code> to <code>grep -v</code>, and then pipe that result to&nbsp;<code>wc</code>.<span class="intersentencespace"></span> (What does <code>-v</code> do?<span class="intersentencespace"></span> Read the man page for <code>grep</code> (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>).) <span class="exercise" id="ex-grep-pipe-wc"></span>
</li></ol>
</div></div>
<div id="sec-summary_inspecting" data-tralics-id="uid162" class="subsection" data-number="3.5"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-summary_inspecting" class="heading hyperref"><span class="number">3.5 </span>Summary</a></h3>
<p>Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-inspecting_files" class="hyperref">Table&nbsp;<span class="ref">5</span></a>.</p>
<div id="table-inspecting_files" data-tralics-id="uid163" data-number="5" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Command</strong></td>
<td class="align_left"><strong>Description</strong></td>
<td class="align_left"><strong>Example</strong></td>
</tr><tr><td class="align_left"><code class="tt">curl</code></td>
<td class="align_left">Interact with URLs</td>
<td class="align_left"><code>$ curl -O example.com</code></td>
</tr><tr><td class="align_left"><code class="tt">which</code></td>
<td class="align_left">Locate a program on the path</td>
<td class="align_left"><code>$ which curl</code></td>
</tr><tr><td class="align_left"><code class="tt">head &lt;file&gt;</code></td>
<td class="align_left">Display first part of file</td>
<td class="align_left"><code>$ head foo</code></td>
</tr><tr><td class="align_left"><code class="tt">tail &lt;file&gt;</code></td>
<td class="align_left">Display last part of file</td>
<td class="align_left"><code>$ tail bar</code></td>
</tr><tr><td class="align_left"><code class="tt">wc &lt;file&gt;</code></td>
<td class="align_left">Count lines, words, bytes</td>
<td class="align_left"><code>$ wc foo</code></td>
</tr><tr><td class="align_left"><code class="tt">cmd1 | cmd2</code></td>
<td class="align_left">Pipe <code class="tt">cmd1</code> to <code class="tt">cmd2</code></td>
<td class="align_left"><code>$ head foo | wc</code></td>
</tr><tr><td class="align_left"><code class="tt">ping &lt;url&gt;</code></td>
<td class="align_left">Ping a server URL</td>
<td class="align_left"><code>$ ping google.com</code></td>
</tr><tr><td class="align_left"><code class="tt">less &lt;file&gt;</code></td>
<td class="align_left">View file contents interactively</td>
<td class="align_left"><code>$ less foo</code></td>
</tr><tr><td class="align_left"><code class="tt">grep &lt;string&gt; &lt;file&gt;</code></td>
<td class="align_left">Find string in file</td>
<td class="align_left"><code>$ grep foo bar.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">grep -i &lt;string&gt; &lt;file&gt;</code></td>
<td class="align_left">Find case-insensitively</td>
<td class="align_left"><code>$ grep -i foo bar.txt</code></td>
</tr><tr><td class="align_left"><code class="tt">ps</code></td>
<td class="align_left">Show processes</td>
<td class="align_left"><code>$ ps aux</code></td>
</tr><tr><td class="align_left"><code class="tt">top</code></td>
<td class="align_left">Show processes (sorted)</td>
<td class="align_left"><code>$ top</code></td>
</tr><tr><td class="align_left"><code class="tt">kill -&lt;level&gt; &lt;pid&gt;</code></td>
<td class="align_left">Kill a process</td>
<td class="align_left"><code>$ kill -15 24601</code></td>
</tr><tr><td class="align_left"><code class="tt">pkill -&lt;level&gt; -f &lt;name&gt;</code></td>
<td class="align_left">Kill matching processes</td>
<td class="align_left"><code>$ pkill -15 -f spring</code></td>
</tr></tbody></table><div class="caption"><span class="header">Table 5: </span><span class="description">Important commands from <a href="https://www.learnenough.com/command-line-tutorial#sec-inspecting_files" class="hyperref">Section&nbsp;<span class="ref">3</span></a>.
</span></div></div>
<div id="sec-exercises_inspecting" data-tralics-id="uid164" class="subsubsection" data-number="3.5.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_inspecting" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>The <code>history</code> command prints the history of commands in a particular terminal shell (subject to some limit, which is typically large).<span class="intersentencespace"></span> Pipe <code>history</code> to <code>less</code> to examine your command history.<span class="intersentencespace"></span> What was your 17th command? <span class="exercise" id="ex-history-pipe-grep"></span>
</li>
<li>By piping the output of <code>history</code> to <code>wc</code>, count how many commands you’ve executed so far. <span class="exercise" id="ex-history-pipe-wc"></span>
</li>
<li>One use of <code>history</code> is to grep your commands to find useful ones you’ve used before, with each command preceded by the corresponding number in the command history.<span class="intersentencespace"></span> By piping the output of <code>history</code> to <code>grep</code>, determine the number for the last occurrence of <code>curl</code>. <span class="exercise" id="ex-history-pipe-grep-curl"></span>
</li>
<li>In <a href="https://www.learnenough.com/command-line-tutorial#aside-repeating_commands" class="hyperref">Box&nbsp;<span class="ref">9</span></a>, we learned about <code>!!</code> (“bang bang”) to execute the previous command.<span class="intersentencespace"></span> Similarly, <code>!n</code> executes command number <code>n</code>, so that, e.g., <code>!17</code> executes the 17th command in the command history.<span class="intersentencespace"></span> Use the result from the previous exercise to re-run the last occurrence of <code>curl</code>. <span class="exercise" id="ex-bang-bang"></span>
</li>
<li>What do the <code>O</code> and <code>L</code> options in <a href="https://www.learnenough.com/command-line-tutorial#code-curl" class="hyperref">Listing&nbsp;<span class="ref">10</span></a> mean?<span class="intersentencespace"></span> <em>Hint</em>: Pipe the output of <code>curl -h</code> to <code>less</code> and search first for the string <code>-O</code> and then for the string <code>-L</code>. <span class="exercise" id="ex-curl-opts"></span>
</li></ol>
</div></div></div><div id="sec-directories" data-tralics-id="cid4" class="section" data-number="4"><h2><a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="heading hyperref"><span class="number">4 </span>Directories</a></h2>
<p>Having examined many of Unix utilities for dealing with files, the time has come to learn about <em>directories</em>, sometimes known by the synonym <em>folders</em> (<a href="https://www.learnenough.com/command-line-tutorial#fig-directory_folder" class="hyperref">Figure&nbsp;<span class="ref">20</span></a>).<span class="intersentencespace"></span> As we’ll see, many of the ideas developed in the context of files also apply to directories, but there are many differences as well.</p>
<p><em>Note</em>: Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-directories" class="hyperref">Table&nbsp;<span class="ref">6</span></a>.</p>
<div id="sec-structure" data-tralics-id="uid170" class="subsection" data-number="4.1"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-structure" class="heading hyperref"><span class="number">4.1 </span>Directory structure</a></h3>
<p>The structure of Unix-style directories is typically indicated using a list of directory names separated by forward slashes, which we can combine with the <code>ls</code> command (<a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="hyperref">Section&nbsp;<span class="ref">2.2</span></a>) like this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls /Users/mhartl/ruby
</pre></div></div>
<p>or like this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls /usr/local/bin
</pre></div></div>
<p>As seen in <a href="https://www.learnenough.com/command-line-tutorial#fig-directory_folder" class="hyperref">Figure&nbsp;<span class="ref">20</span></a>, these representations correspond to directories in a hierarchical filesystem, with (say) <code>mhartl</code> a subdirectory of <code>Users</code> and <code>ruby</code> a subdirectory of <code>mhartl</code>.</p>
<div class="center figure" id="fig-directory_folder" data-tralics-id="uid171" data-number="20">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/directory_folder.png" alt="images/figures/directory_folder"></div><div class="caption"><span class="header">Figure 20: </span><span class="description">The correspondence between folders &amp; directories.
</span></div></div>
<p>Conventions vary when speaking about directories: a <em>user directory</em> like <code>/Users/mhartl</code> would probably be read as “slash users slash mhartl” or “slash users mhartl”, whereas omitting the initial slash in spoken language is common for <em>system directories</em> such as <code>/usr/local/bin</code>, which would probably be pronounced “user local bin”.<span class="intersentencespace"></span> Because <em>all</em> Unix directories are ultimately subdirectories of the <em>root directory</em> <code>/</code> (pronounced “slash”), the leading and separator slashes are implied.<span class="intersentencespace"></span> <em>Note</em>: Referring to forward slashes incorrectly as “backslashes” is a <a href="https://m.xkcd.com/727/" target="_blank" rel="noopener">cause of suffering</a>, and should be strictly avoided.</p>
<p>The most important directory for a particular user is the <em>home directory</em>, which on my macOS system is <code>/Users/mhartl</code>, corresponding to my username (<code>mhartl</code>).<span class="intersentencespace"></span> The home directory can be specified as an <em>absolute path</em>, as in <code>/Users/mhartl</code>, or using the shorthand for the home directory is the tilde character&nbsp;<code>~</code> (which is typed using Shift-backtick, located just to the left of the number&nbsp;1 on most keyboards).<span class="intersentencespace"></span> As a result, the two paths shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-directory_folder" class="hyperref">Figure&nbsp;<span class="ref">20</span></a> are identical: <code>/Users/mhartl/ruby/projects</code> is the same as <code>~/ruby/projects</code>.<span class="intersentencespace"></span> (Amusingly, the reason the tilde character is used for the home directory is simply because the “Home” key was the same as the key for producing “~” on <a href="http://unix.stackexchange.com/questions/34196/why-was-chosen-to-represent-the-home-directory" target="_blank" rel="noopener">some early keyboards</a>.)</p>
<p>In addition to user directories, every Unix system has <em>system directories</em> for the programs essential for the computer’s normal operation.<span class="intersentencespace"></span> Modifying system files or directories requires special powers granted only to the <em>superuser</em>, known as <code>root</code>.<span class="intersentencespace"></span> (This use of “root” is unrelated to the “root directory” mentioned above.)<span class="intersentencespace"></span> The superuser is so powerful that it’s considered bad form to log in as <code>root</code>; instead, tasks executed as <code>root</code> should typically use the <code>sudo</code> command (<a href="https://www.learnenough.com/command-line-tutorial#aside-sudo" class="hyperref">Box&nbsp;<span class="ref">11</span></a>).<sup id="cha-0_footnote-ref-26" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-26" data-hasqtip="25">26</a></sup></p>
<div class="aside" id="aside-sudo" data-tralics-id="uid173" data-number="11"><div class="heading"><span class="number">Box 11.</span> 

<span class="description">“<code class="tt">sudo</code> make me a sandwich.”</span></div>
<p><code class="tt">sudo</code> gives ordinary users the power to execute commands as the superuser.<span class="intersentencespace"></span> For example, let’s try <code class="tt">touch</code>ing a file in the system directory <code class="tt">/opt</code> as follows:</p>
<pre> $ touch /opt/foo
 touch: /opt/foo: Permission denied</pre>
<p>Because normal users don’t have permission to modify <code class="tt">/opt</code>, the command fails, but it succeeds with <code class="tt">sudo</code>:</p>
<pre> $ sudo touch /opt/foo
 Password:</pre>
<p>As shown, after entering <code class="tt">sudo</code> we are prompted to enter our user password; if entered correctly, and if the user has been configured to have <code class="tt">sudo</code> privileges (which is the default on most desktop Unix systems), then the command will succeed.<span class="intersentencespace"></span> As shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-sandwich" class="hyperref">Figure&nbsp;<span class="ref">21</span></a>, this pattern of being denied at first, only to succeed using <code class="tt">sudo</code>, is a common theme in computing.</p>
<p>To check that the file really was created, we can <code class="tt">ls</code> it:</p>
<pre> $ ls -l /opt/foo
 -rw-r--r-- 1 root wheel 0 Jul 23 19:13 /opt/foo</pre>
<p>Note that (1) a normal user can <code class="tt">ls</code> a file in a system directory (without <code class="tt">sudo</code>) and (2) the name <code class="tt">root</code> appears in the listing, indicating that the superuser owns the file.<span class="intersentencespace"></span> (The meaning of the second term, <code class="tt">wheel</code>, is a little obscure, but you can learn about it on a site called, appropriately enough, <a href="http://superuser.com/questions/191955/what-is-the-wheel-user-in-os-x" target="_blank" rel="noopener">superuser</a>.)</p>
<p>To remove the file we just created, we again need superuser status:</p>
<pre> $ rm -f /opt/foo
 rm: /opt/foo: Permission denied
 $ sudo !!
 $ !ls
 ls: /opt/foo: No such file or directory</pre>
<p>Here the first <code class="tt">rm</code> fails, so we’ve run <code class="tt">sudo !!</code>, which runs <code class="tt">sudo</code> and then the previous command , and we’ve followed that up with <code class="tt">!ls</code>, which runs the previous <code class="tt">ls</code> command (<a href="https://www.learnenough.com/command-line-tutorial#aside-repeating_commands" class="hyperref">Box&nbsp;<span class="ref">9</span></a>).</p>
<p>It’s also worth noting the English pronunciation of something like <code class="tt">sudo !!</code>, which is important when communicating via spoken language.<span class="intersentencespace"></span> As noted in <a href="https://www.learnenough.com/command-line-tutorial#aside-repeating_commands" class="hyperref">Box&nbsp;<span class="ref">9</span></a>, <code class="tt">!!</code> is pronounced “bang bang”.<span class="intersentencespace"></span> <code class="tt">sudo</code>, meanwhile, is pronounced either “SOO-doo” or “SOO-doh”.<span class="intersentencespace"></span> Both pronunciations are common, though I prefer the former because the <code class="tt">do</code> in <code class="tt">sudo</code> is in fact just the English word “do”.<span class="intersentencespace"></span> Thus, my preferred pronunciation for <code class="tt">sudo !!</code> is “SOO-doo bang bang”.</p>
<p>By the way, the <code class="tt">su</code> in <code class="tt">sudo</code> <a href="https://pthree.org/2009/12/31/the-meaning-of-su/" target="_blank" rel="noopener">originally stood</a> for “super-user”, but over time its use expanded, and now is usually thought of as “substitute user”.<span class="intersentencespace"></span> <code class="tt">sudo</code> is therefore a contraction of “substitute user do”, with the substitute user being the superuser by default.<span class="intersentencespace"></span> Because the superuser can do anything, the command “sudo make me a sandwich” in <a href="https://www.learnenough.com/command-line-tutorial#fig-sandwich" class="hyperref">Figure&nbsp;<span class="ref">21</span></a> succeeds when a mere “make me a sandwich” does not.</p>

</div><div class="center figure" id="fig-sandwich" data-tralics-id="uid174" data-number="21">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/sandwich.png" alt="images/figures/sandwich"></div><div class="caption"><span class="header">Figure 21: </span><span class="description">“<a href="https://m.xkcd.com/149/" target="_blank" rel="noopener">Sandwich</a>” (via <a href="http://xkcd.com/" target="_blank" rel="noopener">xkcd</a>) derives humor from the behavior of <code>sudo</code>.
</span></div></div>
<div id="sec-exercises_structure" data-tralics-id="uid175" class="subsubsection" data-number="4.1.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_structure" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Write in words how you might speak the directory <code>~/foo/bar</code>. <span class="exercise" id="ex-speak-dir"></span>
</li>
<li>In <code>/Users/bill/sonnets</code>, what is the home directory?<span class="intersentencespace"></span> What is the username?<span class="intersentencespace"></span> Which directory is deepest in the hierarchy? <span class="exercise" id="ex-dir-comp"></span>
</li>
<li>For a user with username <code>bill</code>, how do <code>/Users/bill/sonnets</code> and <code>~/sonnets</code> differ (if at all)? <span class="exercise" id="ex-dir-username"></span>
</li></ol>
</div></div>
<div id="sec-making_directories" data-tralics-id="uid179" class="subsection" data-number="4.2"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-making_directories" class="heading hyperref"><span class="number">4.2 </span>Making directories</a></h3>
<p>So far in this tutorial, we’ve created (and removed) a large number of text files.<span class="intersentencespace"></span> The time has finally come to make a directory to contain them.<span class="intersentencespace"></span> Although most modern operating systems include a graphical interface for this task, the Unix way to do it is with <code>mkdir</code> (short for “make directory”, per <a href="https://www.learnenough.com/command-line-tutorial#fig-y_u_no" class="hyperref">Figure&nbsp;<span class="ref">16</span></a>):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> mkdir text_files
</pre></div></div>
<p>Having made the directory, we can move the text files there using a wildcard:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> mv *.txt text_files/
</pre></div></div>
<p>We can confirm the move worked by listing the directory:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls text_files/
<span class="go">sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt</span>
</pre></div></div>
<p>(Depending on how closely you’ve followed this tutorial, your results may vary.)</p>
<p>By default, running <code>ls</code> on a directory shows its <em>contents</em>, but we can show just the directory using the <code>-d</code> option:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -d text_files/
<span class="go">text_files/</span>
</pre></div></div>
<p>This usage is especially common with the <code>-l</code> option (<a href="https://www.learnenough.com/command-line-tutorial#sec-listing" class="hyperref">Section&nbsp;<span class="ref">2.2</span></a>):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> ls -ld text_files/
<span class="go">drwxr-xr-x 7 mhartl staff 238 Jul 24 18:07 text_files</span>
</pre></div></div>
<p>Finally, we can change directories using <code>cd</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd </span>text_files/
</pre></div></div>
<p>Note that <code>cd</code> typically supports tab completion, so (as described in <a href="https://www.learnenough.com/command-line-tutorial#aside-tab_completion" class="hyperref">Box&nbsp;<span class="ref">8</span></a>) we can actually type <code>cd tex⇥</code>.</p>
<p>After running <code>cd</code>, we can confirm that we’re in the correct directory using the “print working directory” command, <code>pwd</code>, together with another call to <code>ls</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
<span class="gp">$</span> ls
<span class="go">sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt</span>
</pre></div></div>
<p>These last steps of typing <code>pwd</code> to double-check the directory, and especially running <code>ls</code> to inspect the directory contents, are a matter of habit for many a grizzled command-line veteran.<span class="intersentencespace"></span> (Your result for <code>pwd</code> will, of course, be different, unless you happen to be using the username “mhartl” on macOS.)</p>
<div id="sec-exercises_making_dirctories" data-tralics-id="uid180" class="subsubsection" data-number="4.2.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_making_dirctories" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>What is the option for making intermediate directories as required, so that you can create, e.g., <code>~/foo</code> and <code>~/foo/bar</code> with a single command?<span class="intersentencespace"></span> <em>Hint</em>: Refer to the man page for <code>mkdir</code>. <span class="exercise" id="ex-mkdir-p"></span>
</li>
<li>Use the option from the previous exercise to make the directory <code>foo</code> and, within it, the directory <code>bar</code> (i.e., <code>~/foo/bar</code>) with a single command. <span class="exercise" id="ex-mkdir-heirarchy"></span>
</li>
<li>By piping the output of <code>ls</code> to <code>grep</code>, list everything in the home directory that contains the letter “o”. <span class="exercise" id="ex-ls-pipe-grep"></span>
</li></ol>
</div></div>
<div id="sec-navigating_directories" data-tralics-id="uid184" class="subsection" data-number="4.3"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-navigating_directories" class="heading hyperref"><span class="number">4.3 </span>Navigating directories</a></h3>
<p>We saw in <a href="https://www.learnenough.com/command-line-tutorial#sec-making_directories" class="hyperref">Section&nbsp;<span class="ref">4.2</span></a> how to use <code>cd</code> to change to a directory with a given name.<span class="intersentencespace"></span> This is one of the most common ways of navigating, but there are a couple of special forms worth knowing.<span class="intersentencespace"></span> The first is changing to the directory one level up in the hierarchy using <code>cd ..</code> (read “see-dee dot-dot”):</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
<span class="gp">$</span> <span class="nb">cd</span> ..
<span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl</span>
</pre></div></div>
<p>In this case, because <code>/Users/mhartl</code> is my <em>home directory</em>, we could have accomplished the same thing using <code>cd</code> by itself:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd </span>text_files/
<span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
<span class="gp">$</span> <span class="nb">cd</span>
<span class="gp">$</span><span class="nb"> pwd</span>
<span class="go">/Users/mhartl</span>
</pre></div></div>
<p>The reason this works is that <code>cd</code> by itself changes to the user’s home directory, wherever that is.<span class="intersentencespace"></span> This means that</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span>
</pre></div></div>
<p>and</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span> ~
</pre></div></div>
<p>are equivalent.</p>
<p>When changing directories, it’s frequently useful to be able to specify the home directory somehow.<span class="intersentencespace"></span> For example, suppose we make a second directory and cd into it:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl</span>
<span class="gp">$</span> mkdir second_directory
<span class="gp">$</span> <span class="nb">cd </span>second_directory/
</pre></div></div>
<p>Now if we want to change to the <code>text_files</code> directory, we can <code>cd</code> to <code>text_files</code> via the home directory&nbsp;<code>~</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/second_directory</span>
<span class="gp">$</span> <span class="nb">cd</span> ~/text_files
<span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
</pre></div></div>
<p>Incidentally, we’re now in a position to understand the prompts shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-command_exercise" class="hyperref">Figure&nbsp;<span class="ref">6</span></a>: I have my prompt configured to show the current directory, which might be something like <code>[~]</code>, <code>[ruby]</code>, or <code>[projects]</code>.<span class="intersentencespace"></span> (We’ll discuss how to customize the prompt in <a href="http://learnenough.com/text-editor-tutorial" target="_blank" rel="noopener"><em>Learn Enough Text Editor to Be Dangerous</em></a>.<span class="intersentencespace"></span> Especially eager (or impatient) readers can exercise their technical sophistication (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>) by <a href="http://lmgtfy.com/?q=bash+customize+prompt" target="_blank" rel="noopener">Googling for how to do it</a>.)</p>
<p>Closely related to <code>..</code> for “one directory up” is <code>.</code> (read “dot”) which means “the current directory”.<span class="intersentencespace"></span> The most common use of <code>.</code> is when moving or copying files to the current directory:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
<span class="gp">$</span> <span class="nb">cd</span> ~/second_directory
<span class="gp">$</span> ls
<span class="gp">$</span> cp ~/text_files/sonnets.txt .
<span class="gp">$</span> ls
<span class="go">sonnets.txt</span>
</pre></div></div>
<p>Note in that the first call to <code>ls</code> returns nothing, because <code>second_directory</code> is initially empty.</p>
<p>Another common use of <code>.</code> is in conjunction with the <code>find</code> command, which like <code>grep</code> is insanely powerful, but in my own use it looks like this 99% of the time:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span>
<span class="gp">$</span><span class="nb"> </span>find . -name <span class="s1">'*.txt'</span>
<span class="go">./text_files/sonnet_1.txt</span>
<span class="go">./text_files/sonnet_1_reversed.txt</span>
<span class="go">./text_files/sonnets.txt</span>
</pre></div></div>
<p>In words, what this does is find files whose names match the pattern <code>*.txt</code>, starting in the current directory&nbsp;<code>.</code> and then in its subdirectories.<sup id="cha-0_footnote-ref-27" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-27" data-hasqtip="26">27</a></sup><span class="intersentencespace"></span> The <code>find</code> utility is incredibly useful for finding a misplaced file at the command line.</p>
<p>Perhaps my favorite use of <code>.</code> is in “open dot”, which will work only on macOS:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span> ~/ruby/projects
<span class="gp">$</span> open .
</pre></div></div>
<p>The remarkable <code>open</code> command opens its argument using whatever the default program is for the given file or directory.<span class="intersentencespace"></span> (A similar command, <code>xdg-open</code>, works on some Linux systems.)<span class="intersentencespace"></span> For example, <code>open foo.pdf</code> would open the PDF file with the default viewer (which is Preview on most Macs).<span class="intersentencespace"></span> In the case of a directory such as <code>.</code>, that default program is the Finder, so <code>open .</code> produces a result like that shown in <a href="https://www.learnenough.com/command-line-tutorial#fig-directory_folder" class="hyperref">Figure&nbsp;<span class="ref">20</span></a>.</p>
<p>A final navigational command, and one of my personal favorites, is <code>cd -</code>, which cds to the <em>previous</em> directory, wherever it was:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/second_directory</span>
<span class="gp">$</span> <span class="nb">cd</span> ~/text_files
<span class="gp">$</span> <span class="nb">pwd</span>
<span class="go">/Users/mhartl/text_files</span>
<span class="gp">$</span> <span class="nb">cd</span> -
<span class="go">/Users/mhartl/second_directory</span>
</pre></div></div>
<p>I find that <code>cd -</code> is especially useful when combining commands, as described in <a href="https://www.learnenough.com/command-line-tutorial#aside-combining_commands" class="hyperref">Box&nbsp;<span class="ref">12</span></a>.</p>
<div class="aside" id="aside-combining_commands" data-tralics-id="uid186" data-number="12"><div class="heading"><span class="number">Box 12.</span> 

<span class="description">Combining commands</span></div>
<p>It’s often convenient to combine commands at the command line, such as when installing software using the Unix programs <code class="tt">configure</code> and <code class="tt">make</code>, which often appear in the following sequence:</p>
<pre> $ ./configure ; make ; make install</pre>
<p>This line runs the <code class="tt">configure</code> program from the current directory <code class="tt">.</code>, and then runs both <code class="tt">make</code> and <code class="tt">make install</code>.<span class="intersentencespace"></span> (You are not expected to understand what these programs do, and indeed they won’t work on your system unless you happen to be in the directory of a program designed to be installed this way.)<span class="intersentencespace"></span> Because they are separated by the semicolon character&nbsp;<code class="tt">;</code>, three commands are run in sequence.</p>
<p>An even better way to combine commands is with the double-ampersand <code class="tt">&amp;&amp;</code>:</p>
<pre> $ ./configure &amp;&amp; make &amp;&amp; make install</pre>
<p>The difference is that commands separated by <code class="tt">&amp;&amp;</code> run only if the previous command <em>succeeded</em>.<span class="intersentencespace"></span> In contrast, with <code class="tt">;</code> all the commands will be run no matter what, which will cause an error in the likely case that subsequent commands depend on the results of the ones that precede them.</p>
<p>I especially like to use <code class="tt">&amp;&amp;</code> in combination with <code class="tt">cd -</code>, which lets me do things like this:</p>
<pre> $ build_article &amp;&amp; cd ~/tau &amp;&amp; deploy &amp;&amp; cd -</pre>
<p>Again, you are not expected to understand these commands, but the general idea is that we can (say) build an article in one directory, <code class="tt">cd</code> to a different directory, deploy (perhaps a <a href="http://tauday.com/" target="_blank" rel="noopener">website</a>) to production, and then <code class="tt">cd</code> back (<code class="tt">cd -</code>) to the original directory, where we can continue our work.<span class="intersentencespace"></span> Then, if need be, we can just use up arrow (or one of the techniques from <a href="https://www.learnenough.com/command-line-tutorial#aside-repeating_commands" class="hyperref">Box&nbsp;<span class="ref">9</span></a>) to retrieve the whole thing and do it all again.</p>

</div>
<div id="sec-exercises_navigating_directories" data-tralics-id="uid187" class="subsubsection" data-number="4.3.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_navigating_directories" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>How do the effects of <code>cd</code> and <code>cd ~</code> differ (or do they)? <span class="exercise" id="ex-cd-tilde"></span>
</li>
<li>Change to <code>text_files</code>, then change to <code>second_directory</code> using the “one directory up” double dot operator&nbsp;<code>..</code>. <span class="exercise" id="ex-cd-double-dot"></span>
</li>
<li>From wherever you are, create an empty file called <code>nil</code> in <code>text_files</code> using whatever method you wish. <span class="exercise" id="ex-create-empty-file"></span>
</li>
<li>Remove <code>nil</code> from the previous exercise using a different path from the one you used before.<span class="intersentencespace"></span> (In other words, if you used the path <code>~/text_files</code> before, use something like <code>../text_files</code> or <code>/Users/&lt;username&gt;/text_files</code>.) <span class="exercise" id="ex-remove-empty-file"></span>
</li></ol>
</div></div>
<div id="sec-removing_directories" data-tralics-id="uid192" class="subsection" data-number="4.4"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-removing_directories" class="heading hyperref"><span class="number">4.4 </span>Renaming, copying, and deleting directories</a></h3>
<p>The commands for renaming, copying, and deleting directories are similar to those for files (<a href="https://www.learnenough.com/command-line-tutorial#sec-renaming_copying_deleting" class="hyperref">Section&nbsp;<span class="ref">2.3</span></a>), but there are some subtle differences worth noting.<span class="intersentencespace"></span> The command with the least difference is <code>mv</code>, which works just as it does for files:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> mkdir foo
<span class="gp">$</span> mv foo/ bar/
<span class="gp">$</span> <span class="nb">cd </span>foo/
<span class="go">-bash: cd: foo: No such file or directory</span>
<span class="gp">$</span> <span class="nb">cd </span>bar/
</pre></div></div>
<p>Here the error message indicates that the <code>mv</code> worked: there is no file or directory called <code>foo</code>.<span class="intersentencespace"></span> (The word <code>bash</code> refers to the shell being run, in this case the “<a href="https://www.gnu.org/software/bash/" target="_blank" rel="noopener">Bourne Again SHell</a>”.)<span class="intersentencespace"></span> The only minor subtlety is that the trailing slashes (which are typically added automatically by tab completion (<a href="https://www.learnenough.com/command-line-tutorial#aside-tab_completion" class="hyperref">Box&nbsp;<span class="ref">8</span></a>)) are optional:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span>
<span class="gp">$</span><span class="nb"> </span>mv bar foo
<span class="gp">$</span> <span class="nb">cd </span>foo/
</pre></div></div>
<p>This issue with trailing slashes never makes a difference with <code>mv</code>, but with <code>cp</code> it can be a source of much confusion.<span class="intersentencespace"></span> In particular, when copying directories, the behavior you usually want is to copy the directory contents <em>including</em> the directory, which on many systems requires leaving off the trailing slash.<span class="intersentencespace"></span> When copying files, you also need to include the <code>-r</code> option (for “recursive”).<span class="intersentencespace"></span> For example, to copy the contents of the <code>text_files</code> directory to a new directory called <code>foobar</code>, we use the command shown in <a href="https://www.learnenough.com/command-line-tutorial#code-cp_r" class="hyperref">Listing&nbsp;<span class="ref">19</span></a>.</p>
<div class="codelisting" id="code-cp_r" data-tralics-id="uid193" data-number="19"><div class="heading"><span class="number">Listing 19:</span> 

<span class="description">Copying a directory.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span>
<span class="gp">$</span><span class="nb"> </span>mkdir foobar
<span class="gp">$</span> <span class="nb">cd </span>foobar/
<span class="hll"><span class="gp">$</span> cp -r ../text_files .
</span><span class="gp">$</span> ls
<span class="go">text_files</span>
</pre></div></div></div><p>Note that we’ve used <code>..</code> to make a <em>relative path</em>, going up one directory and then into <code>text_files</code>.<span class="intersentencespace"></span> Also note the <em>lack</em> of a trailing slash in <code>cp -r ../text_files .</code>; if we included it, we’d get <a href="https://www.learnenough.com/command-line-tutorial#code-cp_slash" class="hyperref">Listing&nbsp;<span class="ref">20</span></a> instead.</p>
<div class="codelisting" id="code-cp_slash" data-tralics-id="uid194" data-number="20"><div class="heading"><span class="number">Listing 20:</span> 

<span class="description">Copying with a trailing slash.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="hll"><span class="gp">$</span> cp -r ../text_files/ .
</span><span class="gp">$</span> ls
<span class="go">sonnet_1.txt     sonnet_1_reversed.txt sonnets.txt   text_files</span>
</pre></div></div></div><p>In other words, <a href="https://www.learnenough.com/command-line-tutorial#code-cp_slash" class="hyperref">Listing&nbsp;<span class="ref">20</span></a> copies the individual files, but not the directory itself.<span class="intersentencespace"></span> As a result, I recommend always omitting the trailing slash, as in <a href="https://www.learnenough.com/command-line-tutorial#code-cp_r" class="hyperref">Listing&nbsp;<span class="ref">19</span></a>; if you want to copy only the files, be explicit using the star operator, as in:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> cp ../text_files/* .
</pre></div></div>
<p>Unlike renaming (moving) and copying directories, which use the same <code>mv</code> and <code>cp</code> commands used for files, in the case of removing directories there’s a dedicated command called <code>rmdir</code>.<span class="intersentencespace"></span> In my experience, though, it rarely works, as seen here:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd</span>
<span class="gp">$</span><span class="nb"> </span>rmdir second_directory
<span class="go">rmdir: second_directory/: Directory not empty</span>
</pre></div></div>
<p>The error message here is what happens 99% of the time when I try to remove directories, because <code>rmdir</code> requires the directory to be empty.<span class="intersentencespace"></span> You can of course empty it by hand (using <code>rm</code> repeatedly), but this is frequently inconvenient, and I almost always use the more powerful (but <em>much</em> more dangerous) “remove recursive force” command <code>rm -rf</code>, which removes a directory, its files, and any subdirectories without confirmation (<a href="https://www.learnenough.com/command-line-tutorial#code-rm_rf" class="hyperref">Listing&nbsp;<span class="ref">21</span></a>).</p>
<div class="codelisting" id="code-rm_rf" data-tralics-id="uid195" data-number="21"><div class="heading"><span class="number">Listing 21:</span> 

<span class="description">Using <code>rm -rf</code> to remove a directory.</span>
</div>

<div class="code"><div class="highlight"><pre><span class="gp">$</span> rm -rf second_directory/
<span class="gp">$</span> ls second_directory
<span class="go">ls: second_directory: No such file or directory</span>
</pre></div></div></div><p>As the error message from <code>ls</code> in <a href="https://www.learnenough.com/command-line-tutorial#code-rm_rf" class="hyperref">Listing&nbsp;<span class="ref">21</span></a> indicates (“No such file or directory”), our use of <code>rm -rf</code> succeeded in removing the directory.</p>
<p>The powerful command <code>rm -rf</code> is too convenient to ignore, but remember: “<a href="https://en.wikipedia.org/wiki/Uncle_Ben#.22With_great_power_comes_great_responsibility.22" target="_blank" rel="noopener">With great power comes great responsibility</a>” (<a href="https://www.learnenough.com/command-line-tutorial#fig-spider_man" class="hyperref">Figure&nbsp;<span class="ref">22</span></a>).<sup id="cha-0_footnote-ref-28" class="footnote"><a href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-28" data-hasqtip="27">28</a></sup></p>
<div class="center figure" id="fig-spider_man" data-tralics-id="uid197" data-number="22">
<div class="graphics image"><img src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/spider_man.jpg" alt="images/figures/spider_man"></div><div class="caption"><span class="header">Figure 22: </span><span class="description">This <a href="https://en.wikipedia.org/wiki/Spider-Man" target="_blank" rel="noopener">superhero</a> understands how to use the power of <code>rm -rf</code> responsibly.
</span></div></div>
<div id="sec-grep_redux" data-tralics-id="uid198" class="subsubsection" data-number="4.4.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-grep_redux" class="heading">Grep redux</a></h4>
<p>Now that we know a little about directories, we are in a position to add a useful <code>grep</code> variation to our toolkit from <a href="https://www.learnenough.com/command-line-tutorial#sec-grepping" class="hyperref">Section&nbsp;<span class="ref">3.4</span></a>.<span class="intersentencespace"></span> As with <code>cp</code> and <code>rm</code>, <code>grep</code> takes a “recursive” option, <code>-r</code>, which in this case greps through a directory’s files and the files in its subdirectories.<span class="intersentencespace"></span> This is incredibly useful when you’re looking for a string in a file somewhere in a hierarchy of directories, but you’re not sure where the file is.<span class="intersentencespace"></span> Here’s the setup, which puts the word “<a href="http://dictionary.reference.com/browse/sesquipedalian" target="_blank" rel="noopener">sesquipedalian</a>” in a file called <code>long_word.txt</code>:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> <span class="nb">cd </span>text_files/
<span class="gp">$</span> mkdir foo
<span class="gp">$</span> <span class="nb">cd </span>foo/
<span class="gp">$</span> <span class="nb">echo </span>sesquipedalian &gt; long_word.txt
<span class="gp">$</span> <span class="nb">cd</span>
</pre></div></div>
<p>The final <code>cd</code> puts us back in the home directory.<span class="intersentencespace"></span> Suppose we now want to find the file containing “sesquipedalian”.<span class="intersentencespace"></span> The way <em>not</em> to do it is this:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep sesquipedalian text_files
<span class="go">grep: text_files: Is a directory</span>
</pre></div></div>
<p>Here <code>grep</code>’s error message indicates that the command didn’t work, but adding <code>-r</code> does the trick:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep -r sesquipedalian text_files
<span class="go">text_files/foo/long_word.txt:sesquipedalian</span>
</pre></div></div>
<p>Because case rarely matters, I recommend making a habit of adding the <code>-i</code> option when grepping recursively, as follows:</p>
<div class="code"><div class="highlight"><pre><span class="gp">$</span> grep -ri sesquipedalian text_files
<span class="go">text_files/foo/long_word.txt:sesquipedalian</span>
</pre></div></div>
<p>Armed with <code>grep -ri</code>, we are now equipped to find strings of our choice in arbitrarily deep hierarchies of directories.</p>
</div>
<div id="sec-exercises_mv_cp_rmdir" data-tralics-id="uid199" class="subsubsection" data-number="4.4.2"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_mv_cp_rmdir" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Make a directory <code>foo</code> with a subdirectory <code>bar</code>, then rename the subdirectory to <code>baz</code>. <span class="exercise" id="ex-mkdir-sub-rm"></span>
</li>
<li>Copy all the files in <code>text_files</code>, <em>with</em> directory, into <code>foo</code>. <span class="exercise" id="ex-copy-recursive"></span>
</li>
<li>Copy all the files in <code>text_files</code>, <em>without</em> directory, into <code>bar</code>. <span class="exercise" id="ex-copy-not-recursive"></span>
</li>
<li>Remove <code>foo</code> and everything in it using a single command. <span class="exercise" id="ex-rm-dir"></span>
</li></ol>
</div></div>
<div id="sec-summary_directories" data-tralics-id="uid204" class="subsection" data-number="4.5"><h3><a href="https://www.learnenough.com/command-line-tutorial#sec-summary_directories" class="heading hyperref"><span class="number">4.5 </span>Summary</a></h3>
<p>Important commands from this section are summarized in <a href="https://www.learnenough.com/command-line-tutorial#table-directories" class="hyperref">Table&nbsp;<span class="ref">6</span></a>.</p>
<div id="table-directories" data-tralics-id="uid205" data-number="6" class="table"><table class="tabular">
<tbody><tr class="bottom_border"><td class="align_left"><strong>Command</strong></td>
<td class="align_left"><strong>Description</strong></td>
<td class="align_left"><strong>Example</strong></td>
</tr><tr><td class="align_left"><code class="tt">mkdir &lt;name&gt;</code></td>
<td class="align_left">Make directory with name</td>
<td class="align_left"><code>$ mkdir foo</code></td>
</tr><tr><td class="align_left"><code class="tt">pwd</code></td>
<td class="align_left">Print working directory</td>
<td class="align_left"><code>$ pwd</code></td>
</tr><tr><td class="align_left"><code class="tt">cd &lt;dir&gt;</code></td>
<td class="align_left">Change to &lt;dir&gt;</td>
<td class="align_left"><code>$ cd foo/</code></td>
</tr><tr><td class="align_left"><code class="tt">cd ~/&lt;dir&gt;</code></td>
<td class="align_left">cd relative to home</td>
<td class="align_left"><code>$ cd ~/foo/</code></td>
</tr><tr><td class="align_left"><code class="tt">cd</code></td>
<td class="align_left">Change to home directory</td>
<td class="align_left"><code>$ cd</code></td>
</tr><tr><td class="align_left"><code class="tt">cd -</code></td>
<td class="align_left">Change to previous directory</td>
<td class="align_left"><code>$ cd &amp;&amp; pwd &amp;&amp; cd -</code></td>
</tr><tr><td class="align_left"><code class="tt">.</code><span class="intersentencespace"></span></td>
<td class="align_left">The current directory</td>
<td class="align_left"><code>$ cp ~/foo.txt .</code><span class="intersentencespace"></span></td>
</tr><tr><td class="align_left"><code class="tt">..</code><span class="intersentencespace"></span></td>
<td class="align_left">One directory up</td>
<td class="align_left"><code>$ cd ..</code></td>
</tr><tr><td class="align_left"><code class="tt">find</code></td>
<td class="align_left">Find files &amp; directories</td>
<td class="align_left"><code>$ find .<span class="intersentencespace"></span> -name foo*.*</code></td>
</tr><tr><td class="align_left"><code class="tt">cp -r &lt;old&gt; &lt;new&gt;</code></td>
<td class="align_left">Copy recursively</td>
<td class="align_left"><code>$ cp -r ~/foo .</code><span class="intersentencespace"></span></td>
</tr><tr><td class="align_left"><code class="tt">rmdir &lt;dir&gt;</code></td>
<td class="align_left">Remove (empty) dir</td>
<td class="align_left"><code>$ rmdir foo/</code></td>
</tr><tr><td class="align_left"><code class="tt">rm -rf &lt;dir&gt;</code></td>
<td class="align_left">Remove dir &amp; contents</td>
<td class="align_left"><code>$ rm -rf foo/</code></td>
</tr><tr><td class="align_left"><code class="tt">grep -ri &lt;string&gt; &lt;dir&gt;</code></td>
<td class="align_left">Grep recursively (case-insensitive)</td>
<td class="align_left"><code>$ grep -ri foo bar/</code></td>
</tr></tbody></table><div class="caption"><span class="header">Table 6: </span><span class="description">Important commands from <a href="https://www.learnenough.com/command-line-tutorial#sec-directories" class="hyperref">Section&nbsp;<span class="ref">4</span></a>.
</span></div></div>
<div id="sec-exercises_summary_directories" data-tralics-id="uid206" class="subsubsection" data-number="4.5.1"><h4><a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_summary_directories" class="heading">Exercises</a></h4>
<p> </p><div class="society-note">
<p>Solutions to exercises are available for free at <a href="http://www.learnenough.com/solutions" target="_blank" rel="noopener">learnenough.com/solutions</a> with any Learn Enough purchase.<span class="intersentencespace"></span> To see other people’s answers and to record your own, join the <a href="http://learnenough.com/society" target="_blank" rel="noopener">Learn Enough Society</a> at <a href="http://learnenough.com/society" target="_blank" rel="noopener">learnenough.com/society</a>.<span class="intersentencespace"></span>  </p></div>
<ol>
<li>Starting in your home directory, execute a single command-line command to make a directory <code>foo</code>, change into it, create a file <code>bar</code> with content “baz”, print out <code>bar</code>’s contents, and then <code>cd</code> back to the directory you came from.<span class="intersentencespace"></span> <em>Hint</em>: Combine the commands as described in <a href="https://www.learnenough.com/command-line-tutorial#aside-combining_commands" class="hyperref">Box&nbsp;<span class="ref">12</span></a>. <span class="exercise" id="ex-combined-commands"></span>
</li>
<li>What happens when you run the previous command again?<span class="intersentencespace"></span> How many of the commands executed?<span class="intersentencespace"></span> Why? <span class="exercise" id="ex-combined-commands-again"></span>
</li>
<li>Explain why the command <code>rm -rf /</code> is unbelievably dangerous, and why you should never type it into a terminal window, not even as a joke. <span class="exercise" id="ex-rm-f-danger"></span>
</li>
<li>How can the previous command be made even more dangerous?<span class="intersentencespace"></span> <em>Hint</em>: Refer to <a href="https://www.learnenough.com/command-line-tutorial#aside-sudo" class="hyperref">Box&nbsp;<span class="ref">11</span></a>.<span class="intersentencespace"></span> (This command is so dangerous you shouldn’t even <em>think</em> it, much less type it.) <span class="exercise" id="ex-rm-f-more-danger"></span>
</li></ol>
</div></div></div><div id="sec-conclusion" data-tralics-id="cid5" class="section" data-number="5"><h2><a href="https://www.learnenough.com/command-line-tutorial#sec-conclusion" class="heading hyperref"><span class="number">5 </span>Conclusion</a></h2>
<p>Congratulations!<span class="intersentencespace"></span> You’ve officially learned enough command line to be <em>dangerous</em>.<span class="intersentencespace"></span> Of course, this is only one step on a longer journey, both toward command-line excellence (<a href="https://www.learnenough.com/command-line-tutorial#aside-additional_resources" class="hyperref">Box&nbsp;<span class="ref">13</span></a>) and software development wizardry.<span class="intersentencespace"></span> As you proceed on this journey, you will probably discover that learning computer magic can be exciting and empowering, but it can also be <em>hard</em>.<span class="intersentencespace"></span> Indeed, you may already have discovered this fact, either on your own or while doing this tutorial.<span class="intersentencespace"></span> To those brave magicians-in-training who wish to proceed, I offer the following sequence, which is currently in preparation:</p>
<ol>
<li><strong>Developer Fundamentals</strong>
<ol>
<li><a href="http://www.learnenough.com/command-line-tutorial" target="_blank" rel="noopener"><em>Learn Enough Command Line to Be Dangerous</em></a> (you are here)
</li>
<li><a href="http://www.learnenough.com/text-editor-tutorial" target="_blank" rel="noopener"><em>Learn Enough Text Editor to Be Dangerous</em></a>
</li>
<li><a href="http://www.learnenough.com/git-tutorial" target="_blank" rel="noopener"><em>Learn Enough Git to Be Dangerous</em></a>
</li></ol>
</li>
<li><strong>Web Basics</strong>
<ol>
<li><a href="http://www.learnenough.com/html-tutorial" target="_blank" rel="noopener"><em>Learn Enough HTML to Be Dangerous</em></a>
</li>
<li><a href="http://www.learnenough.com/css-and-layout-tutorial" target="_blank" rel="noopener"><em>Learn Enough CSS &amp; Layout to Be Dangerous</em></a>
</li>
<li><a href="http://www.learnenough.com/javascript-tutorial" target="_blank" rel="noopener"><em>Learn Enough JavaScript to Be Dangerous</em></a>
</li></ol>
</li>
<li><strong>Intro Ruby Web Development</strong>
<ol>
<li><a href="http://www.learnenough.com/ruby-tutorial" target="_blank" rel="noopener"><em>Learn Enough Ruby to Be Dangerous</em></a>
</li>
<li><a href="http://www.learnenough.com/sinatra-tutorial" target="_blank" rel="noopener"><em>Learn Enough Sinatra to Be Dangerous</em></a>
</li>
<li><a href="http://www.learnenough.com/ruby-on-rails-tutorial" target="_blank" rel="noopener"><em>Learn Enough Ruby on Rails to Be Dangerous</em></a>
</li></ol>
</li>
<li><strong>Professional Ruby Web Development</strong>
<ul>
<li><a href="http://www.railstutorial.org/" target="_blank" rel="noopener"><em>The Ruby on Rails Tutorial</em></a>
</li></ul>
</li></ol>
<p>Only the first three titles and the last title in the above list are complete, but all the other links go to landing pages where you can sign up to be notified when the next tutorial in the sequence is ready.<span class="intersentencespace"></span> See you there!</p>
<div class="aside" id="aside-additional_resources" data-tralics-id="uid225" data-number="13"><div class="heading"><span class="number">Box 13.</span> 

<span class="description">Additional resources</span></div>
<p>I recommend following the <em>Learn Enough</em> sequence, as it represents the shortest path to technical proficiency and software development skills, but at some point you’ll probably want to expand your command-line skills as well.<span class="intersentencespace"></span> When that time comes, I recommend consulting this list, which consists mainly of resources recommended by readers of the present tutorial:</p>
<ul>
<li><a href="http://conqueringthecommandline.com/" target="_blank" rel="noopener"><em>Conquering the Command Line</em></a> book and screencasts by Mark Bates (which like the present tutorial is available for free <a href="http://conqueringthecommandline.com/book" target="_blank" rel="noopener">online</a>)
</li>
<li><a href="https://www.edx.org/course/introduction-linux-linuxfoundationx-lfs101x-2" target="_blank" rel="noopener">edX course on Linux</a>
</li>
<li><a href="https://www.codecademy.com/learn/learn-the-command-line" target="_blank" rel="noopener">Codecademy course on the command line</a>
</li>
<li>The similarly named <a href="http://cli.learncodethehardway.org/book/" target="_blank" rel="noopener"><em>The Command Line Crash Course</em></a> and <a href="http://www.vikingcodeschool.com/web-development-basics/a-command-line-crash-course" target="_blank" rel="noopener"><em>A Command Line Crash Course</em></a>
</li>
<li><a href="http://linuxcommand.org/lc3_learning_the_shell.php" target="_blank" rel="noopener"><em>Learning the Shell</em></a>
</li></ul>

</div><p><small></small><small><em>Learn Enough Command Line to Be Dangerous</em></small><small>.<span class="intersentencespace"></span> Copyright © 2015 by Michael Hartl.</small></p>
<p>If you enjoyed this tutorial, please <a href="https://www.amazon.com/dp/B01KG84X44" target="_blank" rel="noopener">leave a review at Amazon</a>.<span class="intersentencespace"></span> Thanks!</p>
</div><div id="cha-0_footnotes">
  <ol class="footnotes" style="display: none;">
    <li id="cha-0_footnote-1">As discussed in <a href="https://www.learnenough.com/command-line-tutorial#sec-basics" class="hyperref">Section&nbsp;<span class="ref">1</span></a>, this statement applies to the <a href="http://www.catb.org/esr/writings/taoup/html/" target="_blank" rel="noopener"><em>Unix tradition</em></a>, which is the principal computing tradition behind the Internet and the World Wide Web, and the tradition followed by this tutorial.<span class="intersentencespace"></span> In addition to being important for developers, knowing the command line is also essential for <a href="https://en.wikipedia.org/wiki/System_administrator" target="_blank" rel="noopener">system administrators</a> (sysadmins).&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-1">↑</a></li>
    <li id="cha-0_footnote-2">In a fairly typical turn of events, the name <em>Unix</em> started as a <a href="http://www.catb.org/jargon/html/U/Unix.html" target="_blank" rel="noopener">pun</a> on a rival system called <em>Multics</em>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-2">↑</a></li>
    <li id="cha-0_footnote-3">An IDE, or <em>integrated development environment</em>, integrates several development tools (such as a command line and a text editor) into one application.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-3">↑</a></li>
    <li id="cha-0_footnote-4">An option is sometimes also called a <em>flag</em>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-4">↑</a></li>
    <li id="cha-0_footnote-5">For example, when developing web applications, in addition to my main command-line tab I often have separate tabs for running a <a href="https://www.railstutorial.org/book/beginning#sec-rails_server" target="_blank" rel="noopener">local web server</a> and an <a href="https://www.railstutorial.org/book/static_pages#sec-our_first_test" target="_blank" rel="noopener">automated test suite</a>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-5">↑</a></li>
    <li id="cha-0_footnote-6">There are subtle differences between the two cases, but they aren’t important at the level of this tutorial.<span class="intersentencespace"></span> Use your technical sophistication (<a href="https://www.learnenough.com/command-line-tutorial#aside-technical_sophistication" class="hyperref">Box&nbsp;<span class="ref">5</span></a>) if you’re curious.<span class="intersentencespace"></span> <em>Hint</em>: <a href="http://lmgtfy.com/?q=command+line+shell+single+double+quote+differences" target="_blank" rel="noopener">Google searches</a> are your friends.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-6">↑</a></li>
    <li id="cha-0_footnote-7">Image retrieved from https://www.flickr.com/photos/pheezy/5875298232 on 2015-07-19.<span class="intersentencespace"></span> Copyright © 2011 by Evan P. Cordes and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by/2.0/" target="_blank" rel="noopener">Creative Commons Attribution 2.0 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-7">↑</a></li>
    <li id="cha-0_footnote-8">Many introductions to the command line cover elements of the shell that require knowledge of a text editor—knowledge which (as noted in the introduction) this tutorial does <em>not</em> assume.<span class="intersentencespace"></span> As a result, we’ll defer these important topics to the follow-on tutorials to this one (<a href="https://www.learnenough.com/command-line-tutorial#sec-conclusion" class="hyperref">Section&nbsp;<span class="ref">5</span></a>), starting with <a href="http://learnenough.com/text-editor-tutorial" target="_blank" rel="noopener"><em>Learn Enough Text Editor to Be Dangerous</em></a>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-8">↑</a></li>
    <li id="cha-0_footnote-9">Image retrieved from https://commons.wikimedia.org/wiki/File:Jazz_at_Knicks_man_to_man_defense.jpg on 2015-07-22.<span class="intersentencespace"></span> Copyright © 2005 by Lordcolus and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by/2.0/" target="_blank" rel="noopener">Creative Commons Attribution 2.0 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-9">↑</a></li>
    <li id="cha-0_footnote-10">Copyright © Randall Munroe and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by-nc/2.5/" target="_blank" rel="noopener">Creative Commons Attribution-NonCommercial 2.5 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-10">↑</a></li>
    <li id="cha-0_footnote-11">There are also commands for moving one <em>word</em> at a time (<code class="tt">ESC F</code> and <code class="tt">ESC B</code>), but I hardly ever use them myself, so it’s clear they are not required to be <em>dangerous</em>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-11">↑</a></li>
    <li id="cha-0_footnote-12">Note that the <a href="http://originalpronunciation.com/" target="_blank" rel="noopener">Original Pronunciation</a> (OP) of Shakespearean English is different from modern pronunciation.<span class="intersentencespace"></span> Generally speaking, Shakespeare’s sonnets include many word pairs that don’t rhyme in modern English but do in OP.<span class="intersentencespace"></span> In the case of <a href="https://www.learnenough.com/command-line-tutorial#fig-sonnet_1" class="hyperref">Figure&nbsp;<span class="ref">12</span></a>, the word “memory” should be pronounced “MEM-or-aye”, leading to a rhyme between lines 2 and 4 (ending in <em>die</em> and <em>memory</em>, respectively).<span class="intersentencespace"></span> Image retrieved from https://commons.wikimedia.org/wiki/File:Sonnet_1.jpg on 2015-07-20.<span class="intersentencespace"></span> This work is in the public domain and can be used without restriction.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-12">↑</a></li>
    <li id="cha-0_footnote-13">Some keyboards lack an Option key, so obviously this trick won’t work on such systems.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-13">↑</a></li>
    <li id="cha-0_footnote-14">Image retrieved from https://www.flickr.com/photos/tiffanyday/4076289684 on 2015-07-22.<span class="intersentencespace"></span> Copyright 2009 by Tiffa Day and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by/2.0/" target="_blank" rel="noopener">Creative Commons Attribution 2.0 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-14">↑</a></li>
    <li id="cha-0_footnote-15"><p>From the essay “<a href="http://www.paulgraham.com/say.html" target="_blank" rel="noopener">What You Can’t Say</a>” by <a href="http://paulgraham.com/" target="_blank" rel="noopener">Paul Graham</a> (2004).<span class="intersentencespace"></span> As Graham <a href="http://www.paulgraham.com/saynotes.html" target="_blank" rel="noopener">notes</a>:</p>
<blockquote class="quotation">
<p>The verb “diff” is computer jargon, but it’s the only word with exactly the sense I want.<span class="intersentencespace"></span> It comes from the Unix <code class="tt">diff</code> utility, which yields a list of all the differences between two files.<span class="intersentencespace"></span> More generally it means an unselective and microscopically thorough comparison between two versions of something.<span class="intersentencespace"></span></p>
</blockquote>&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-15">↑</a></li>
    <li id="cha-0_footnote-16">A <em>bit</em> is one piece of yes-or-no information (such as a 1 or a 0), and a <em>byte</em> is eight bits.<span class="intersentencespace"></span> Bytes are probably most familiar from “megabytes” and “gigabytes”, which represent a million and a billion bytes, respectively.<span class="intersentencespace"></span> (The <a href="https://en.wikipedia.org/wiki/Megabyte" target="_blank" rel="noopener">official story</a> is a little more complicated, but level of detail here is certainly enough to be <em>dangerous</em>.)&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-16">↑</a></li>
    <li id="cha-0_footnote-17">URL is short for <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Locator" target="_blank" rel="noopener">Uniform Resource Locator</a>, and in practice usually just means “web address”.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-17">↑</a></li>
    <li id="cha-0_footnote-18"><a href="https://m.xkcd.com/1475/" target="_blank" rel="noopener">Technically</a>, <code>which</code> locates a file on the user’s <em>path</em>, which is a list of directories where executable programs are located.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-18">↑</a></li>
    <li id="cha-0_footnote-19">If for any reason using <code>curl</code> fails, you can always visit the URL in a browser and the use <strong>File &gt; Save As</strong> feature to save it to your local disk.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-19">↑</a></li>
    <li id="cha-0_footnote-20">Having known about <code>ls -a</code> and <code>ls -rtl</code> for a while—which together yield the suggestive command <code>ls -artl</code>—one day I decided to add an “h”’ (for <a href="http://mhartl.com/" target="_blank" rel="noopener">obvious reasons</a>).<span class="intersentencespace"></span> This is actually how I accidentally discovered the useful <code>-h</code> option some years ago.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-20">↑</a></li>
    <li id="cha-0_footnote-21">On some systems, apparently they’re <a href="http://unix.stackexchange.com/questions/604/isnt-less-just-more" target="_blank" rel="noopener">exactly the same program</a>, so <code>less</code> really is <code>more</code> (or, more accurately, <code>more</code> is <code>less</code>).&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-21">↑</a></li>
    <li id="cha-0_footnote-22">Image retrieved from https://commons.wikimedia.org/wiki/File:Tudor_Rose.svg on 2015-07-21.<span class="intersentencespace"></span> Copyright © 2011 by Sodacan and used unaltered under the <a href="https://creativecommons.org/licenses/by-sa/2.0/" target="_blank" rel="noopener">Creative Commons Attribution-ShareAlike 2.0 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-22">↑</a></li>
    <li id="cha-0_footnote-23">Although Shakespeare’s sonnets are undated, most of them were probably composed during the reign of <a href="https://en.wikipedia.org/wiki/Elizabeth_I_of_England" target="_blank" rel="noopener">Queen Elizabeth</a>, whose <a href="https://en.wikipedia.org/wiki/Tudor_dynasty" target="_blank" rel="noopener">royal house</a> adopted a rose (<a href="https://www.learnenough.com/command-line-tutorial#fig-tudor_rose" class="hyperref">Figure&nbsp;<span class="ref">18</span></a>) as its <a href="https://en.wikipedia.org/wiki/Heraldry" target="_blank" rel="noopener">heraldic emblem</a>.<span class="intersentencespace"></span> Given this context, Shakespeare’s choice of floral imagery isn’t surprising, but in fact only a few commentators on the <em>Sonnets</em> have <a href="https://hankwhittemore.wordpress.com/tag/sonnet-1/" target="_blank" rel="noopener">noticed</a> the seemingly obvious reference.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-23">↑</a></li>
    <li id="cha-0_footnote-24">It comes from “<strong>g</strong>lobally search a <strong>r</strong>egular <strong>e</strong>xpression and <strong>p</strong>rint”, but <a href="http://www.urbandictionary.com/define.php?term=slartibartfast" target="_blank" rel="noopener">I told you it wasn’t important</a>.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-24">↑</a></li>
    <li id="cha-0_footnote-25">Actually, “ROSE”, “RoSE”, “rOSE”, etc., all match as well, but “Rose” is the likeliest candidate.<span class="intersentencespace"></span> Confirming this hunch is left as an exercise (<a href="https://www.learnenough.com/command-line-tutorial#sec-exercises_grep" class="hyperref">Section&nbsp;<span class="ref">3.4.1</span></a>).&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-25">↑</a></li>
    <li id="cha-0_footnote-26">Copyright © Randall Munroe and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by-nc/2.5/" target="_blank" rel="noopener">Creative Commons Attribution-NonCommercial 2.5 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-26">↑</a></li>
    <li id="cha-0_footnote-27">My directory has a huge number of text files, ’cause that’s just how I roll, so the command I ran was actually <code>find .<span class="intersentencespace"></span> -name ’*.txt’ | grep text_files</code>, which filters out anything that doesn’t match the directory being used in this tutorial.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-27">↑</a></li>
    <li id="cha-0_footnote-28">Image retrieved from https://www.flickr.com/photos/whatleydude/13950241545 on 2015-07-22.<span class="intersentencespace"></span> Copyright © 2014 by James Whatley and used unaltered under the terms of the <a href="https://creativecommons.org/licenses/by/2.0/" target="_blank" rel="noopener">Creative Commons Attribution 2.0 Generic</a> license.&nbsp;<a class="arrow" href="https://www.learnenough.com/command-line-tutorial#cha-0_footnote-ref-28">↑</a></li>
  </ol>
</div></div></div></div>
</div>
<div id="exerciseAnswerTmpl" style="display:none">
<div class="j_exercise-answer">
<form action="https://www.learnenough.com/" class="j_exercise-answer-form" data-exercise-id="${exercise_id}" method="post">
<textarea name="text" rows="10">${answer_text}</textarea>
<div class="exercise-answer-edit">
<div class="exercise-answer-edit-controls">
<label class="fancyCheckLabel">
Share with other members
{{if make_public}}
<input checked="" id="make_public" name="make_public" type="checkbox">
{{else}}
<input id="make_public" name="make_public" type="checkbox">
{{/if}}
<label></label>
</label>
<a class="j_cancel" href="javascript:void(0)">
<button class="btn-small danger">Cancel</button>
</a>
<input class="btn-small" type="submit" value="save">
</div>
<div class="exercise-answer-edit-help">
Formatting:
<a target="_blank" href="https://help.github.com/articles/basic-writing-and-formatting-syntax/">Basic Help</a>
<a target="_blank" href="https://help.github.com/articles/creating-and-highlighting-code-blocks/">Advanced</a>
</div>
</div>
</form>
<div class="j_exercise-answer-text">
<h5>Your Answer</h5>
<div class="exercise-answer">{{html answer_html}}</div>
<div class="exercise-answer-actions">
{{if make_public}}
<span>PUBLIC</span>
{{/if}}
<a class="j_edit" href="javascript://">
<i class="fa fa-edit"></i>
Edit Answer
</a>
<a href="https://www.learnenough.com/exercise_answers/$%7Btoken%7D">
<i class="fa fa-link"></i>
Link
</a>
</div>
</div>
<div class="exercise-answer-bar">
<a class="exercise-answer-all" href="https://www.learnenough.com/exercise_answers?book_id=164&amp;label=${exercise_id}" id="j_answer_public" style="display:{{if public_count == 0}}none{{/if}}">
<i class="fa fa-users"></i>
View all &nbsp;(
<span id="j_answer_public_count">${ public_count }</span>
)
</a>
<a class="j_exercise-answer-btn exercise-answer-add" href="javascript://">
<i class="fa fa-plus"></i>
Add Answer
</a>
</div>
</div>
</div>
<script>
  $(function(){
    Book.init({
      title: "Learn Enough Command Line to Be Dangerous",
      path: "",
      slug: "learn_enough_command_line",
      isCourse: true,
      singlePage: true,
      splitReadingSections: false,
      hasSubscription: false,
      book_id: 164,
      location: {id:1456, type: "Chapter" },
      chapter_id: 1456,
      labelLookup: {"":"command_line","sec-running_a_terminal":"command_line/basics/running_a_terminal","fig-terminal_window":"command_line/basics/running_a_terminal","cha-0_footnote-ref-4":"command_line/basics/running_a_terminal","fig-anatomy":"command_line/basics/running_a_terminal","aside-prompt":"command_line/basics/running_a_terminal","sec-exercises_terminal":"command_line/basics/running_a_terminal","ex-terminal_tabs":"command_line/basics/running_a_terminal","cha-0_footnote-ref-5":"command_line/basics/running_a_terminal","ex-new_tab":"command_line/basics/running_a_terminal","fig-command_exercise":"command_line/basics/running_a_terminal","fig-terminal_tabs":"command_line/basics/running_a_terminal","fig-terminal_menu":"command_line/basics/running_a_terminal","sec-our_first_command":"command_line/basics/our_first_command","cha-0_footnote-ref-6":"command_line/basics/our_first_command","code-hello_goodbye":"command_line/basics/our_first_command","cha-0_footnote-ref-7":"command_line/basics/our_first_command","fig-cat_in_box":"command_line/basics/our_first_command","aside-getting_out_of_trouble":"command_line/basics/our_first_command","sec-exercises_first_command":"command_line/basics/our_first_command","ex-hello-world":"command_line/basics/our_first_command","ex-echo-hello":"command_line/basics/our_first_command","sec-man_pages":"command_line/basics/man_pages","cha-0_footnote-ref-8":"command_line/basics/man_pages","code-man_echo":"command_line/basics/man_pages","fig-man_to_man":"command_line/basics/man_pages","cha-0_footnote-ref-9":"command_line/basics/man_pages","code-man_man":"command_line/basics/man_pages","cha-0_footnote-ref-10":"command_line/basics/man_pages","aside-technical_sophistication":"command_line/basics/man_pages","fig-tech_support_cheat_sheet":"command_line/basics/man_pages","sec-exercises_man":"command_line/basics/man_pages","ex-man-echo":"command_line/basics/man_pages","ex-man-echo-hello":"command_line/basics/man_pages","code-with_newline":"command_line/basics/man_pages","code-without_newline":"command_line/basics/man_pages","sec-editing_the_line":"command_line/basics/editing_the_line","table-keyboard_symbols":"command_line/basics/editing_the_line","cha-0_footnote-ref-11":"command_line/basics/editing_the_line","code-sonnet_1":"command_line/basics/editing_the_line","cha-0_footnote-ref-12":"command_line/basics/editing_the_line","cha-0_footnote-ref-13":"command_line/basics/editing_the_line","fig-sonnet_1":"command_line/basics/editing_the_line","code-sonnet_1_edited":"command_line/basics/editing_the_line","sec-exercises_editing_the_line":"command_line/basics/editing_the_line","ex-up-arrow":"command_line/basics/editing_the_line","ex-archaic":"command_line/basics/editing_the_line","sec-cleaning_up":"command_line/basics/cleaning_up","sec-exercises_cleaning":"command_line/basics/cleaning_up","ex-clear-contents":"command_line/basics/cleaning_up","ex-new-tab":"command_line/basics/cleaning_up","sec-summary_cleaning":"command_line/basics/summary_cleaning","table-man_echo":"command_line/basics/summary_cleaning","sec-exercises_summary_basics":"command_line/basics/summary_cleaning","ex-command-man":"command_line/basics/summary_cleaning","ex-man-sleep":"command_line/basics/summary_cleaning","ex-out-of-trouble":"command_line/basics/summary_cleaning","sec-basics":"command_line/basics","fig-command_line_command":"command_line/basics","cha-0_footnote-ref-2":"command_line/basics","cha-0_footnote-ref-3":"command_line/basics","aside-virtual_machine":"command_line/basics","fig-virtual_machine":"command_line/basics","sec-redirecting_and_appending":"command_line/manipulating_files/redirecting_and_appending","cha-0_footnote-ref-14":"command_line/manipulating_files/redirecting_and_appending","fig-cat":"command_line/manipulating_files/redirecting_and_appending","cha-0_footnote-ref-15":"command_line/manipulating_files/redirecting_and_appending","sec-exercises_redirecting_appending":"command_line/manipulating_files/redirecting_and_appending","ex-echo-redirect":"command_line/manipulating_files/redirecting_and_appending","ex-echo-redirect-append":"command_line/manipulating_files/redirecting_and_appending","ex-echo-redirect-reverse":"command_line/manipulating_files/redirecting_and_appending","sec-listing":"command_line/manipulating_files/listing","code-ls":"command_line/manipulating_files/listing","fig-file_listing":"command_line/manipulating_files/listing","code-ls_no_such":"command_line/manipulating_files/listing","aside-foo_bar":"command_line/manipulating_files/listing","cha-0_footnote-ref-16":"command_line/manipulating_files/listing","sec-hidden_files":"command_line/manipulating_files/listing","sec-exercises_listing":"command_line/manipulating_files/listing","ex-command-list-all-prefix":"command_line/manipulating_files/listing","ex-command-list-all-contains":"command_line/manipulating_files/listing","ex-command-list-all-reverse-mod":"command_line/manipulating_files/listing","sec-renaming_copying_deleting":"command_line/manipulating_files/renaming_copying_deleting","aside-tab_completion":"command_line/manipulating_files/renaming_copying_deleting","sec-unix_terseness":"command_line/manipulating_files/renaming_copying_deleting","fig-y_u_no":"command_line/manipulating_files/renaming_copying_deleting","sec-exercises_manipulating":"command_line/manipulating_files/renaming_copying_deleting","ex-echo-redirect-cp":"command_line/manipulating_files/renaming_copying_deleting","ex-cat-redirect-cp":"command_line/manipulating_files/renaming_copying_deleting","ex-cat-combine":"command_line/manipulating_files/renaming_copying_deleting","ex-rm-f":"command_line/manipulating_files/renaming_copying_deleting","sec-summary_manipulating":"command_line/manipulating_files/summary_manipulating","table-manipulating_files":"command_line/manipulating_files/summary_manipulating","sec-exercises_summary_manipulating":"command_line/manipulating_files/summary_manipulating","fig-copy_paste_sonnet_1":"command_line/manipulating_files/summary_manipulating","ex-copy-paste-to-file":"command_line/manipulating_files/summary_manipulating","ex-create-rename-copy":"command_line/manipulating_files/summary_manipulating","ex-list-wildcard":"command_line/manipulating_files/summary_manipulating","ex-rm-wildcard":"command_line/manipulating_files/summary_manipulating","sec-manipulating_files":"command_line/manipulating_files","aside-speak_geek":"command_line/manipulating_files","fig-bug_feature":"command_line/manipulating_files","sec-downloading_a_file":"command_line/inspecting_files/downloading_a_file","cha-0_footnote-ref-17":"command_line/inspecting_files/downloading_a_file","cha-0_footnote-ref-18":"command_line/inspecting_files/downloading_a_file","cha-0_footnote-ref-19":"command_line/inspecting_files/downloading_a_file","code-curl":"command_line/inspecting_files/downloading_a_file","aside-repeating_commands":"command_line/inspecting_files/downloading_a_file","sec-exercises_downloading":"command_line/inspecting_files/downloading_a_file","ex-curl-i":"command_line/inspecting_files/downloading_a_file","ex-ls-long-form":"command_line/inspecting_files/downloading_a_file","ex-ls-human":"command_line/inspecting_files/downloading_a_file","cha-0_footnote-ref-20":"command_line/inspecting_files/downloading_a_file","ex-ls-hartl":"command_line/inspecting_files/downloading_a_file","sec-making_heads_and_tails":"command_line/inspecting_files/making_heads_and_tails","code-head":"command_line/inspecting_files/making_heads_and_tails","code-tail":"command_line/inspecting_files/making_heads_and_tails","sec-wordcount_and_pipes":"command_line/inspecting_files/making_heads_and_tails","code-head_redirected":"command_line/inspecting_files/making_heads_and_tails","code-head_pipe":"command_line/inspecting_files/making_heads_and_tails","sec-exercises_head_tails":"command_line/inspecting_files/making_heads_and_tails","ex-tail-wc":"command_line/inspecting_files/making_heads_and_tails","ex-head-n":"command_line/inspecting_files/making_heads_and_tails","ex-pipe-tail":"command_line/inspecting_files/making_heads_and_tails","ex-tail-f":"command_line/inspecting_files/making_heads_and_tails","sec-less_is_more":"command_line/inspecting_files/less_is_more","cha-0_footnote-ref-21":"command_line/inspecting_files/less_is_more","fig-tudor_rose":"command_line/inspecting_files/less_is_more","cha-0_footnote-ref-22":"command_line/inspecting_files/less_is_more","cha-0_footnote-ref-23":"command_line/inspecting_files/less_is_more","code-rose_search":"command_line/inspecting_files/less_is_more","table-less_commands":"command_line/inspecting_files/less_is_more","sec-exercises_summary_less":"command_line/inspecting_files/less_is_more","ex-less-pages":"command_line/inspecting_files/less_is_more","ex-less-grep":"command_line/inspecting_files/less_is_more","ex-less-slash":"command_line/inspecting_files/less_is_more","ex-man-slash":"command_line/inspecting_files/less_is_more","sec-grepping":"command_line/inspecting_files/grepping","cha-0_footnote-ref-24":"command_line/inspecting_files/grepping","code-grep_rose":"command_line/inspecting_files/grepping","code-grep_rose_wc":"command_line/inspecting_files/grepping","fig-man_grep":"command_line/inspecting_files/grepping","cha-0_footnote-ref-25":"command_line/inspecting_files/grepping","code-grep_i_wc":"command_line/inspecting_files/grepping","aside-ps_aux":"command_line/inspecting_files/grepping","sec-exercises_grep":"command_line/inspecting_files/grepping","ex-grep-command":"command_line/inspecting_files/grepping","ex-less-command-jump":"command_line/inspecting_files/grepping","ex-grep-head":"command_line/inspecting_files/grepping","ex-grep-case":"command_line/inspecting_files/grepping","ex-grep-pipe-wc":"command_line/inspecting_files/grepping","sec-summary_inspecting":"command_line/inspecting_files/summary_inspecting","table-inspecting_files":"command_line/inspecting_files/summary_inspecting","sec-exercises_inspecting":"command_line/inspecting_files/summary_inspecting","ex-history-pipe-grep":"command_line/inspecting_files/summary_inspecting","ex-history-pipe-wc":"command_line/inspecting_files/summary_inspecting","ex-history-pipe-grep-curl":"command_line/inspecting_files/summary_inspecting","ex-bang-bang":"command_line/inspecting_files/summary_inspecting","ex-curl-opts":"command_line/inspecting_files/summary_inspecting","sec-inspecting_files":"command_line/inspecting_files","sec-structure":"command_line/directories/structure","fig-directory_folder":"command_line/directories/structure","cha-0_footnote-ref-26":"command_line/directories/structure","aside-sudo":"command_line/directories/structure","fig-sandwich":"command_line/directories/structure","sec-exercises_structure":"command_line/directories/structure","ex-speak-dir":"command_line/directories/structure","ex-dir-comp":"command_line/directories/structure","ex-dir-username":"command_line/directories/structure","sec-making_directories":"command_line/directories/making_directories","sec-exercises_making_dirctories":"command_line/directories/making_directories","ex-mkdir-p":"command_line/directories/making_directories","ex-mkdir-heirarchy":"command_line/directories/making_directories","ex-ls-pipe-grep":"command_line/directories/making_directories","sec-navigating_directories":"command_line/directories/navigating_directories","cha-0_footnote-ref-27":"command_line/directories/navigating_directories","aside-combining_commands":"command_line/directories/navigating_directories","sec-exercises_navigating_directories":"command_line/directories/navigating_directories","ex-cd-tilde":"command_line/directories/navigating_directories","ex-cd-double-dot":"command_line/directories/navigating_directories","ex-create-empty-file":"command_line/directories/navigating_directories","ex-remove-empty-file":"command_line/directories/navigating_directories","sec-removing_directories":"command_line/directories/removing_directories","code-cp_r":"command_line/directories/removing_directories","code-cp_slash":"command_line/directories/removing_directories","code-rm_rf":"command_line/directories/removing_directories","cha-0_footnote-ref-28":"command_line/directories/removing_directories","fig-spider_man":"command_line/directories/removing_directories","sec-grep_redux":"command_line/directories/removing_directories","sec-exercises_mv_cp_rmdir":"command_line/directories/removing_directories","ex-mkdir-sub-rm":"command_line/directories/removing_directories","ex-copy-recursive":"command_line/directories/removing_directories","ex-copy-not-recursive":"command_line/directories/removing_directories","ex-rm-dir":"command_line/directories/removing_directories","sec-summary_directories":"command_line/directories/summary_directories","table-directories":"command_line/directories/summary_directories","sec-exercises_summary_directories":"command_line/directories/summary_directories","ex-combined-commands":"command_line/directories/summary_directories","ex-combined-commands-again":"command_line/directories/summary_directories","ex-rm-f-danger":"command_line/directories/summary_directories","ex-rm-f-more-danger":"command_line/directories/summary_directories","sec-directories":"command_line/directories","sec-conclusion":"command_line/conclusion","aside-additional_resources":"command_line/conclusion","title_page":"command_line","table_of_contents":"command_line","aside-computer_magic":"command_line","cha-0_footnote-ref-1":"command_line","fig-dev_desktop":"command_line","cha-0_footnotes":"command_line","cha-0_footnote-1":"command_line","cha-0_footnote-2":"command_line","cha-0_footnote-3":"command_line","cha-0_footnote-4":"command_line","cha-0_footnote-5":"command_line","cha-0_footnote-6":"command_line","cha-0_footnote-7":"command_line","cha-0_footnote-8":"command_line","cha-0_footnote-9":"command_line","cha-0_footnote-10":"command_line","cha-0_footnote-11":"command_line","cha-0_footnote-12":"command_line","cha-0_footnote-13":"command_line","cha-0_footnote-14":"command_line","cha-0_footnote-15":"command_line","cha-0_footnote-16":"command_line","cha-0_footnote-17":"command_line","cha-0_footnote-18":"command_line","cha-0_footnote-19":"command_line","cha-0_footnote-20":"command_line","cha-0_footnote-21":"command_line","cha-0_footnote-22":"command_line","cha-0_footnote-23":"command_line","cha-0_footnote-24":"command_line","cha-0_footnote-25":"command_line","cha-0_footnote-26":"command_line","cha-0_footnote-27":"command_line","cha-0_footnote-28":"command_line"},
      footnotes: {"cha-0_footnote-1":"As discussed in \u003ca href=\"command_line_fragment.html#sec-basics\" class=\"hyperref\"\u003eSection \u003cspan class=\"ref\"\u003e1\u003c/span\u003e\u003c/a\u003e, this statement applies to the \u003ca href=\"http://www.catb.org/esr/writings/taoup/html/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cem\u003eUnix tradition\u003c/em\u003e\u003c/a\u003e, which is the principal computing tradition behind the Internet and the World Wide Web, and the tradition followed by this tutorial.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e In addition to being important for developers, knowing the command line is also essential for \u003ca href=\"https://en.wikipedia.org/wiki/System_administrator\" target=\"_blank\" rel=\"noopener\"\u003esystem administrators\u003c/a\u003e (sysadmins). ","cha-0_footnote-2":"In a fairly typical turn of events, the name \u003cem\u003eUnix\u003c/em\u003e started as a \u003ca href=\"http://www.catb.org/jargon/html/U/Unix.html\" target=\"_blank\" rel=\"noopener\"\u003epun\u003c/a\u003e on a rival system called \u003cem\u003eMultics\u003c/em\u003e. ","cha-0_footnote-3":"An IDE, or \u003cem\u003eintegrated development environment\u003c/em\u003e, integrates several development tools (such as a command line and a text editor) into one application. ","cha-0_footnote-4":"An option is sometimes also called a \u003cem\u003eflag\u003c/em\u003e. ","cha-0_footnote-5":"For example, when developing web applications, in addition to my main command-line tab I often have separate tabs for running a \u003ca href=\"https://www.railstutorial.org/book/beginning#sec-rails_server\" target=\"_blank\" rel=\"noopener\"\u003elocal web server\u003c/a\u003e and an \u003ca href=\"https://www.railstutorial.org/book/static_pages#sec-our_first_test\" target=\"_blank\" rel=\"noopener\"\u003eautomated test suite\u003c/a\u003e. ","cha-0_footnote-6":"There are subtle differences between the two cases, but they aren’t important at the level of this tutorial.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Use your technical sophistication (\u003ca href=\"command_line_fragment.html#aside-technical_sophistication\" class=\"hyperref\"\u003eBox \u003cspan class=\"ref\"\u003e5\u003c/span\u003e\u003c/a\u003e) if you’re curious.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e \u003cem\u003eHint\u003c/em\u003e: \u003ca href=\"http://lmgtfy.com/?q=command+line+shell+single+double+quote+differences\" target=\"_blank\" rel=\"noopener\"\u003eGoogle searches\u003c/a\u003e are your friends. ","cha-0_footnote-7":"Image retrieved from https://www.flickr.com/photos/pheezy/5875298232 on 2015-07-19.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Copyright © 2011 by Evan P. Cordes and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution 2.0 Generic\u003c/a\u003e license. ","cha-0_footnote-8":"Many introductions to the command line cover elements of the shell that require knowledge of a text editor—knowledge which (as noted in the introduction) this tutorial does \u003cem\u003enot\u003c/em\u003e assume.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e As a result, we’ll defer these important topics to the follow-on tutorials to this one (\u003ca href=\"command_line_fragment.html#sec-conclusion\" class=\"hyperref\"\u003eSection \u003cspan class=\"ref\"\u003e5\u003c/span\u003e\u003c/a\u003e), starting with \u003ca href=\"http://learnenough.com/text-editor-tutorial\" target=\"_blank\" rel=\"noopener\"\u003e\u003cem\u003eLearn Enough Text Editor to Be Dangerous\u003c/em\u003e\u003c/a\u003e. ","cha-0_footnote-9":"Image retrieved from https://commons.wikimedia.org/wiki/File:Jazz_at_Knicks_man_to_man_defense.jpg on 2015-07-22.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Copyright © 2005 by Lordcolus and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution 2.0 Generic\u003c/a\u003e license. ","cha-0_footnote-10":"Copyright © Randall Munroe and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.5/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution-NonCommercial 2.5 Generic\u003c/a\u003e license. ","cha-0_footnote-11":"There are also commands for moving one \u003cem\u003eword\u003c/em\u003e at a time (\u003ccode class=\"tt\"\u003eESC F\u003c/code\u003e and \u003ccode class=\"tt\"\u003eESC B\u003c/code\u003e), but I hardly ever use them myself, so it’s clear they are not required to be \u003cem\u003edangerous\u003c/em\u003e. ","cha-0_footnote-12":"Note that the \u003ca href=\"http://originalpronunciation.com/\" target=\"_blank\" rel=\"noopener\"\u003eOriginal Pronunciation\u003c/a\u003e (OP) of Shakespearean English is different from modern pronunciation.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Generally speaking, Shakespeare’s sonnets include many word pairs that don’t rhyme in modern English but do in OP.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e In the case of \u003ca href=\"command_line_fragment.html#fig-sonnet_1\" class=\"hyperref\"\u003eFigure \u003cspan class=\"ref\"\u003e12\u003c/span\u003e\u003c/a\u003e, the word “memory” should be pronounced “MEM-or-aye”, leading to a rhyme between lines 2 and 4 (ending in \u003cem\u003edie\u003c/em\u003e and \u003cem\u003ememory\u003c/em\u003e, respectively).\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Image retrieved from https://commons.wikimedia.org/wiki/File:Sonnet_1.jpg on 2015-07-20.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e This work is in the public domain and can be used without restriction. ","cha-0_footnote-13":"Some keyboards lack an Option key, so obviously this trick won’t work on such systems. ","cha-0_footnote-14":"Image retrieved from https://www.flickr.com/photos/tiffanyday/4076289684 on 2015-07-22.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Copyright 2009 by Tiffa Day and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution 2.0 Generic\u003c/a\u003e license. ","cha-0_footnote-15":"\u003cp\u003eFrom the essay “\u003ca href=\"http://www.paulgraham.com/say.html\" target=\"_blank\" rel=\"noopener\"\u003eWhat You Can’t Say\u003c/a\u003e” by \u003ca href=\"http://paulgraham.com\" target=\"_blank\" rel=\"noopener\"\u003ePaul Graham\u003c/a\u003e (2004).\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e As Graham \u003ca href=\"http://www.paulgraham.com/saynotes.html\" target=\"_blank\" rel=\"noopener\"\u003enotes\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote class=\"quotation\"\u003e\n\u003cp\u003eThe verb “diff” is computer jargon, but it’s the only word with exactly the sense I want.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e It comes from the Unix \u003ccode class=\"tt\"\u003ediff\u003c/code\u003e utility, which yields a list of all the differences between two files.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e More generally it means an unselective and microscopically thorough comparison between two versions of something.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e\u003c/p\u003e\n\u003c/blockquote\u003e ","cha-0_footnote-16":"A \u003cem\u003ebit\u003c/em\u003e is one piece of yes-or-no information (such as a 1 or a 0), and a \u003cem\u003ebyte\u003c/em\u003e is eight bits.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Bytes are probably most familiar from “megabytes” and “gigabytes”, which represent a million and a billion bytes, respectively.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e (The \u003ca href=\"https://en.wikipedia.org/wiki/Megabyte\" target=\"_blank\" rel=\"noopener\"\u003eofficial story\u003c/a\u003e is a little more complicated, but level of detail here is certainly enough to be \u003cem\u003edangerous\u003c/em\u003e.) ","cha-0_footnote-17":"URL is short for \u003ca href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Locator\" target=\"_blank\" rel=\"noopener\"\u003eUniform Resource Locator\u003c/a\u003e, and in practice usually just means “web address”. ","cha-0_footnote-18":"\u003ca href=\"https://m.xkcd.com/1475/\" target=\"_blank\" rel=\"noopener\"\u003eTechnically\u003c/a\u003e, \u003ccode\u003ewhich\u003c/code\u003e locates a file on the user’s \u003cem\u003epath\u003c/em\u003e, which is a list of directories where executable programs are located. ","cha-0_footnote-19":"If for any reason using \u003ccode\u003ecurl\u003c/code\u003e fails, you can always visit the URL in a browser and the use \u003cstrong\u003eFile \u0026gt; Save As\u003c/strong\u003e feature to save it to your local disk. ","cha-0_footnote-20":"Having known about \u003ccode\u003els -a\u003c/code\u003e and \u003ccode\u003els -rtl\u003c/code\u003e for a while—which together yield the suggestive command \u003ccode\u003els -artl\u003c/code\u003e—one day I decided to add an “h”’ (for \u003ca href=\"http://mhartl.com/\" target=\"_blank\" rel=\"noopener\"\u003eobvious reasons\u003c/a\u003e).\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e This is actually how I accidentally discovered the useful \u003ccode\u003e-h\u003c/code\u003e option some years ago. ","cha-0_footnote-21":"On some systems, apparently they’re \u003ca href=\"http://unix.stackexchange.com/questions/604/isnt-less-just-more\" target=\"_blank\" rel=\"noopener\"\u003eexactly the same program\u003c/a\u003e, so \u003ccode\u003eless\u003c/code\u003e really is \u003ccode\u003emore\u003c/code\u003e (or, more accurately, \u003ccode\u003emore\u003c/code\u003e is \u003ccode\u003eless\u003c/code\u003e). ","cha-0_footnote-22":"Image retrieved from https://commons.wikimedia.org/wiki/File:Tudor_Rose.svg on 2015-07-21.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Copyright © 2011 by Sodacan and used unaltered under the \u003ca href=\"https://creativecommons.org/licenses/by-sa/2.0/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution-ShareAlike 2.0 Generic\u003c/a\u003e license. ","cha-0_footnote-23":"Although Shakespeare’s sonnets are undated, most of them were probably composed during the reign of \u003ca href=\"https://en.wikipedia.org/wiki/Elizabeth_I_of_England\" target=\"_blank\" rel=\"noopener\"\u003eQueen Elizabeth\u003c/a\u003e, whose \u003ca href=\"https://en.wikipedia.org/wiki/Tudor_dynasty\" target=\"_blank\" rel=\"noopener\"\u003eroyal house\u003c/a\u003e adopted a rose (\u003ca href=\"command_line_fragment.html#fig-tudor_rose\" class=\"hyperref\"\u003eFigure \u003cspan class=\"ref\"\u003e18\u003c/span\u003e\u003c/a\u003e) as its \u003ca href=\"https://en.wikipedia.org/wiki/Heraldry\" target=\"_blank\" rel=\"noopener\"\u003eheraldic emblem\u003c/a\u003e.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Given this context, Shakespeare’s choice of floral imagery isn’t surprising, but in fact only a few commentators on the \u003cem\u003eSonnets\u003c/em\u003e have \u003ca href=\"https://hankwhittemore.wordpress.com/tag/sonnet-1/\" target=\"_blank\" rel=\"noopener\"\u003enoticed\u003c/a\u003e the seemingly obvious reference. ","cha-0_footnote-24":"It comes from “\u003cstrong\u003eg\u003c/strong\u003elobally search a \u003cstrong\u003er\u003c/strong\u003eegular \u003cstrong\u003ee\u003c/strong\u003expression and \u003cstrong\u003ep\u003c/strong\u003erint”, but \u003ca href=\"http://www.urbandictionary.com/define.php?term=slartibartfast\" target=\"_blank\" rel=\"noopener\"\u003eI told you it wasn’t important\u003c/a\u003e. ","cha-0_footnote-25":"Actually, “ROSE”, “RoSE”, “rOSE”, etc., all match as well, but “Rose” is the likeliest candidate.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Confirming this hunch is left as an exercise (\u003ca href=\"command_line_fragment.html#sec-exercises_grep\" class=\"hyperref\"\u003eSection \u003cspan class=\"ref\"\u003e3.4.1\u003c/span\u003e\u003c/a\u003e). ","cha-0_footnote-26":"Copyright © Randall Munroe and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.5/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution-NonCommercial 2.5 Generic\u003c/a\u003e license. ","cha-0_footnote-27":"My directory has a huge number of text files, ’cause that’s just how I roll, so the command I ran was actually \u003ccode\u003efind .\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e -name ’*.txt’ | grep text_files\u003c/code\u003e, which filters out anything that doesn’t match the directory being used in this tutorial. ","cha-0_footnote-28":"Image retrieved from https://www.flickr.com/photos/whatleydude/13950241545 on 2015-07-22.\u003cspan class=\"intersentencespace\"\u003e\u003c/span\u003e Copyright © 2014 by James Whatley and used unaltered under the terms of the \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\" target=\"_blank\" rel=\"noopener\"\u003eCreative Commons Attribution 2.0 Generic\u003c/a\u003e license. "},
      s3_path_prefix: "636/learn_enough_command_line",
      custom_math: "\"ccby\": \"\\\\href{https://creativecommons.org/licenses/by/2.0/}{Creative Commons Attribution 2.0 Generic}\",\n\"ccbysa\": \"\\\\href{https://creativecommons.org/licenses/by-sa/2.0/}{Creative Commons Attribution-ShareAlike 2.0 Generic}\",\n\"xkcduse\": \"Copyright © Randall Munroe and used unaltered under the terms of the \\\\href{https://creativecommons.org/licenses/by-nc/2.5/}{Creative Commons Attribution-NonCommercial 2.5 Generic} license.\""
    });
  });
  
  $(document).ready(function() {
    bookScroll();
  });
</script>


<footer class="footer">
<nav class="footer-nav">
<a class="logoLink artLogo" href="https://www.learnenough.com/"><div class="svg le-logo"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 801 1041" style="enable-background:new 0 0 801 1041;" xml:space="preserve">
<path d="M569.9,478.6l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H410.5l-3.5,3.5v358.6l1,2.5l24.3,24.3l1.9,0.5l0.5,0.5h135.1l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H488v-89.9h77l3.5-3.5v-41.7l-1-2.5l-24.3-24.3l-2.5-1H488v-81H569.9z M544.2,412.6l17.3,17.3H436.2L419,412.6H544.2z M414,417.6l17.3,17.3v348.7L414,766.3V417.6z M544.2,729.5l17.3,17.3H488v-17.3H544.2z M539.2,566.6l17.3,17.3H488v-17.3H539.2z M484.5,471.6l-3.5,3.5v112.3l3.5,3.5h77v34.7h-77l-3.5,3.5v121.2l3.5,3.5h81.9v34.7H438.3V436.9h128.1v34.7H484.5z"></path>
<path d="M401.5,747.8l-24.3-24.3l-2.5-1h-55.7V433.4l-0.2-0.2l-0.8-2.3l-24.3-24.3l-2.5-1h-49.7l-3.5,3.5v358.6l1,2.5l24.3,24.3l1.9,0.5l0.6,0.6H399l3.5-3.5v-41.7L401.5,747.8z M373.3,729.5l17.3,17.3h-71.5v-17.3H373.3z M307.1,429.9h-39.8l-17.3-17.3h39.8L307.1,429.9z M245.1,417.6l17.3,17.3v348.7l-17.3-17.3V417.6z M395.5,788.5H269.4V436.9h42.7v313.4l3.5,3.5h79.9V788.5z"></path>
<path d="M691.8,600.3c0-77.2-30-149.7-84.6-204.3c-47.3-47.3-108.2-76.2-173.9-83c0.4-22.2,0.6-35.3,0.6-35.7l-2.6-3.8c-1.8-0.6-3.5-2.2-5.1-4.2l5.1,0c1.8,0.1,22.1,0.8,33.2-11.2c5.5-6,8.5-14,8.5-23.4l0.1-13.3l-3.5-3.5l-16-0.1l-3.5,3.5l-0.1,13.3c0,3.3-0.7,5.5-2.4,7.3c-3.7,4-12.4,4.9-15.4,4.9l-11.9,0c1.4-13.4,3.7-39.7,3.9-72.2c0.1-34.4-5.7-68.9-6.6-73.7c4.9-5.8,7.6-13.5,7.6-21.6C425.2,62,413,47.9,398,47.8c0,0-0.1,0-0.1,0c-15,0-27.2,14-27.3,31.2c0,8.1,2.6,15.8,7.5,21.7c-0.9,4.8-7,39.3-7.2,73.6c-0.1,32.5,2,58.9,3.3,72.3l-11.1,0c-1.8-0.1-22.1-0.8-33.2,11.2c-5.5,6-8.5,14-8.5,23.4l-0.1,13.3l3.5,3.5l16.2,0.1l3.5-3.5l0.1-13.3c0-3.3,0.7-5.5,2.4-7.3c3.7-4,12.3-4.9,15.3-4.9l5.9,0c-1.6,1.9-3.4,3.5-5.2,4.1l-2.6,3.8c0,0.5,0.2,14.2,0.6,37.4c-61.2,8.9-117.8,37.1-162.3,81.6C144.1,450.6,114,523.1,114,600.3s30,149.7,84.6,204.3c49,49,112.4,78.2,180.7,83.7c6.4,96.9,11.7,103.7,14.1,106.6l3.3,2.6l2.9-2.6c2.4-2.9,7.8-9.7,14.3-105.9c73-2.7,141.3-32.4,193.2-84.4C661.8,750,691.8,677.5,691.8,600.3z M377.6,79.1c0.1-13.4,9.1-24.2,20.3-24.2c0,0,0,0,0.1,0c7.7,0,14.5,5.3,17.8,13l-10.6-4.3c1.1,1.6,2.1,3.4,2.8,5.5l9.4,3.8c0.5,2,0.7,4.2,0.7,6.4c0,0.2,0,0.5,0,0.7l-8.4-3.4c0.1,0.8,0.1,1.7,0.1,2.5c0,0.6,0,1.2-0.1,1.8l8,3.2c-0.4,2.1-1,4.2-1.8,6.1l-7.3-2.9c-0.4,1.3-0.9,2.6-1.4,3.7l6.8,2.8c-0.6,1-1.3,1.9-2,2.8c-0.7,0.8-1.5,1.6-2.3,2.3l-0.8-0.3l-5.3-2.2c-1.1,1.2-2.3,2.1-3.6,2.9l5.7,2.3c-2.5,1.2-5.1,1.9-7.9,1.9c-5.3,0-10.3-2.5-14.1-7C379.8,91.9,377.6,85.7,377.6,79.1z M377.9,174.4c0.1-28.2,4.4-57,6.3-68.1c4.1,2.7,8.7,4.2,13.5,4.2c0,0,0.1,0,0.1,0c4.8,0,9.4-1.4,13.5-4.1c0.2,1.3,0.5,2.9,0.7,4.7l-2.1-0.9l-2.9,3.1l5.7,2.3c0.3,2.2,0.6,4.6,1,7.3l-17.4-7.1c0.2,1.4,0.4,3,0.6,4.6l17.3,7c0.3,2.3,0.5,4.7,0.8,7.2l-17.2-7c0.2,1.5,0.3,3,0.5,4.5l17.2,7c0.2,2.3,0.4,4.7,0.6,7.1l-19.6-8c-1.7,0.1-3.7-0.4-3.7-0.4s0.8,1.7,1.9,4l21.7,8.8c0.2,2.3,0.3,4.7,0.4,7l-18.3-7.4c0.9,2.1,1.5,3.9,1.7,5l16.8,6.8c0.1,2.3,0.1,4.6,0.2,6.9l-16.6-6.7c0.1,1.5,0.1,2.9,0.1,4.4l16.5,6.7c0,0.4,0,0.8,0,1.2c0,1.9,0,3.8,0,5.7l-16.7-6.8c-1.1,1.7-5.8-0.2-5.8-0.2s0.4,1,0.9,2.5l21.6,8.7c0,2.3-0.1,4.6-0.2,6.8l-18.6-7.5c0.6,1.8,1.2,3.6,1.6,5l16.9,6.8c-0.1,2.3-0.2,4.6-0.3,6.8l-16.2-6.6c0,1.5-0.1,2.9-0.2,4.3l16.2,6.6c-0.1,2.3-0.2,4.5-0.4,6.7l-16.1-6.5c0,0.7-0.1,1.4-0.1,2.1c0,0.9-0.4,1.4-0.8,1.8l16.8,6.8c-0.1,2.3-0.3,4.5-0.5,6.7l-20-8.1c0.3,1.4,0.7,3.1,1.1,4.7l18.6,7.6c-0.2,2.3-0.4,4.6-0.6,6.6l-16.6-6.8c0.3,1.8,0.4,3.3,0.4,4.1c0,0.1,0,0.2,0,0.3l15.9,6.5c-0.2,2.5-0.5,4.7-0.7,6.6l-15.9-6.4c-0.1,1.5-0.3,2.9-0.4,4.2l8,3.2l-23.7-0.1C380,233.6,377.8,207,377.9,174.4z M362.3,262.1c-1.4,0-14,0.2-20.4,7.1c-2.8,3-4.2,7-4.2,12l0,9.8l-9.2,0l0-9.8c0-7.5,2.3-14,6.6-18.6l0,0c9.1-9.8,27.6-9,27.8-9l69.2,0.2c1.4,0,14.1-0.2,20.6-7.1c2.8-3,4.2-7,4.2-12l0-9.8l9,0l0,9.8c0,7.5-2.3,14-6.6,18.6c-9.1,9.8-27.6,9-27.8,9L362.3,262.1z M407.6,348.5l1.1,0.4h-1.1L407.6,348.5z M403.6,348.9h-5.3l-3.5-79.8l17.2,0.1L403.6,348.9z M408.1,344.3l0.7-6.6l15.9,6.4c0,1.6-0.1,3.1-0.1,4.7h-5.2L408.1,344.3z M409.2,333.6l0.7-6.6l15,6.1c0,2.2-0.1,4.5-0.1,6.8L409.2,333.6z M410.3,322.9l0.7-6.6l14.1,5.7c0,2.2-0.1,4.5-0.1,6.8L410.3,322.9z M411.5,312.2l0.7-6.6l13.1,5.3c0,2.2-0.1,4.5-0.1,6.8L411.5,312.2z M412.6,301.4l0.7-6.6l12.2,4.9c0,2.1-0.1,4.4-0.1,6.8L412.6,301.4z M413.7,290.7l0.7-6.6l11.3,4.6c0,2-0.1,4.3-0.1,6.8L413.7,290.7z M414.9,280l0.7-6.6l5.5,2.2c1.5,1.6,3.1,3,4.8,4c0,1.2,0,2.8-0.1,4.8L414.9,280z M416,269.3L416,269.3l0.3,0c0,0.1,0.1,0.1,0.1,0.2L416,269.3z M390.3,348.9h-20.7c-0.7-36.5-1.1-61.7-1.2-69.5c3.9-2.4,7.2-6.4,9.6-10.3l8.8,0L390.3,348.9z M392.6,951.2c-2-18-4.2-44.3-6.4-82.7c-0.3-5.2-0.6-10.6-0.9-16.2h7.4l2.5,115.9L392.6,951.2z M400.7,959.3l-0.1-20.9l1,0.2C401.4,940.3,400.8,957.7,400.7,959.3z M401.6,934.5l-1-0.4v-6.9l1.7,0.7C402.1,930.2,401.8,932.4,401.6,934.5z M402.7,923.8l-2.2-0.9v-6.9l2.8,1.1C403.2,919.4,403,921.6,402.7,923.8z M403.8,913l-3.2-1.3l0-6.9l3.8,1.6C404.2,908.7,404,910.9,403.8,913z M404.8,902.3l-4.2-1.7v-6.9l4.8,1.9C405.2,897.8,405,900.1,404.8,902.3z M405.7,891.4l-5.1-2.1l0-6.9l5.6,2.3C406,887,405.9,889.2,405.7,891.4z M406.5,880.6l-5.9-2.4l0-6.9l6.4,2.6C406.8,876.1,406.6,878.4,406.5,880.6z M407.3,868.6c0,0.4,0,0.7-0.1,1.1l-6.6-2.7l0-6.9l7,2.8C407.5,864.9,407.4,866.8,407.3,868.6z M407.9,858.8l-7.3-2.9l0-3.5h7.6C408.1,854.5,408,856.6,407.9,858.8z M414.5,880.9c0.6-8.8,1.2-18.3,1.7-28.6h27v-7h-91v7h25c0.6,10,1.1,19.2,1.6,27.8c-66-5.6-127.2-33.9-174.6-81.2C151.2,745.9,122,675.3,122,600.3s29.2-145.6,82.3-198.6c43.1-43.1,97.6-70.4,156.8-79.2c0.1,7.9,0.3,16.8,0.5,26.4h-16.1v7h109.8v-7h-22.7c0.2-10.2,0.4-19.6,0.5-27.9c63.6,6.8,122.6,34.8,168.4,80.7c53.1,53.1,82.3,123.6,82.3,198.6s-29.2,145.6-82.3,198.6C551.2,849.2,485.2,878.1,414.5,880.9z"></path>
</svg>
</div>
<span>LEARN ENOUGH</span>
</a><ul class="footer-sub-menu">
<li><a href="https://www.learnenough.com/story">The LE Story</a></li>
<li><a href="http://news.learnenough.com/">News</a></li>
<li><a href="https://www.learnenough.com/courses">Courses</a></li>
<li><a href="https://www.learnenough.com/login">Log In</a></li>
<li><a href="https://www.learnenough.com/subscribe">Register</a></li>
</ul>
</nav>
<ul class="footer-sub-menu">
<li><a href="https://www.learnenough.com/about">About</a></li>
<li><a href="https://www.learnenough.com/legal">Legal</a></li>
<li><a href="mailto:support@learnenough.com">Contact</a></li>
</ul>
</footer>

<script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54eea5d20a23b37d87000040.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);
  })();
</script>


</div>
</div>


<script>
  if (localStorage['headPush'] == 'yes') {
    $('.header-push').addClass('header-push-closed');
  };
</script>
<script>
  if (localStorage['sideOpen'] == 'no') {
    $('body').addClass('side-menu-closed');
  };
  bookCheckMobile();
</script>
<iframe name="stripeXDM_default284389_provider" id="stripeXDM_default284389_provider" aria-hidden="true" src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/channel.html" frameborder="0" style="position: absolute; top: -2000px; left: 0px;"></iframe><iframe src="./Learn Enough Command Line to Be Dangerous _ Learn Enough to Be Dangerous_files/outer.html" frameborder="0" allowtransparency="true" scrolling="no" tabindex="-1" aria-hidden="true" style="width: 1px !important; height: 1px !important; position: fixed !important; visibility: hidden !important; pointer-events: none !important;"></iframe><div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-family: MathJax_Size1, monospace;"></div></div></body></html>